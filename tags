!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALLOCATE_SIZE	obj/user/sbrktest.asm	/^#define ALLOCATE_SIZE 4096$/;"	d
ALLOCATE_SIZE	user/sbrktest.c	3;"	d	file:
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon7
ALT	kern/console.c	220;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	5;"	d	file:
ARRAY_SIZE	inc/types.h	70;"	d
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sbrktest.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sendpage.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	28;"	d	file:
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUSY	kern/lapic.c	30;"	d	file:
C	kern/console.c	287;"	d	file:
CAPSLOCK	kern/console.c	222;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	15;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	28;"	d	file:
COM_DLL	kern/console.c	32;"	d	file:
COM_DLM	kern/console.c	33;"	d	file:
COM_FCR	kern/console.c	37;"	d	file:
COM_IER	kern/console.c	34;"	d	file:
COM_IER_RDI	kern/console.c	35;"	d	file:
COM_IIR	kern/console.c	36;"	d	file:
COM_LCR	kern/console.c	38;"	d	file:
COM_LCR_DLAB	kern/console.c	39;"	d	file:
COM_LCR_WLEN8	kern/console.c	40;"	d	file:
COM_LSR	kern/console.c	45;"	d	file:
COM_LSR_DATA	kern/console.c	46;"	d	file:
COM_LSR_TSRE	kern/console.c	48;"	d	file:
COM_LSR_TXRDY	kern/console.c	47;"	d	file:
COM_MCR	kern/console.c	41;"	d	file:
COM_MCR_DTR	kern/console.c	43;"	d	file:
COM_MCR_OUT2	kern/console.c	44;"	d	file:
COM_MCR_RTS	kern/console.c	42;"	d	file:
COM_RX	kern/console.c	30;"	d	file:
COM_TX	kern/console.c	31;"	d	file:
CONSBUFSIZE	kern/console.c	390;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon6
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon6
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon6
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	219;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sbrktest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sendpage.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f
E0ESC	kern/console.c	226;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon4
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon4
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon4
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon4
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon4
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	17;"	d	file:
ERROR	kern/lapic.c	39;"	d	file:
ESR	kern/lapic.c	20;"	d	file:
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon3
E_EOF	inc/error.h	/^	E_EOF		,	\/\/ Unexpected end of file$/;"	e	enum:__anon3
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon3
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon3
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon3
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon3
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon3
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon3
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDB	GNUmakefile	/^GDB	:= $(GCCPREFIX)gdb$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INIT	kern/lapic.c	22;"	d	file:
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	137;"	d	file:
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_QUEUE_H	inc/queue.h	36;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=4$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEVEL	kern/lapic.c	27;"	d	file:
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LIST_EMPTY	inc/queue.h	142;"	d
LIST_ENTRY	inc/queue.h	129;"	d
LIST_FIRST	inc/queue.h	147;"	d
LIST_FOREACH	inc/queue.h	160;"	d
LIST_HEAD	inc/queue.h	109;"	d
LIST_HEAD_INITIALIZER	inc/queue.h	118;"	d
LIST_INIT	inc/queue.h	168;"	d
LIST_INSERT_AFTER	inc/queue.h	177;"	d
LIST_INSERT_BEFORE	inc/queue.h	190;"	d
LIST_INSERT_HEAD	inc/queue.h	201;"	d
LIST_NEXT	inc/queue.h	153;"	d
LIST_REMOVE	inc/queue.h	212;"	d
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOG2NENV	inc/env.h	28;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	194;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon3
MAX_IRQS	kern/picirq.h	9;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	43;"	d
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	142;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCPU	kern/cpu.h	11;"	d
NENV	inc/env.h	29;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	216;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon2
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	223;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_EXT16HI	kern/kclock.h	24;"	d
NVRAM_EXT16LO	kern/kclock.h	23;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	86;"	d
O_CREAT	inc/lib.h	88;"	d
O_EXCL	inc/lib.h	90;"	d
O_MKDIR	inc/lib.h	91;"	d
O_RDONLY	inc/lib.h	83;"	d
O_RDWR	inc/lib.h	85;"	d
O_TRUNC	inc/lib.h	89;"	d
O_WRONLY	inc/lib.h	84;"	d
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Mon Oct 8 21:31:51 PDT 2018$/;"	m
PADDR	kern/pmap.h	26;"	d
PCINT	kern/lapic.c	36;"	d	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	137;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	74;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu >\/dev\/null 2>&1; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -drive file=$(OBJDIR)\/kern\/kernel.img,index=0,media=disk,format=raw -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	inc/types.h	64;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	224;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	218;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STRING_SIZE	obj/user/sbrktest.asm	/^#define STRING_SIZE	  64$/;"	d
STRING_SIZE	user/sbrktest.c	4;"	d	file:
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon2
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon2
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon2
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon2
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon2
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon2
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon2
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon2
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon2
SYS_map_kernel_page	inc/syscall.h	/^    SYS_map_kernel_page,$/;"	e	enum:__anon2
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon2
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon2
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon2
SYS_sbrk	inc/syscall.h	/^    SYS_sbrk,$/;"	e	enum:__anon2
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon2
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TDCR	kern/lapic.c	43;"	d	file:
TEMP_ADDR	obj/user/sendpage.asm	/^#define TEMP_ADDR	((char*)0xa00000)$/;"	d
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	obj/user/sendpage.asm	/^#define TEMP_ADDR_CHILD	((char*)0xb00000)$/;"	d
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TICR	kern/lapic.c	41;"	d	file:
TIMER	kern/lapic.c	33;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
UENVS	inc/memlayout.h	116;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UPAGES	inc/memlayout.h	114;"	d
USED	inc/lib.h	21;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VER	kern/lapic.c	15;"	d	file:
WHITESPACE	kern/monitor.c	193;"	d	file:
X1	kern/lapic.c	34;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_alltraps	obj/kern/kernel.asm	/^_alltraps:$/;"	l
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/evilhello2.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/sbrktest.asm	/^_start:$/;"	l
_start	obj/user/sendpage.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sbrktest.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sbrktest.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sendpage.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sendpage.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/sbrktest.asm	/^args_exist:$/;"	l
args_exist	obj/user/sendpage.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^                        base = 8;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^                        base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^                        base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^                        base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^                        base = 8;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^                        base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^                        base = 8;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^                        base = 8;$/;"	d
base	obj/user/evilhello2.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello2.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello2.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello2.asm	/^                        base = 8;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^                        base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^                        base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^                        base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^                        base = 8;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^                        base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^                        base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^                        base = 8;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^                        base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^                        base = 8;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^                        base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^                        base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^                        base = 8;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^                        base = 8;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^                        base = 8;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^                        base = 8;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^                        base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^                        base = 8;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^                        base = 8;$/;"	d
base	obj/user/sbrktest.asm	/^			base = 10;$/;"	d
base	obj/user/sbrktest.asm	/^			base = 16;$/;"	d
base	obj/user/sbrktest.asm	/^		base = 10;$/;"	d
base	obj/user/sbrktest.asm	/^                        base = 8;$/;"	d
base	obj/user/sendpage.asm	/^			base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 16;$/;"	d
base	obj/user/sendpage.asm	/^		base = 10;$/;"	d
base	obj/user/sendpage.asm	/^                        base = 8;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^                        base = 8;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^                        base = 8;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^                        base = 8;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^                        base = 8;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^                        base = 8;$/;"	d
basemem	obj/kern/kernel.asm	/^	basemem = nvram_read(NVRAM_BASELO);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sbrktest.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sendpage.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
boot_map_region_large	kern/pmap.c	/^boot_map_region_large(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon5	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sbrktest.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sendpage.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
call_fun_ptr	user/evilhello2.c	/^void call_fun_ptr()$/;"	f
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sbrktest.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sendpage.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/evilhello2.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/sbrktest.asm	/^char *$/;"	l
char	obj/user/sendpage.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
check_va2pa_large	kern/pmap.c	/^check_va2pa_large(pde_t *pgdir, uintptr_t va)$/;"	f	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sbrktest.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sendpage.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon5	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sbrktest.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sbrktest.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sendpage.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sendpage.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^    curenv = e;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello2.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/sbrktest.asm	/^	d = dst;$/;"	d
d	obj/user/sendpage.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	    default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sbrktest.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sbrktest.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sbrktest.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
do_overflow	kern/monitor.c	/^do_overflow(void)$/;"	f
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sbrktest.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sendpage.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:
eip	obj/kern/kernel.asm	/^        eip = *((uint32_t *)ebp + 1);$/;"	d
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
end	obj/user/sbrktest.asm	/^	end = sys_sbrk(ALLOCATE_SIZE);$/;"	d
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry	obj/user/evilhello2.asm	/^    entry = gdt + index; $/;"	d
entry	user/evilhello2.c	/^struct Segdesc *entry;$/;"	v	typeref:struct:Segdesc
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_free_list	obj/kern/kernel.asm	/^    env_free_list = envs;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pbrk	inc/env.h	/^    void *env_pbrk;         \/\/ Program break, the top of the process's data segment$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/sbrktest.asm	/^envid_t$/;"	l
envid_t	obj/user/sendpage.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^    envs = (struct Env *)boot_alloc(NENV*sizeof(struct Env));$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sbrktest.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sendpage.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
evil	user/evilhello2.c	/^void evil()$/;"	f
exit	lib/exit.c	/^exit(void)$/;"	f
ext16mem	obj/kern/kernel.asm	/^	ext16mem = nvram_read(NVRAM_EXT16LO) * 64;$/;"	d
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
extmem	obj/kern/kernel.asm	/^	extmem = nvram_read(NVRAM_EXTLO);$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4                   	.byte 0xe4$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 d0 11 00       	mov    $0x11d000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 d0 11 f0       	mov    $0xf011d000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 5e 00 00 00       	call   f010009c <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_panic>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0100048	obj/kern/kernel.asm	/^f0100048:	83 3d 00 0f 24 f0 00 	cmpl   $0x0,0xf0240f00$/;"	l
f010004f	obj/kern/kernel.asm	/^f010004f:	74 0f                	je     f0100060 <_panic+0x20>$/;"	l
f0100051	obj/kern/kernel.asm	/^f0100051:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100054	obj/kern/kernel.asm	/^f0100054:	6a 00                	push   $0x0$/;"	l
f0100056	obj/kern/kernel.asm	/^f0100056:	e8 d9 08 00 00       	call   f0100934 <monitor>$/;"	l
f010005b	obj/kern/kernel.asm	/^f010005b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010005e	obj/kern/kernel.asm	/^f010005e:	eb f1                	jmp    f0100051 <_panic+0x11>$/;"	l
f0100060	obj/kern/kernel.asm	/^f0100060:	89 35 00 0f 24 f0    	mov    %esi,0xf0240f00$/;"	l
f0100066	obj/kern/kernel.asm	/^f0100066:	fa                   	cli    $/;"	l
f0100067	obj/kern/kernel.asm	/^f0100067:	fc                   	cld    $/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	e8 df 4b 00 00       	call   f0104c4f <cpunum>$/;"	l
f0100070	obj/kern/kernel.asm	/^f0100070:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100073	obj/kern/kernel.asm	/^f0100073:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	50                   	push   %eax$/;"	l
f0100077	obj/kern/kernel.asm	/^f0100077:	68 a0 52 10 f0       	push   $0xf01052a0$/;"	l
f010007c	obj/kern/kernel.asm	/^f010007c:	e8 04 2d 00 00       	call   f0102d85 <cprintf>$/;"	l
f0100081	obj/kern/kernel.asm	/^f0100081:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100084	obj/kern/kernel.asm	/^f0100084:	53                   	push   %ebx$/;"	l
f0100085	obj/kern/kernel.asm	/^f0100085:	56                   	push   %esi$/;"	l
f0100086	obj/kern/kernel.asm	/^f0100086:	e8 d4 2c 00 00       	call   f0102d5f <vcprintf>$/;"	l
f010008b	obj/kern/kernel.asm	/^f010008b:	c7 04 24 a1 5e 10 f0 	movl   $0xf0105ea1,(%esp)$/;"	l
f0100092	obj/kern/kernel.asm	/^f0100092:	e8 ee 2c 00 00       	call   f0102d85 <cprintf>$/;"	l
f0100097	obj/kern/kernel.asm	/^f0100097:	83 c4 10             	add    $0x10,%esp$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	eb b5                	jmp    f0100051 <_panic+0x11>$/;"	l
f010009c	obj/kern/kernel.asm	/^f010009c <i386_init>:$/;"	l
f010009c	obj/kern/kernel.asm	/^f010009c:	55                   	push   %ebp$/;"	l
f010009d	obj/kern/kernel.asm	/^f010009d:	89 e5                	mov    %esp,%ebp$/;"	l
f010009f	obj/kern/kernel.asm	/^f010009f:	53                   	push   %ebx$/;"	l
f01000a0	obj/kern/kernel.asm	/^f01000a0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01000a3	obj/kern/kernel.asm	/^f01000a3:	b8 08 20 28 f0       	mov    $0xf0282008,%eax$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8:	2d 00 00 24 f0       	sub    $0xf0240000,%eax$/;"	l
f01000ad	obj/kern/kernel.asm	/^f01000ad:	50                   	push   %eax$/;"	l
f01000ae	obj/kern/kernel.asm	/^f01000ae:	6a 00                	push   $0x0$/;"	l
f01000b0	obj/kern/kernel.asm	/^f01000b0:	68 00 00 24 f0       	push   $0xf0240000$/;"	l
f01000b5	obj/kern/kernel.asm	/^f01000b5:	e8 71 45 00 00       	call   f010462b <memset>$/;"	l
f01000ba	obj/kern/kernel.asm	/^f01000ba:	e8 70 05 00 00       	call   f010062f <cons_init>$/;"	l
f01000bf	obj/kern/kernel.asm	/^f01000bf:	e8 4e 0f 00 00       	call   f0101012 <mem_init>$/;"	l
f01000c4	obj/kern/kernel.asm	/^f01000c4:	e8 99 24 00 00       	call   f0102562 <env_init>$/;"	l
f01000c9	obj/kern/kernel.asm	/^f01000c9:	e8 bf 2d 00 00       	call   f0102e8d <trap_init>$/;"	l
f01000ce	obj/kern/kernel.asm	/^f01000ce:	e8 6a 48 00 00       	call   f010493d <mp_init>$/;"	l
f01000d3	obj/kern/kernel.asm	/^f01000d3:	e8 91 4b 00 00       	call   f0104c69 <lapic_init>$/;"	l
f01000d8	obj/kern/kernel.asm	/^f01000d8:	e8 c1 2b 00 00       	call   f0102c9e <pic_init>$/;"	l
f01000dd	obj/kern/kernel.asm	/^f01000dd:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000e0	obj/kern/kernel.asm	/^f01000e0:	83 3d 08 0f 24 f0 07 	cmpl   $0x7,0xf0240f08$/;"	l
f01000e7	obj/kern/kernel.asm	/^f01000e7:	76 27                	jbe    f0100110 <i386_init+0x74>$/;"	l
f01000e9	obj/kern/kernel.asm	/^f01000e9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01000ec	obj/kern/kernel.asm	/^f01000ec:	b8 a2 48 10 f0       	mov    $0xf01048a2,%eax$/;"	l
f01000f1	obj/kern/kernel.asm	/^f01000f1:	2d 28 48 10 f0       	sub    $0xf0104828,%eax$/;"	l
f01000f6	obj/kern/kernel.asm	/^f01000f6:	50                   	push   %eax$/;"	l
f01000f7	obj/kern/kernel.asm	/^f01000f7:	68 28 48 10 f0       	push   $0xf0104828$/;"	l
f01000fc	obj/kern/kernel.asm	/^f01000fc:	68 00 70 00 f0       	push   $0xf0007000$/;"	l
f0100101	obj/kern/kernel.asm	/^f0100101:	e8 72 45 00 00       	call   f0104678 <memmove>$/;"	l
f0100106	obj/kern/kernel.asm	/^f0100106:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100109	obj/kern/kernel.asm	/^f0100109:	bb 20 10 24 f0       	mov    $0xf0241020,%ebx$/;"	l
f010010e	obj/kern/kernel.asm	/^f010010e:	eb 19                	jmp    f0100129 <i386_init+0x8d>$/;"	l
f0100110	obj/kern/kernel.asm	/^f0100110:	68 00 70 00 00       	push   $0x7000$/;"	l
f0100115	obj/kern/kernel.asm	/^f0100115:	68 c4 52 10 f0       	push   $0xf01052c4$/;"	l
f010011a	obj/kern/kernel.asm	/^f010011a:	6a 5e                	push   $0x5e$/;"	l
f010011c	obj/kern/kernel.asm	/^f010011c:	68 0c 53 10 f0       	push   $0xf010530c$/;"	l
f0100121	obj/kern/kernel.asm	/^f0100121:	e8 1a ff ff ff       	call   f0100040 <_panic>$/;"	l
f0100126	obj/kern/kernel.asm	/^f0100126:	83 c3 74             	add    $0x74,%ebx$/;"	l
f0100129	obj/kern/kernel.asm	/^f0100129:	6b 05 c4 13 24 f0 74 	imul   $0x74,0xf02413c4,%eax$/;"	l
f0100130	obj/kern/kernel.asm	/^f0100130:	05 20 10 24 f0       	add    $0xf0241020,%eax$/;"	l
f0100135	obj/kern/kernel.asm	/^f0100135:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100137	obj/kern/kernel.asm	/^f0100137:	73 4c                	jae    f0100185 <i386_init+0xe9>$/;"	l
f0100139	obj/kern/kernel.asm	/^f0100139:	e8 11 4b 00 00       	call   f0104c4f <cpunum>$/;"	l
f010013e	obj/kern/kernel.asm	/^f010013e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100141	obj/kern/kernel.asm	/^f0100141:	05 20 10 24 f0       	add    $0xf0241020,%eax$/;"	l
f0100146	obj/kern/kernel.asm	/^f0100146:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100148	obj/kern/kernel.asm	/^f0100148:	74 dc                	je     f0100126 <i386_init+0x8a>$/;"	l
f010014a	obj/kern/kernel.asm	/^f010014a:	89 d8                	mov    %ebx,%eax$/;"	l
f010014c	obj/kern/kernel.asm	/^f010014c:	2d 20 10 24 f0       	sub    $0xf0241020,%eax$/;"	l
f0100151	obj/kern/kernel.asm	/^f0100151:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0100154	obj/kern/kernel.asm	/^f0100154:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f010015a	obj/kern/kernel.asm	/^f010015a:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f010015d	obj/kern/kernel.asm	/^f010015d:	05 00 a0 24 f0       	add    $0xf024a000,%eax$/;"	l
f0100162	obj/kern/kernel.asm	/^f0100162:	a3 04 0f 24 f0       	mov    %eax,0xf0240f04$/;"	l
f0100167	obj/kern/kernel.asm	/^f0100167:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010016a	obj/kern/kernel.asm	/^f010016a:	68 00 70 00 00       	push   $0x7000$/;"	l
f010016f	obj/kern/kernel.asm	/^f010016f:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100172	obj/kern/kernel.asm	/^f0100172:	50                   	push   %eax$/;"	l
f0100173	obj/kern/kernel.asm	/^f0100173:	e8 42 4c 00 00       	call   f0104dba <lapic_startap>$/;"	l
f0100178	obj/kern/kernel.asm	/^f0100178:	83 c4 10             	add    $0x10,%esp$/;"	l
f010017b	obj/kern/kernel.asm	/^f010017b:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f010017e	obj/kern/kernel.asm	/^f010017e:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100181	obj/kern/kernel.asm	/^f0100181:	75 f8                	jne    f010017b <i386_init+0xdf>$/;"	l
f0100183	obj/kern/kernel.asm	/^f0100183:	eb a1                	jmp    f0100126 <i386_init+0x8a>$/;"	l
f0100185	obj/kern/kernel.asm	/^f0100185:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100188	obj/kern/kernel.asm	/^f0100188:	6a 00                	push   $0x0$/;"	l
f010018a	obj/kern/kernel.asm	/^f010018a:	68 d4 f3 11 f0       	push   $0xf011f3d4$/;"	l
f010018f	obj/kern/kernel.asm	/^f010018f:	e8 a7 25 00 00       	call   f010273b <env_create>$/;"	l
f0100194	obj/kern/kernel.asm	/^f0100194:	e8 4d 34 00 00       	call   f01035e6 <sched_yield>$/;"	l
f0100199	obj/kern/kernel.asm	/^f0100199 <mp_main>:$/;"	l
f0100199	obj/kern/kernel.asm	/^f0100199:	55                   	push   %ebp$/;"	l
f010019a	obj/kern/kernel.asm	/^f010019a:	89 e5                	mov    %esp,%ebp$/;"	l
f010019c	obj/kern/kernel.asm	/^f010019c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010019f	obj/kern/kernel.asm	/^f010019f:	a1 0c 0f 24 f0       	mov    0xf0240f0c,%eax$/;"	l
f01001a4	obj/kern/kernel.asm	/^f01001a4:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01001a9	obj/kern/kernel.asm	/^f01001a9:	77 12                	ja     f01001bd <mp_main+0x24>$/;"	l
f01001ab	obj/kern/kernel.asm	/^f01001ab:	50                   	push   %eax$/;"	l
f01001ac	obj/kern/kernel.asm	/^f01001ac:	68 e8 52 10 f0       	push   $0xf01052e8$/;"	l
f01001b1	obj/kern/kernel.asm	/^f01001b1:	6a 75                	push   $0x75$/;"	l
f01001b3	obj/kern/kernel.asm	/^f01001b3:	68 0c 53 10 f0       	push   $0xf010530c$/;"	l
f01001b8	obj/kern/kernel.asm	/^f01001b8:	e8 83 fe ff ff       	call   f0100040 <_panic>$/;"	l
f01001bd	obj/kern/kernel.asm	/^f01001bd:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01001c2	obj/kern/kernel.asm	/^f01001c2:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01001c5	obj/kern/kernel.asm	/^f01001c5:	e8 85 4a 00 00       	call   f0104c4f <cpunum>$/;"	l
f01001ca	obj/kern/kernel.asm	/^f01001ca:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01001cd	obj/kern/kernel.asm	/^f01001cd:	50                   	push   %eax$/;"	l
f01001ce	obj/kern/kernel.asm	/^f01001ce:	68 18 53 10 f0       	push   $0xf0105318$/;"	l
f01001d3	obj/kern/kernel.asm	/^f01001d3:	e8 ad 2b 00 00       	call   f0102d85 <cprintf>$/;"	l
f01001d8	obj/kern/kernel.asm	/^f01001d8:	e8 8c 4a 00 00       	call   f0104c69 <lapic_init>$/;"	l
f01001dd	obj/kern/kernel.asm	/^f01001dd:	e8 50 23 00 00       	call   f0102532 <env_init_percpu>$/;"	l
f01001e2	obj/kern/kernel.asm	/^f01001e2:	e8 40 2c 00 00       	call   f0102e27 <trap_init_percpu>$/;"	l
f01001e7	obj/kern/kernel.asm	/^f01001e7:	e8 63 4a 00 00       	call   f0104c4f <cpunum>$/;"	l
f01001ec	obj/kern/kernel.asm	/^f01001ec:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f01001ef	obj/kern/kernel.asm	/^f01001ef:	83 c2 04             	add    $0x4,%edx$/;"	l
f01001f2	obj/kern/kernel.asm	/^f01001f2:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01001f7	obj/kern/kernel.asm	/^f01001f7:	f0 87 82 20 10 24 f0 	lock xchg %eax,-0xfdbefe0(%edx)$/;"	l
f01001fe	obj/kern/kernel.asm	/^f01001fe:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100201	obj/kern/kernel.asm	/^f0100201:	eb fe                	jmp    f0100201 <mp_main+0x68>$/;"	l
f0100203	obj/kern/kernel.asm	/^f0100203 <_warn>:$/;"	l
f0100203	obj/kern/kernel.asm	/^f0100203:	55                   	push   %ebp$/;"	l
f0100204	obj/kern/kernel.asm	/^f0100204:	89 e5                	mov    %esp,%ebp$/;"	l
f0100206	obj/kern/kernel.asm	/^f0100206:	53                   	push   %ebx$/;"	l
f0100207	obj/kern/kernel.asm	/^f0100207:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010020a	obj/kern/kernel.asm	/^f010020a:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010020d	obj/kern/kernel.asm	/^f010020d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100210	obj/kern/kernel.asm	/^f0100210:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100213	obj/kern/kernel.asm	/^f0100213:	68 2e 53 10 f0       	push   $0xf010532e$/;"	l
f0100218	obj/kern/kernel.asm	/^f0100218:	e8 68 2b 00 00       	call   f0102d85 <cprintf>$/;"	l
f010021d	obj/kern/kernel.asm	/^f010021d:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100220	obj/kern/kernel.asm	/^f0100220:	53                   	push   %ebx$/;"	l
f0100221	obj/kern/kernel.asm	/^f0100221:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0100224	obj/kern/kernel.asm	/^f0100224:	e8 36 2b 00 00       	call   f0102d5f <vcprintf>$/;"	l
f0100229	obj/kern/kernel.asm	/^f0100229:	c7 04 24 a1 5e 10 f0 	movl   $0xf0105ea1,(%esp)$/;"	l
f0100230	obj/kern/kernel.asm	/^f0100230:	e8 50 2b 00 00       	call   f0102d85 <cprintf>$/;"	l
f0100235	obj/kern/kernel.asm	/^f0100235:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100238	obj/kern/kernel.asm	/^f0100238:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010023b	obj/kern/kernel.asm	/^f010023b:	c9                   	leave  $/;"	l
f010023c	obj/kern/kernel.asm	/^f010023c:	c3                   	ret    $/;"	l
f010023d	obj/kern/kernel.asm	/^f010023d <serial_proc_data>:$/;"	l
f010023d	obj/kern/kernel.asm	/^f010023d:	55                   	push   %ebp$/;"	l
f010023e	obj/kern/kernel.asm	/^f010023e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100240	obj/kern/kernel.asm	/^f0100240:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100245	obj/kern/kernel.asm	/^f0100245:	ec                   	in     (%dx),%al$/;"	l
f0100246	obj/kern/kernel.asm	/^f0100246:	a8 01                	test   $0x1,%al$/;"	l
f0100248	obj/kern/kernel.asm	/^f0100248:	74 0b                	je     f0100255 <serial_proc_data+0x18>$/;"	l
f010024a	obj/kern/kernel.asm	/^f010024a:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f010024f	obj/kern/kernel.asm	/^f010024f:	ec                   	in     (%dx),%al$/;"	l
f0100250	obj/kern/kernel.asm	/^f0100250:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100253	obj/kern/kernel.asm	/^f0100253:	5d                   	pop    %ebp$/;"	l
f0100254	obj/kern/kernel.asm	/^f0100254:	c3                   	ret    $/;"	l
f0100255	obj/kern/kernel.asm	/^f0100255:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010025a	obj/kern/kernel.asm	/^f010025a:	eb f7                	jmp    f0100253 <serial_proc_data+0x16>$/;"	l
f010025c	obj/kern/kernel.asm	/^f010025c <cons_intr>:$/;"	l
f010025c	obj/kern/kernel.asm	/^f010025c:	55                   	push   %ebp$/;"	l
f010025d	obj/kern/kernel.asm	/^f010025d:	89 e5                	mov    %esp,%ebp$/;"	l
f010025f	obj/kern/kernel.asm	/^f010025f:	53                   	push   %ebx$/;"	l
f0100260	obj/kern/kernel.asm	/^f0100260:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100263	obj/kern/kernel.asm	/^f0100263:	89 c3                	mov    %eax,%ebx$/;"	l
f0100265	obj/kern/kernel.asm	/^f0100265:	ff d3                	call   *%ebx$/;"	l
f0100267	obj/kern/kernel.asm	/^f0100267:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010026a	obj/kern/kernel.asm	/^f010026a:	74 2d                	je     f0100299 <cons_intr+0x3d>$/;"	l
f010026c	obj/kern/kernel.asm	/^f010026c:	85 c0                	test   %eax,%eax$/;"	l
f010026e	obj/kern/kernel.asm	/^f010026e:	74 f5                	je     f0100265 <cons_intr+0x9>$/;"	l
f0100270	obj/kern/kernel.asm	/^f0100270:	8b 0d 24 02 24 f0    	mov    0xf0240224,%ecx$/;"	l
f0100276	obj/kern/kernel.asm	/^f0100276:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f0100279	obj/kern/kernel.asm	/^f0100279:	89 15 24 02 24 f0    	mov    %edx,0xf0240224$/;"	l
f010027f	obj/kern/kernel.asm	/^f010027f:	88 81 20 00 24 f0    	mov    %al,-0xfdbffe0(%ecx)$/;"	l
f0100285	obj/kern/kernel.asm	/^f0100285:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f010028b	obj/kern/kernel.asm	/^f010028b:	75 d8                	jne    f0100265 <cons_intr+0x9>$/;"	l
f010028d	obj/kern/kernel.asm	/^f010028d:	c7 05 24 02 24 f0 00 	movl   $0x0,0xf0240224$/;"	l
f0100294	obj/kern/kernel.asm	/^f0100294:	00 00 00 $/;"	l
f0100297	obj/kern/kernel.asm	/^f0100297:	eb cc                	jmp    f0100265 <cons_intr+0x9>$/;"	l
f0100299	obj/kern/kernel.asm	/^f0100299:	83 c4 04             	add    $0x4,%esp$/;"	l
f010029c	obj/kern/kernel.asm	/^f010029c:	5b                   	pop    %ebx$/;"	l
f010029d	obj/kern/kernel.asm	/^f010029d:	5d                   	pop    %ebp$/;"	l
f010029e	obj/kern/kernel.asm	/^f010029e:	c3                   	ret    $/;"	l
f010029f	obj/kern/kernel.asm	/^f010029f <kbd_proc_data>:$/;"	l
f010029f	obj/kern/kernel.asm	/^f010029f:	55                   	push   %ebp$/;"	l
f01002a0	obj/kern/kernel.asm	/^f01002a0:	89 e5                	mov    %esp,%ebp$/;"	l
f01002a2	obj/kern/kernel.asm	/^f01002a2:	53                   	push   %ebx$/;"	l
f01002a3	obj/kern/kernel.asm	/^f01002a3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01002a6	obj/kern/kernel.asm	/^f01002a6:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f01002ab	obj/kern/kernel.asm	/^f01002ab:	ec                   	in     (%dx),%al$/;"	l
f01002ac	obj/kern/kernel.asm	/^f01002ac:	a8 01                	test   $0x1,%al$/;"	l
f01002ae	obj/kern/kernel.asm	/^f01002ae:	0f 84 fa 00 00 00    	je     f01003ae <kbd_proc_data+0x10f>$/;"	l
f01002b4	obj/kern/kernel.asm	/^f01002b4:	a8 20                	test   $0x20,%al$/;"	l
f01002b6	obj/kern/kernel.asm	/^f01002b6:	0f 85 f9 00 00 00    	jne    f01003b5 <kbd_proc_data+0x116>$/;"	l
f01002bc	obj/kern/kernel.asm	/^f01002bc:	ba 60 00 00 00       	mov    $0x60,%edx$/;"	l
f01002c1	obj/kern/kernel.asm	/^f01002c1:	ec                   	in     (%dx),%al$/;"	l
f01002c2	obj/kern/kernel.asm	/^f01002c2:	89 c2                	mov    %eax,%edx$/;"	l
f01002c4	obj/kern/kernel.asm	/^f01002c4:	3c e0                	cmp    $0xe0,%al$/;"	l
f01002c6	obj/kern/kernel.asm	/^f01002c6:	0f 84 8e 00 00 00    	je     f010035a <kbd_proc_data+0xbb>$/;"	l
f01002cc	obj/kern/kernel.asm	/^f01002cc:	84 c0                	test   %al,%al$/;"	l
f01002ce	obj/kern/kernel.asm	/^f01002ce:	0f 88 99 00 00 00    	js     f010036d <kbd_proc_data+0xce>$/;"	l
f01002d4	obj/kern/kernel.asm	/^f01002d4:	8b 0d 00 00 24 f0    	mov    0xf0240000,%ecx$/;"	l
f01002da	obj/kern/kernel.asm	/^f01002da:	f6 c1 40             	test   $0x40,%cl$/;"	l
f01002dd	obj/kern/kernel.asm	/^f01002dd:	74 0e                	je     f01002ed <kbd_proc_data+0x4e>$/;"	l
f01002df	obj/kern/kernel.asm	/^f01002df:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f01002e2	obj/kern/kernel.asm	/^f01002e2:	89 c2                	mov    %eax,%edx$/;"	l
f01002e4	obj/kern/kernel.asm	/^f01002e4:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f01002e7	obj/kern/kernel.asm	/^f01002e7:	89 0d 00 00 24 f0    	mov    %ecx,0xf0240000$/;"	l
f01002ed	obj/kern/kernel.asm	/^f01002ed:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01002f0	obj/kern/kernel.asm	/^f01002f0:	0f b6 82 a0 54 10 f0 	movzbl -0xfefab60(%edx),%eax$/;"	l
f01002f7	obj/kern/kernel.asm	/^f01002f7:	0b 05 00 00 24 f0    	or     0xf0240000,%eax$/;"	l
f01002fd	obj/kern/kernel.asm	/^f01002fd:	0f b6 8a a0 53 10 f0 	movzbl -0xfefac60(%edx),%ecx$/;"	l
f0100304	obj/kern/kernel.asm	/^f0100304:	31 c8                	xor    %ecx,%eax$/;"	l
f0100306	obj/kern/kernel.asm	/^f0100306:	a3 00 00 24 f0       	mov    %eax,0xf0240000$/;"	l
f010030b	obj/kern/kernel.asm	/^f010030b:	89 c1                	mov    %eax,%ecx$/;"	l
f010030d	obj/kern/kernel.asm	/^f010030d:	83 e1 03             	and    $0x3,%ecx$/;"	l
f0100310	obj/kern/kernel.asm	/^f0100310:	8b 0c 8d 80 53 10 f0 	mov    -0xfefac80(,%ecx,4),%ecx$/;"	l
f0100317	obj/kern/kernel.asm	/^f0100317:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f010031b	obj/kern/kernel.asm	/^f010031b:	0f b6 da             	movzbl %dl,%ebx$/;"	l
f010031e	obj/kern/kernel.asm	/^f010031e:	a8 08                	test   $0x8,%al$/;"	l
f0100320	obj/kern/kernel.asm	/^f0100320:	74 0d                	je     f010032f <kbd_proc_data+0x90>$/;"	l
f0100322	obj/kern/kernel.asm	/^f0100322:	89 da                	mov    %ebx,%edx$/;"	l
f0100324	obj/kern/kernel.asm	/^f0100324:	8d 4b 9f             	lea    -0x61(%ebx),%ecx$/;"	l
f0100327	obj/kern/kernel.asm	/^f0100327:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f010032a	obj/kern/kernel.asm	/^f010032a:	77 74                	ja     f01003a0 <kbd_proc_data+0x101>$/;"	l
f010032c	obj/kern/kernel.asm	/^f010032c:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f010032f	obj/kern/kernel.asm	/^f010032f:	f7 d0                	not    %eax$/;"	l
f0100331	obj/kern/kernel.asm	/^f0100331:	a8 06                	test   $0x6,%al$/;"	l
f0100333	obj/kern/kernel.asm	/^f0100333:	75 31                	jne    f0100366 <kbd_proc_data+0xc7>$/;"	l
f0100335	obj/kern/kernel.asm	/^f0100335:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f010033b	obj/kern/kernel.asm	/^f010033b:	75 29                	jne    f0100366 <kbd_proc_data+0xc7>$/;"	l
f010033d	obj/kern/kernel.asm	/^f010033d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100340	obj/kern/kernel.asm	/^f0100340:	68 48 53 10 f0       	push   $0xf0105348$/;"	l
f0100345	obj/kern/kernel.asm	/^f0100345:	e8 3b 2a 00 00       	call   f0102d85 <cprintf>$/;"	l
f010034a	obj/kern/kernel.asm	/^f010034a:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f010034f	obj/kern/kernel.asm	/^f010034f:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f0100354	obj/kern/kernel.asm	/^f0100354:	ee                   	out    %al,(%dx)$/;"	l
f0100355	obj/kern/kernel.asm	/^f0100355:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100358	obj/kern/kernel.asm	/^f0100358:	eb 0c                	jmp    f0100366 <kbd_proc_data+0xc7>$/;"	l
f010035a	obj/kern/kernel.asm	/^f010035a:	83 0d 00 00 24 f0 40 	orl    $0x40,0xf0240000$/;"	l
f0100361	obj/kern/kernel.asm	/^f0100361:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100366	obj/kern/kernel.asm	/^f0100366:	89 d8                	mov    %ebx,%eax$/;"	l
f0100368	obj/kern/kernel.asm	/^f0100368:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010036b	obj/kern/kernel.asm	/^f010036b:	c9                   	leave  $/;"	l
f010036c	obj/kern/kernel.asm	/^f010036c:	c3                   	ret    $/;"	l
f010036d	obj/kern/kernel.asm	/^f010036d:	8b 0d 00 00 24 f0    	mov    0xf0240000,%ecx$/;"	l
f0100373	obj/kern/kernel.asm	/^f0100373:	89 cb                	mov    %ecx,%ebx$/;"	l
f0100375	obj/kern/kernel.asm	/^f0100375:	83 e3 40             	and    $0x40,%ebx$/;"	l
f0100378	obj/kern/kernel.asm	/^f0100378:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f010037b	obj/kern/kernel.asm	/^f010037b:	85 db                	test   %ebx,%ebx$/;"	l
f010037d	obj/kern/kernel.asm	/^f010037d:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f0100380	obj/kern/kernel.asm	/^f0100380:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100383	obj/kern/kernel.asm	/^f0100383:	0f b6 82 a0 54 10 f0 	movzbl -0xfefab60(%edx),%eax$/;"	l
f010038a	obj/kern/kernel.asm	/^f010038a:	83 c8 40             	or     $0x40,%eax$/;"	l
f010038d	obj/kern/kernel.asm	/^f010038d:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100390	obj/kern/kernel.asm	/^f0100390:	f7 d0                	not    %eax$/;"	l
f0100392	obj/kern/kernel.asm	/^f0100392:	21 c8                	and    %ecx,%eax$/;"	l
f0100394	obj/kern/kernel.asm	/^f0100394:	a3 00 00 24 f0       	mov    %eax,0xf0240000$/;"	l
f0100399	obj/kern/kernel.asm	/^f0100399:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010039e	obj/kern/kernel.asm	/^f010039e:	eb c6                	jmp    f0100366 <kbd_proc_data+0xc7>$/;"	l
f01003a0	obj/kern/kernel.asm	/^f01003a0:	83 ea 41             	sub    $0x41,%edx$/;"	l
f01003a3	obj/kern/kernel.asm	/^f01003a3:	8d 4b 20             	lea    0x20(%ebx),%ecx$/;"	l
f01003a6	obj/kern/kernel.asm	/^f01003a6:	83 fa 1a             	cmp    $0x1a,%edx$/;"	l
f01003a9	obj/kern/kernel.asm	/^f01003a9:	0f 42 d9             	cmovb  %ecx,%ebx$/;"	l
f01003ac	obj/kern/kernel.asm	/^f01003ac:	eb 81                	jmp    f010032f <kbd_proc_data+0x90>$/;"	l
f01003ae	obj/kern/kernel.asm	/^f01003ae:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
f01003b3	obj/kern/kernel.asm	/^f01003b3:	eb b1                	jmp    f0100366 <kbd_proc_data+0xc7>$/;"	l
f01003b5	obj/kern/kernel.asm	/^f01003b5:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
f01003ba	obj/kern/kernel.asm	/^f01003ba:	eb aa                	jmp    f0100366 <kbd_proc_data+0xc7>$/;"	l
f01003bc	obj/kern/kernel.asm	/^f01003bc <cons_putc>:$/;"	l
f01003bc	obj/kern/kernel.asm	/^f01003bc:	55                   	push   %ebp$/;"	l
f01003bd	obj/kern/kernel.asm	/^f01003bd:	89 e5                	mov    %esp,%ebp$/;"	l
f01003bf	obj/kern/kernel.asm	/^f01003bf:	57                   	push   %edi$/;"	l
f01003c0	obj/kern/kernel.asm	/^f01003c0:	56                   	push   %esi$/;"	l
f01003c1	obj/kern/kernel.asm	/^f01003c1:	53                   	push   %ebx$/;"	l
f01003c2	obj/kern/kernel.asm	/^f01003c2:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01003c5	obj/kern/kernel.asm	/^f01003c5:	89 c7                	mov    %eax,%edi$/;"	l
f01003c7	obj/kern/kernel.asm	/^f01003c7:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01003cc	obj/kern/kernel.asm	/^f01003cc:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f01003d1	obj/kern/kernel.asm	/^f01003d1:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f01003d6	obj/kern/kernel.asm	/^f01003d6:	eb 09                	jmp    f01003e1 <cons_putc+0x25>$/;"	l
f01003d8	obj/kern/kernel.asm	/^f01003d8:	89 ca                	mov    %ecx,%edx$/;"	l
f01003da	obj/kern/kernel.asm	/^f01003da:	ec                   	in     (%dx),%al$/;"	l
f01003db	obj/kern/kernel.asm	/^f01003db:	ec                   	in     (%dx),%al$/;"	l
f01003dc	obj/kern/kernel.asm	/^f01003dc:	ec                   	in     (%dx),%al$/;"	l
f01003dd	obj/kern/kernel.asm	/^f01003dd:	ec                   	in     (%dx),%al$/;"	l
f01003de	obj/kern/kernel.asm	/^f01003de:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01003e1	obj/kern/kernel.asm	/^f01003e1:	89 f2                	mov    %esi,%edx$/;"	l
f01003e3	obj/kern/kernel.asm	/^f01003e3:	ec                   	in     (%dx),%al$/;"	l
f01003e4	obj/kern/kernel.asm	/^f01003e4:	a8 20                	test   $0x20,%al$/;"	l
f01003e6	obj/kern/kernel.asm	/^f01003e6:	75 08                	jne    f01003f0 <cons_putc+0x34>$/;"	l
f01003e8	obj/kern/kernel.asm	/^f01003e8:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f01003ee	obj/kern/kernel.asm	/^f01003ee:	7e e8                	jle    f01003d8 <cons_putc+0x1c>$/;"	l
f01003f0	obj/kern/kernel.asm	/^f01003f0:	89 f8                	mov    %edi,%eax$/;"	l
f01003f2	obj/kern/kernel.asm	/^f01003f2:	88 45 e7             	mov    %al,-0x19(%ebp)$/;"	l
f01003f5	obj/kern/kernel.asm	/^f01003f5:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01003fa	obj/kern/kernel.asm	/^f01003fa:	ee                   	out    %al,(%dx)$/;"	l
f01003fb	obj/kern/kernel.asm	/^f01003fb:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100400	obj/kern/kernel.asm	/^f0100400:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f0100405	obj/kern/kernel.asm	/^f0100405:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f010040a	obj/kern/kernel.asm	/^f010040a:	eb 09                	jmp    f0100415 <cons_putc+0x59>$/;"	l
f010040c	obj/kern/kernel.asm	/^f010040c:	89 ca                	mov    %ecx,%edx$/;"	l
f010040e	obj/kern/kernel.asm	/^f010040e:	ec                   	in     (%dx),%al$/;"	l
f010040f	obj/kern/kernel.asm	/^f010040f:	ec                   	in     (%dx),%al$/;"	l
f0100410	obj/kern/kernel.asm	/^f0100410:	ec                   	in     (%dx),%al$/;"	l
f0100411	obj/kern/kernel.asm	/^f0100411:	ec                   	in     (%dx),%al$/;"	l
f0100412	obj/kern/kernel.asm	/^f0100412:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100415	obj/kern/kernel.asm	/^f0100415:	89 f2                	mov    %esi,%edx$/;"	l
f0100417	obj/kern/kernel.asm	/^f0100417:	ec                   	in     (%dx),%al$/;"	l
f0100418	obj/kern/kernel.asm	/^f0100418:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	7f 04                	jg     f0100424 <cons_putc+0x68>$/;"	l
f0100420	obj/kern/kernel.asm	/^f0100420:	84 c0                	test   %al,%al$/;"	l
f0100422	obj/kern/kernel.asm	/^f0100422:	79 e8                	jns    f010040c <cons_putc+0x50>$/;"	l
f0100424	obj/kern/kernel.asm	/^f0100424:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f0100429	obj/kern/kernel.asm	/^f0100429:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
f010042d	obj/kern/kernel.asm	/^f010042d:	ee                   	out    %al,(%dx)$/;"	l
f010042e	obj/kern/kernel.asm	/^f010042e:	ba 7a 03 00 00       	mov    $0x37a,%edx$/;"	l
f0100433	obj/kern/kernel.asm	/^f0100433:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f0100438	obj/kern/kernel.asm	/^f0100438:	ee                   	out    %al,(%dx)$/;"	l
f0100439	obj/kern/kernel.asm	/^f0100439:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f010043e	obj/kern/kernel.asm	/^f010043e:	ee                   	out    %al,(%dx)$/;"	l
f010043f	obj/kern/kernel.asm	/^f010043f:	89 fa                	mov    %edi,%edx$/;"	l
f0100441	obj/kern/kernel.asm	/^f0100441:	81 e2 00 ff ff ff    	and    $0xffffff00,%edx$/;"	l
f0100447	obj/kern/kernel.asm	/^f0100447:	89 f8                	mov    %edi,%eax$/;"	l
f0100449	obj/kern/kernel.asm	/^f0100449:	80 cc 07             	or     $0x7,%ah$/;"	l
f010044c	obj/kern/kernel.asm	/^f010044c:	85 d2                	test   %edx,%edx$/;"	l
f010044e	obj/kern/kernel.asm	/^f010044e:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f0100451	obj/kern/kernel.asm	/^f0100451:	89 f8                	mov    %edi,%eax$/;"	l
f0100453	obj/kern/kernel.asm	/^f0100453:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100456	obj/kern/kernel.asm	/^f0100456:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100459	obj/kern/kernel.asm	/^f0100459:	0f 84 b6 00 00 00    	je     f0100515 <cons_putc+0x159>$/;"	l
f010045f	obj/kern/kernel.asm	/^f010045f:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100462	obj/kern/kernel.asm	/^f0100462:	7e 73                	jle    f01004d7 <cons_putc+0x11b>$/;"	l
f0100464	obj/kern/kernel.asm	/^f0100464:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0100467	obj/kern/kernel.asm	/^f0100467:	0f 84 9b 00 00 00    	je     f0100508 <cons_putc+0x14c>$/;"	l
f010046d	obj/kern/kernel.asm	/^f010046d:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f0100470	obj/kern/kernel.asm	/^f0100470:	0f 85 d6 00 00 00    	jne    f010054c <cons_putc+0x190>$/;"	l
f0100476	obj/kern/kernel.asm	/^f0100476:	0f b7 05 28 02 24 f0 	movzwl 0xf0240228,%eax$/;"	l
f010047d	obj/kern/kernel.asm	/^f010047d:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f0100483	obj/kern/kernel.asm	/^f0100483:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0100486	obj/kern/kernel.asm	/^f0100486:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0100489	obj/kern/kernel.asm	/^f0100489:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010048c	obj/kern/kernel.asm	/^f010048c:	66 a3 28 02 24 f0    	mov    %ax,0xf0240228$/;"	l
f0100492	obj/kern/kernel.asm	/^f0100492:	66 81 3d 28 02 24 f0 	cmpw   $0x7cf,0xf0240228$/;"	l
f0100499	obj/kern/kernel.asm	/^f0100499:	cf 07 $/;"	l
f010049b	obj/kern/kernel.asm	/^f010049b:	0f 87 ce 00 00 00    	ja     f010056f <cons_putc+0x1b3>$/;"	l
f01004a1	obj/kern/kernel.asm	/^f01004a1:	8b 0d 30 02 24 f0    	mov    0xf0240230,%ecx$/;"	l
f01004a7	obj/kern/kernel.asm	/^f01004a7:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f01004ac	obj/kern/kernel.asm	/^f01004ac:	89 ca                	mov    %ecx,%edx$/;"	l
f01004ae	obj/kern/kernel.asm	/^f01004ae:	ee                   	out    %al,(%dx)$/;"	l
f01004af	obj/kern/kernel.asm	/^f01004af:	0f b7 1d 28 02 24 f0 	movzwl 0xf0240228,%ebx$/;"	l
f01004b6	obj/kern/kernel.asm	/^f01004b6:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f01004b9	obj/kern/kernel.asm	/^f01004b9:	89 d8                	mov    %ebx,%eax$/;"	l
f01004bb	obj/kern/kernel.asm	/^f01004bb:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f01004bf	obj/kern/kernel.asm	/^f01004bf:	89 f2                	mov    %esi,%edx$/;"	l
f01004c1	obj/kern/kernel.asm	/^f01004c1:	ee                   	out    %al,(%dx)$/;"	l
f01004c2	obj/kern/kernel.asm	/^f01004c2:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f01004c7	obj/kern/kernel.asm	/^f01004c7:	89 ca                	mov    %ecx,%edx$/;"	l
f01004c9	obj/kern/kernel.asm	/^f01004c9:	ee                   	out    %al,(%dx)$/;"	l
f01004ca	obj/kern/kernel.asm	/^f01004ca:	89 d8                	mov    %ebx,%eax$/;"	l
f01004cc	obj/kern/kernel.asm	/^f01004cc:	89 f2                	mov    %esi,%edx$/;"	l
f01004ce	obj/kern/kernel.asm	/^f01004ce:	ee                   	out    %al,(%dx)$/;"	l
f01004cf	obj/kern/kernel.asm	/^f01004cf:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01004d2	obj/kern/kernel.asm	/^f01004d2:	5b                   	pop    %ebx$/;"	l
f01004d3	obj/kern/kernel.asm	/^f01004d3:	5e                   	pop    %esi$/;"	l
f01004d4	obj/kern/kernel.asm	/^f01004d4:	5f                   	pop    %edi$/;"	l
f01004d5	obj/kern/kernel.asm	/^f01004d5:	5d                   	pop    %ebp$/;"	l
f01004d6	obj/kern/kernel.asm	/^f01004d6:	c3                   	ret    $/;"	l
f01004d7	obj/kern/kernel.asm	/^f01004d7:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01004da	obj/kern/kernel.asm	/^f01004da:	75 70                	jne    f010054c <cons_putc+0x190>$/;"	l
f01004dc	obj/kern/kernel.asm	/^f01004dc:	0f b7 05 28 02 24 f0 	movzwl 0xf0240228,%eax$/;"	l
f01004e3	obj/kern/kernel.asm	/^f01004e3:	66 85 c0             	test   %ax,%ax$/;"	l
f01004e6	obj/kern/kernel.asm	/^f01004e6:	74 b9                	je     f01004a1 <cons_putc+0xe5>$/;"	l
f01004e8	obj/kern/kernel.asm	/^f01004e8:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01004eb	obj/kern/kernel.asm	/^f01004eb:	66 a3 28 02 24 f0    	mov    %ax,0xf0240228$/;"	l
f01004f1	obj/kern/kernel.asm	/^f01004f1:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01004f4	obj/kern/kernel.asm	/^f01004f4:	66 81 e7 00 ff       	and    $0xff00,%di$/;"	l
f01004f9	obj/kern/kernel.asm	/^f01004f9:	83 cf 20             	or     $0x20,%edi$/;"	l
f01004fc	obj/kern/kernel.asm	/^f01004fc:	8b 15 2c 02 24 f0    	mov    0xf024022c,%edx$/;"	l
f0100502	obj/kern/kernel.asm	/^f0100502:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f0100506	obj/kern/kernel.asm	/^f0100506:	eb 8a                	jmp    f0100492 <cons_putc+0xd6>$/;"	l
f0100508	obj/kern/kernel.asm	/^f0100508:	66 83 05 28 02 24 f0 	addw   $0x50,0xf0240228$/;"	l
f010050f	obj/kern/kernel.asm	/^f010050f:	50 $/;"	l
f0100510	obj/kern/kernel.asm	/^f0100510:	e9 61 ff ff ff       	jmp    f0100476 <cons_putc+0xba>$/;"	l
f0100515	obj/kern/kernel.asm	/^f0100515:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010051a	obj/kern/kernel.asm	/^f010051a:	e8 9d fe ff ff       	call   f01003bc <cons_putc>$/;"	l
f010051f	obj/kern/kernel.asm	/^f010051f:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100524	obj/kern/kernel.asm	/^f0100524:	e8 93 fe ff ff       	call   f01003bc <cons_putc>$/;"	l
f0100529	obj/kern/kernel.asm	/^f0100529:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010052e	obj/kern/kernel.asm	/^f010052e:	e8 89 fe ff ff       	call   f01003bc <cons_putc>$/;"	l
f0100533	obj/kern/kernel.asm	/^f0100533:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100538	obj/kern/kernel.asm	/^f0100538:	e8 7f fe ff ff       	call   f01003bc <cons_putc>$/;"	l
f010053d	obj/kern/kernel.asm	/^f010053d:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100542	obj/kern/kernel.asm	/^f0100542:	e8 75 fe ff ff       	call   f01003bc <cons_putc>$/;"	l
f0100547	obj/kern/kernel.asm	/^f0100547:	e9 46 ff ff ff       	jmp    f0100492 <cons_putc+0xd6>$/;"	l
f010054c	obj/kern/kernel.asm	/^f010054c:	0f b7 05 28 02 24 f0 	movzwl 0xf0240228,%eax$/;"	l
f0100553	obj/kern/kernel.asm	/^f0100553:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100556	obj/kern/kernel.asm	/^f0100556:	66 89 15 28 02 24 f0 	mov    %dx,0xf0240228$/;"	l
f010055d	obj/kern/kernel.asm	/^f010055d:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100560	obj/kern/kernel.asm	/^f0100560:	8b 15 2c 02 24 f0    	mov    0xf024022c,%edx$/;"	l
f0100566	obj/kern/kernel.asm	/^f0100566:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f010056a	obj/kern/kernel.asm	/^f010056a:	e9 23 ff ff ff       	jmp    f0100492 <cons_putc+0xd6>$/;"	l
f010056f	obj/kern/kernel.asm	/^f010056f:	a1 2c 02 24 f0       	mov    0xf024022c,%eax$/;"	l
f0100574	obj/kern/kernel.asm	/^f0100574:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100577	obj/kern/kernel.asm	/^f0100577:	68 00 0f 00 00       	push   $0xf00$/;"	l
f010057c	obj/kern/kernel.asm	/^f010057c:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f0100582	obj/kern/kernel.asm	/^f0100582:	52                   	push   %edx$/;"	l
f0100583	obj/kern/kernel.asm	/^f0100583:	50                   	push   %eax$/;"	l
f0100584	obj/kern/kernel.asm	/^f0100584:	e8 ef 40 00 00       	call   f0104678 <memmove>$/;"	l
f0100589	obj/kern/kernel.asm	/^f0100589:	8b 15 2c 02 24 f0    	mov    0xf024022c,%edx$/;"	l
f010058f	obj/kern/kernel.asm	/^f010058f:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eax$/;"	l
f0100595	obj/kern/kernel.asm	/^f0100595:	81 c2 a0 0f 00 00    	add    $0xfa0,%edx$/;"	l
f010059b	obj/kern/kernel.asm	/^f010059b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010059e	obj/kern/kernel.asm	/^f010059e:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
f01005a3	obj/kern/kernel.asm	/^f01005a3:	83 c0 02             	add    $0x2,%eax$/;"	l
f01005a6	obj/kern/kernel.asm	/^f01005a6:	39 d0                	cmp    %edx,%eax$/;"	l
f01005a8	obj/kern/kernel.asm	/^f01005a8:	75 f4                	jne    f010059e <cons_putc+0x1e2>$/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	66 83 2d 28 02 24 f0 	subw   $0x50,0xf0240228$/;"	l
f01005b1	obj/kern/kernel.asm	/^f01005b1:	50 $/;"	l
f01005b2	obj/kern/kernel.asm	/^f01005b2:	e9 ea fe ff ff       	jmp    f01004a1 <cons_putc+0xe5>$/;"	l
f01005b7	obj/kern/kernel.asm	/^f01005b7 <serial_intr>:$/;"	l
f01005b7	obj/kern/kernel.asm	/^f01005b7:	80 3d 34 02 24 f0 00 	cmpb   $0x0,0xf0240234$/;"	l
f01005be	obj/kern/kernel.asm	/^f01005be:	75 02                	jne    f01005c2 <serial_intr+0xb>$/;"	l
f01005c0	obj/kern/kernel.asm	/^f01005c0:	f3 c3                	repz ret $/;"	l
f01005c2	obj/kern/kernel.asm	/^f01005c2:	55                   	push   %ebp$/;"	l
f01005c3	obj/kern/kernel.asm	/^f01005c3:	89 e5                	mov    %esp,%ebp$/;"	l
f01005c5	obj/kern/kernel.asm	/^f01005c5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005c8	obj/kern/kernel.asm	/^f01005c8:	b8 3d 02 10 f0       	mov    $0xf010023d,%eax$/;"	l
f01005cd	obj/kern/kernel.asm	/^f01005cd:	e8 8a fc ff ff       	call   f010025c <cons_intr>$/;"	l
f01005d2	obj/kern/kernel.asm	/^f01005d2:	c9                   	leave  $/;"	l
f01005d3	obj/kern/kernel.asm	/^f01005d3:	c3                   	ret    $/;"	l
f01005d4	obj/kern/kernel.asm	/^f01005d4 <kbd_intr>:$/;"	l
f01005d4	obj/kern/kernel.asm	/^f01005d4:	55                   	push   %ebp$/;"	l
f01005d5	obj/kern/kernel.asm	/^f01005d5:	89 e5                	mov    %esp,%ebp$/;"	l
f01005d7	obj/kern/kernel.asm	/^f01005d7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005da	obj/kern/kernel.asm	/^f01005da:	b8 9f 02 10 f0       	mov    $0xf010029f,%eax$/;"	l
f01005df	obj/kern/kernel.asm	/^f01005df:	e8 78 fc ff ff       	call   f010025c <cons_intr>$/;"	l
f01005e4	obj/kern/kernel.asm	/^f01005e4:	c9                   	leave  $/;"	l
f01005e5	obj/kern/kernel.asm	/^f01005e5:	c3                   	ret    $/;"	l
f01005e6	obj/kern/kernel.asm	/^f01005e6 <cons_getc>:$/;"	l
f01005e6	obj/kern/kernel.asm	/^f01005e6:	55                   	push   %ebp$/;"	l
f01005e7	obj/kern/kernel.asm	/^f01005e7:	89 e5                	mov    %esp,%ebp$/;"	l
f01005e9	obj/kern/kernel.asm	/^f01005e9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005ec	obj/kern/kernel.asm	/^f01005ec:	e8 c6 ff ff ff       	call   f01005b7 <serial_intr>$/;"	l
f01005f1	obj/kern/kernel.asm	/^f01005f1:	e8 de ff ff ff       	call   f01005d4 <kbd_intr>$/;"	l
f01005f6	obj/kern/kernel.asm	/^f01005f6:	8b 15 20 02 24 f0    	mov    0xf0240220,%edx$/;"	l
f01005fc	obj/kern/kernel.asm	/^f01005fc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100601	obj/kern/kernel.asm	/^f0100601:	3b 15 24 02 24 f0    	cmp    0xf0240224,%edx$/;"	l
f0100607	obj/kern/kernel.asm	/^f0100607:	74 18                	je     f0100621 <cons_getc+0x3b>$/;"	l
f0100609	obj/kern/kernel.asm	/^f0100609:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f010060c	obj/kern/kernel.asm	/^f010060c:	89 0d 20 02 24 f0    	mov    %ecx,0xf0240220$/;"	l
f0100612	obj/kern/kernel.asm	/^f0100612:	0f b6 82 20 00 24 f0 	movzbl -0xfdbffe0(%edx),%eax$/;"	l
f0100619	obj/kern/kernel.asm	/^f0100619:	81 f9 00 02 00 00    	cmp    $0x200,%ecx$/;"	l
f010061f	obj/kern/kernel.asm	/^f010061f:	74 02                	je     f0100623 <cons_getc+0x3d>$/;"	l
f0100621	obj/kern/kernel.asm	/^f0100621:	c9                   	leave  $/;"	l
f0100622	obj/kern/kernel.asm	/^f0100622:	c3                   	ret    $/;"	l
f0100623	obj/kern/kernel.asm	/^f0100623:	c7 05 20 02 24 f0 00 	movl   $0x0,0xf0240220$/;"	l
f010062a	obj/kern/kernel.asm	/^f010062a:	00 00 00 $/;"	l
f010062d	obj/kern/kernel.asm	/^f010062d:	eb f2                	jmp    f0100621 <cons_getc+0x3b>$/;"	l
f010062f	obj/kern/kernel.asm	/^f010062f <cons_init>:$/;"	l
f010062f	obj/kern/kernel.asm	/^f010062f:	55                   	push   %ebp$/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630:	89 e5                	mov    %esp,%ebp$/;"	l
f0100632	obj/kern/kernel.asm	/^f0100632:	57                   	push   %edi$/;"	l
f0100633	obj/kern/kernel.asm	/^f0100633:	56                   	push   %esi$/;"	l
f0100634	obj/kern/kernel.asm	/^f0100634:	53                   	push   %ebx$/;"	l
f0100635	obj/kern/kernel.asm	/^f0100635:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100638	obj/kern/kernel.asm	/^f0100638:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f010063f	obj/kern/kernel.asm	/^f010063f:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f0100646	obj/kern/kernel.asm	/^f0100646:	5a a5 $/;"	l
f0100648	obj/kern/kernel.asm	/^f0100648:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f010064f	obj/kern/kernel.asm	/^f010064f:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f0100653	obj/kern/kernel.asm	/^f0100653:	0f 84 d4 00 00 00    	je     f010072d <cons_init+0xfe>$/;"	l
f0100659	obj/kern/kernel.asm	/^f0100659:	c7 05 30 02 24 f0 b4 	movl   $0x3b4,0xf0240230$/;"	l
f0100660	obj/kern/kernel.asm	/^f0100660:	03 00 00 $/;"	l
f0100663	obj/kern/kernel.asm	/^f0100663:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f0100668	obj/kern/kernel.asm	/^f0100668:	8b 3d 30 02 24 f0    	mov    0xf0240230,%edi$/;"	l
f010066e	obj/kern/kernel.asm	/^f010066e:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100673	obj/kern/kernel.asm	/^f0100673:	89 fa                	mov    %edi,%edx$/;"	l
f0100675	obj/kern/kernel.asm	/^f0100675:	ee                   	out    %al,(%dx)$/;"	l
f0100676	obj/kern/kernel.asm	/^f0100676:	8d 4f 01             	lea    0x1(%edi),%ecx$/;"	l
f0100679	obj/kern/kernel.asm	/^f0100679:	89 ca                	mov    %ecx,%edx$/;"	l
f010067b	obj/kern/kernel.asm	/^f010067b:	ec                   	in     (%dx),%al$/;"	l
f010067c	obj/kern/kernel.asm	/^f010067c:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010067f	obj/kern/kernel.asm	/^f010067f:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0100682	obj/kern/kernel.asm	/^f0100682:	89 c3                	mov    %eax,%ebx$/;"	l
f0100684	obj/kern/kernel.asm	/^f0100684:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100689	obj/kern/kernel.asm	/^f0100689:	89 fa                	mov    %edi,%edx$/;"	l
f010068b	obj/kern/kernel.asm	/^f010068b:	ee                   	out    %al,(%dx)$/;"	l
f010068c	obj/kern/kernel.asm	/^f010068c:	89 ca                	mov    %ecx,%edx$/;"	l
f010068e	obj/kern/kernel.asm	/^f010068e:	ec                   	in     (%dx),%al$/;"	l
f010068f	obj/kern/kernel.asm	/^f010068f:	89 35 2c 02 24 f0    	mov    %esi,0xf024022c$/;"	l
f0100695	obj/kern/kernel.asm	/^f0100695:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100698	obj/kern/kernel.asm	/^f0100698:	09 d8                	or     %ebx,%eax$/;"	l
f010069a	obj/kern/kernel.asm	/^f010069a:	66 a3 28 02 24 f0    	mov    %ax,0xf0240228$/;"	l
f01006a0	obj/kern/kernel.asm	/^f01006a0:	e8 2f ff ff ff       	call   f01005d4 <kbd_intr>$/;"	l
f01006a5	obj/kern/kernel.asm	/^f01006a5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01006a8	obj/kern/kernel.asm	/^f01006a8:	0f b7 05 88 f3 11 f0 	movzwl 0xf011f388,%eax$/;"	l
f01006af	obj/kern/kernel.asm	/^f01006af:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f01006b4	obj/kern/kernel.asm	/^f01006b4:	50                   	push   %eax$/;"	l
f01006b5	obj/kern/kernel.asm	/^f01006b5:	e8 66 25 00 00       	call   f0102c20 <irq_setmask_8259A>$/;"	l
f01006ba	obj/kern/kernel.asm	/^f01006ba:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01006bf	obj/kern/kernel.asm	/^f01006bf:	b9 fa 03 00 00       	mov    $0x3fa,%ecx$/;"	l
f01006c4	obj/kern/kernel.asm	/^f01006c4:	89 d8                	mov    %ebx,%eax$/;"	l
f01006c6	obj/kern/kernel.asm	/^f01006c6:	89 ca                	mov    %ecx,%edx$/;"	l
f01006c8	obj/kern/kernel.asm	/^f01006c8:	ee                   	out    %al,(%dx)$/;"	l
f01006c9	obj/kern/kernel.asm	/^f01006c9:	bf fb 03 00 00       	mov    $0x3fb,%edi$/;"	l
f01006ce	obj/kern/kernel.asm	/^f01006ce:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f01006d3	obj/kern/kernel.asm	/^f01006d3:	89 fa                	mov    %edi,%edx$/;"	l
f01006d5	obj/kern/kernel.asm	/^f01006d5:	ee                   	out    %al,(%dx)$/;"	l
f01006d6	obj/kern/kernel.asm	/^f01006d6:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f01006db	obj/kern/kernel.asm	/^f01006db:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01006e0	obj/kern/kernel.asm	/^f01006e0:	ee                   	out    %al,(%dx)$/;"	l
f01006e1	obj/kern/kernel.asm	/^f01006e1:	be f9 03 00 00       	mov    $0x3f9,%esi$/;"	l
f01006e6	obj/kern/kernel.asm	/^f01006e6:	89 d8                	mov    %ebx,%eax$/;"	l
f01006e8	obj/kern/kernel.asm	/^f01006e8:	89 f2                	mov    %esi,%edx$/;"	l
f01006ea	obj/kern/kernel.asm	/^f01006ea:	ee                   	out    %al,(%dx)$/;"	l
f01006eb	obj/kern/kernel.asm	/^f01006eb:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01006f0	obj/kern/kernel.asm	/^f01006f0:	89 fa                	mov    %edi,%edx$/;"	l
f01006f2	obj/kern/kernel.asm	/^f01006f2:	ee                   	out    %al,(%dx)$/;"	l
f01006f3	obj/kern/kernel.asm	/^f01006f3:	ba fc 03 00 00       	mov    $0x3fc,%edx$/;"	l
f01006f8	obj/kern/kernel.asm	/^f01006f8:	89 d8                	mov    %ebx,%eax$/;"	l
f01006fa	obj/kern/kernel.asm	/^f01006fa:	ee                   	out    %al,(%dx)$/;"	l
f01006fb	obj/kern/kernel.asm	/^f01006fb:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100700	obj/kern/kernel.asm	/^f0100700:	89 f2                	mov    %esi,%edx$/;"	l
f0100702	obj/kern/kernel.asm	/^f0100702:	ee                   	out    %al,(%dx)$/;"	l
f0100703	obj/kern/kernel.asm	/^f0100703:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100708	obj/kern/kernel.asm	/^f0100708:	ec                   	in     (%dx),%al$/;"	l
f0100709	obj/kern/kernel.asm	/^f0100709:	89 c3                	mov    %eax,%ebx$/;"	l
f010070b	obj/kern/kernel.asm	/^f010070b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010070e	obj/kern/kernel.asm	/^f010070e:	3c ff                	cmp    $0xff,%al$/;"	l
f0100710	obj/kern/kernel.asm	/^f0100710:	0f 95 05 34 02 24 f0 	setne  0xf0240234$/;"	l
f0100717	obj/kern/kernel.asm	/^f0100717:	89 ca                	mov    %ecx,%edx$/;"	l
f0100719	obj/kern/kernel.asm	/^f0100719:	ec                   	in     (%dx),%al$/;"	l
f010071a	obj/kern/kernel.asm	/^f010071a:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f010071f	obj/kern/kernel.asm	/^f010071f:	ec                   	in     (%dx),%al$/;"	l
f0100720	obj/kern/kernel.asm	/^f0100720:	80 fb ff             	cmp    $0xff,%bl$/;"	l
f0100723	obj/kern/kernel.asm	/^f0100723:	74 23                	je     f0100748 <cons_init+0x119>$/;"	l
f0100725	obj/kern/kernel.asm	/^f0100725:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100728	obj/kern/kernel.asm	/^f0100728:	5b                   	pop    %ebx$/;"	l
f0100729	obj/kern/kernel.asm	/^f0100729:	5e                   	pop    %esi$/;"	l
f010072a	obj/kern/kernel.asm	/^f010072a:	5f                   	pop    %edi$/;"	l
f010072b	obj/kern/kernel.asm	/^f010072b:	5d                   	pop    %ebp$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	c3                   	ret    $/;"	l
f010072d	obj/kern/kernel.asm	/^f010072d:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f0100734	obj/kern/kernel.asm	/^f0100734:	c7 05 30 02 24 f0 d4 	movl   $0x3d4,0xf0240230$/;"	l
f010073b	obj/kern/kernel.asm	/^f010073b:	03 00 00 $/;"	l
f010073e	obj/kern/kernel.asm	/^f010073e:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f0100743	obj/kern/kernel.asm	/^f0100743:	e9 20 ff ff ff       	jmp    f0100668 <cons_init+0x39>$/;"	l
f0100748	obj/kern/kernel.asm	/^f0100748:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010074b	obj/kern/kernel.asm	/^f010074b:	68 54 53 10 f0       	push   $0xf0105354$/;"	l
f0100750	obj/kern/kernel.asm	/^f0100750:	e8 30 26 00 00       	call   f0102d85 <cprintf>$/;"	l
f0100755	obj/kern/kernel.asm	/^f0100755:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100758	obj/kern/kernel.asm	/^f0100758:	eb cb                	jmp    f0100725 <cons_init+0xf6>$/;"	l
f010075a	obj/kern/kernel.asm	/^f010075a <cputchar>:$/;"	l
f010075a	obj/kern/kernel.asm	/^f010075a:	55                   	push   %ebp$/;"	l
f010075b	obj/kern/kernel.asm	/^f010075b:	89 e5                	mov    %esp,%ebp$/;"	l
f010075d	obj/kern/kernel.asm	/^f010075d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100760	obj/kern/kernel.asm	/^f0100760:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100763	obj/kern/kernel.asm	/^f0100763:	e8 54 fc ff ff       	call   f01003bc <cons_putc>$/;"	l
f0100768	obj/kern/kernel.asm	/^f0100768:	c9                   	leave  $/;"	l
f0100769	obj/kern/kernel.asm	/^f0100769:	c3                   	ret    $/;"	l
f010076a	obj/kern/kernel.asm	/^f010076a <getchar>:$/;"	l
f010076a	obj/kern/kernel.asm	/^f010076a:	55                   	push   %ebp$/;"	l
f010076b	obj/kern/kernel.asm	/^f010076b:	89 e5                	mov    %esp,%ebp$/;"	l
f010076d	obj/kern/kernel.asm	/^f010076d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100770	obj/kern/kernel.asm	/^f0100770:	e8 71 fe ff ff       	call   f01005e6 <cons_getc>$/;"	l
f0100775	obj/kern/kernel.asm	/^f0100775:	85 c0                	test   %eax,%eax$/;"	l
f0100777	obj/kern/kernel.asm	/^f0100777:	74 f7                	je     f0100770 <getchar+0x6>$/;"	l
f0100779	obj/kern/kernel.asm	/^f0100779:	c9                   	leave  $/;"	l
f010077a	obj/kern/kernel.asm	/^f010077a:	c3                   	ret    $/;"	l
f010077b	obj/kern/kernel.asm	/^f010077b <iscons>:$/;"	l
f010077b	obj/kern/kernel.asm	/^f010077b:	55                   	push   %ebp$/;"	l
f010077c	obj/kern/kernel.asm	/^f010077c:	89 e5                	mov    %esp,%ebp$/;"	l
f010077e	obj/kern/kernel.asm	/^f010077e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100783	obj/kern/kernel.asm	/^f0100783:	5d                   	pop    %ebp$/;"	l
f0100784	obj/kern/kernel.asm	/^f0100784:	c3                   	ret    $/;"	l
f0100785	obj/kern/kernel.asm	/^f0100785 <mon_help>:$/;"	l
f0100785	obj/kern/kernel.asm	/^f0100785:	55                   	push   %ebp$/;"	l
f0100786	obj/kern/kernel.asm	/^f0100786:	89 e5                	mov    %esp,%ebp$/;"	l
f0100788	obj/kern/kernel.asm	/^f0100788:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010078b	obj/kern/kernel.asm	/^f010078b:	68 a0 55 10 f0       	push   $0xf01055a0$/;"	l
f0100790	obj/kern/kernel.asm	/^f0100790:	68 be 55 10 f0       	push   $0xf01055be$/;"	l
f0100795	obj/kern/kernel.asm	/^f0100795:	68 c3 55 10 f0       	push   $0xf01055c3$/;"	l
f010079a	obj/kern/kernel.asm	/^f010079a:	e8 e6 25 00 00       	call   f0102d85 <cprintf>$/;"	l
f010079f	obj/kern/kernel.asm	/^f010079f:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007a2	obj/kern/kernel.asm	/^f01007a2:	68 7c 56 10 f0       	push   $0xf010567c$/;"	l
f01007a7	obj/kern/kernel.asm	/^f01007a7:	68 cc 55 10 f0       	push   $0xf01055cc$/;"	l
f01007ac	obj/kern/kernel.asm	/^f01007ac:	68 c3 55 10 f0       	push   $0xf01055c3$/;"	l
f01007b1	obj/kern/kernel.asm	/^f01007b1:	e8 cf 25 00 00       	call   f0102d85 <cprintf>$/;"	l
f01007b6	obj/kern/kernel.asm	/^f01007b6:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007b9	obj/kern/kernel.asm	/^f01007b9:	68 d5 55 10 f0       	push   $0xf01055d5$/;"	l
f01007be	obj/kern/kernel.asm	/^f01007be:	68 e9 55 10 f0       	push   $0xf01055e9$/;"	l
f01007c3	obj/kern/kernel.asm	/^f01007c3:	68 c3 55 10 f0       	push   $0xf01055c3$/;"	l
f01007c8	obj/kern/kernel.asm	/^f01007c8:	e8 b8 25 00 00       	call   f0102d85 <cprintf>$/;"	l
f01007cd	obj/kern/kernel.asm	/^f01007cd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01007d2	obj/kern/kernel.asm	/^f01007d2:	c9                   	leave  $/;"	l
f01007d3	obj/kern/kernel.asm	/^f01007d3:	c3                   	ret    $/;"	l
f01007d4	obj/kern/kernel.asm	/^f01007d4 <mon_kerninfo>:$/;"	l
f01007d4	obj/kern/kernel.asm	/^f01007d4:	55                   	push   %ebp$/;"	l
f01007d5	obj/kern/kernel.asm	/^f01007d5:	89 e5                	mov    %esp,%ebp$/;"	l
f01007d7	obj/kern/kernel.asm	/^f01007d7:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01007da	obj/kern/kernel.asm	/^f01007da:	68 f3 55 10 f0       	push   $0xf01055f3$/;"	l
f01007df	obj/kern/kernel.asm	/^f01007df:	e8 a1 25 00 00       	call   f0102d85 <cprintf>$/;"	l
f01007e4	obj/kern/kernel.asm	/^f01007e4:	83 c4 08             	add    $0x8,%esp$/;"	l
f01007e7	obj/kern/kernel.asm	/^f01007e7:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f01007ec	obj/kern/kernel.asm	/^f01007ec:	68 a4 56 10 f0       	push   $0xf01056a4$/;"	l
f01007f1	obj/kern/kernel.asm	/^f01007f1:	e8 8f 25 00 00       	call   f0102d85 <cprintf>$/;"	l
f01007f6	obj/kern/kernel.asm	/^f01007f6:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007f9	obj/kern/kernel.asm	/^f01007f9:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f01007fe	obj/kern/kernel.asm	/^f01007fe:	68 0c 00 10 f0       	push   $0xf010000c$/;"	l
f0100803	obj/kern/kernel.asm	/^f0100803:	68 cc 56 10 f0       	push   $0xf01056cc$/;"	l
f0100808	obj/kern/kernel.asm	/^f0100808:	e8 78 25 00 00       	call   f0102d85 <cprintf>$/;"	l
f010080d	obj/kern/kernel.asm	/^f010080d:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100810	obj/kern/kernel.asm	/^f0100810:	68 89 52 10 00       	push   $0x105289$/;"	l
f0100815	obj/kern/kernel.asm	/^f0100815:	68 89 52 10 f0       	push   $0xf0105289$/;"	l
f010081a	obj/kern/kernel.asm	/^f010081a:	68 f0 56 10 f0       	push   $0xf01056f0$/;"	l
f010081f	obj/kern/kernel.asm	/^f010081f:	e8 61 25 00 00       	call   f0102d85 <cprintf>$/;"	l
f0100824	obj/kern/kernel.asm	/^f0100824:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100827	obj/kern/kernel.asm	/^f0100827:	68 00 00 24 00       	push   $0x240000$/;"	l
f010082c	obj/kern/kernel.asm	/^f010082c:	68 00 00 24 f0       	push   $0xf0240000$/;"	l
f0100831	obj/kern/kernel.asm	/^f0100831:	68 14 57 10 f0       	push   $0xf0105714$/;"	l
f0100836	obj/kern/kernel.asm	/^f0100836:	e8 4a 25 00 00       	call   f0102d85 <cprintf>$/;"	l
f010083b	obj/kern/kernel.asm	/^f010083b:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010083e	obj/kern/kernel.asm	/^f010083e:	68 08 20 28 00       	push   $0x282008$/;"	l
f0100843	obj/kern/kernel.asm	/^f0100843:	68 08 20 28 f0       	push   $0xf0282008$/;"	l
f0100848	obj/kern/kernel.asm	/^f0100848:	68 38 57 10 f0       	push   $0xf0105738$/;"	l
f010084d	obj/kern/kernel.asm	/^f010084d:	e8 33 25 00 00       	call   f0102d85 <cprintf>$/;"	l
f0100852	obj/kern/kernel.asm	/^f0100852:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100855	obj/kern/kernel.asm	/^f0100855:	b8 07 24 28 f0       	mov    $0xf0282407,%eax$/;"	l
f010085a	obj/kern/kernel.asm	/^f010085a:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f010085f	obj/kern/kernel.asm	/^f010085f:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f0100862	obj/kern/kernel.asm	/^f0100862:	50                   	push   %eax$/;"	l
f0100863	obj/kern/kernel.asm	/^f0100863:	68 5c 57 10 f0       	push   $0xf010575c$/;"	l
f0100868	obj/kern/kernel.asm	/^f0100868:	e8 18 25 00 00       	call   f0102d85 <cprintf>$/;"	l
f010086d	obj/kern/kernel.asm	/^f010086d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100872	obj/kern/kernel.asm	/^f0100872:	c9                   	leave  $/;"	l
f0100873	obj/kern/kernel.asm	/^f0100873:	c3                   	ret    $/;"	l
f0100874	obj/kern/kernel.asm	/^f0100874 <mon_backtrace>:$/;"	l
f0100874	obj/kern/kernel.asm	/^f0100874:	55                   	push   %ebp$/;"	l
f0100875	obj/kern/kernel.asm	/^f0100875:	89 e5                	mov    %esp,%ebp$/;"	l
f0100877	obj/kern/kernel.asm	/^f0100877:	57                   	push   %edi$/;"	l
f0100878	obj/kern/kernel.asm	/^f0100878:	56                   	push   %esi$/;"	l
f0100879	obj/kern/kernel.asm	/^f0100879:	53                   	push   %ebx$/;"	l
f010087a	obj/kern/kernel.asm	/^f010087a:	81 ec b8 00 00 00    	sub    $0xb8,%esp$/;"	l
f0100880	obj/kern/kernel.asm	/^f0100880:	68 0c 56 10 f0       	push   $0xf010560c$/;"	l
f0100885	obj/kern/kernel.asm	/^f0100885:	e8 fb 24 00 00       	call   f0102d85 <cprintf>$/;"	l
f010088a	obj/kern/kernel.asm	/^f010088a:	89 eb                	mov    %ebp,%ebx$/;"	l
f010088c	obj/kern/kernel.asm	/^f010088c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010088f	obj/kern/kernel.asm	/^f010088f:	8d 7d d0             	lea    -0x30(%ebp),%edi$/;"	l
f0100892	obj/kern/kernel.asm	/^f0100892:	eb 02                	jmp    f0100896 <mon_backtrace+0x22>$/;"	l
f0100894	obj/kern/kernel.asm	/^f0100894:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100896	obj/kern/kernel.asm	/^f0100896:	85 db                	test   %ebx,%ebx$/;"	l
f0100898	obj/kern/kernel.asm	/^f0100898:	74 6e                	je     f0100908 <mon_backtrace+0x94>$/;"	l
f010089a	obj/kern/kernel.asm	/^f010089a:	8b 73 04             	mov    0x4(%ebx),%esi$/;"	l
f010089d	obj/kern/kernel.asm	/^f010089d:	ff 73 18             	pushl  0x18(%ebx)$/;"	l
f01008a0	obj/kern/kernel.asm	/^f01008a0:	ff 73 14             	pushl  0x14(%ebx)$/;"	l
f01008a3	obj/kern/kernel.asm	/^f01008a3:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f01008a6	obj/kern/kernel.asm	/^f01008a6:	ff 73 0c             	pushl  0xc(%ebx)$/;"	l
f01008a9	obj/kern/kernel.asm	/^f01008a9:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f01008ac	obj/kern/kernel.asm	/^f01008ac:	53                   	push   %ebx$/;"	l
f01008ad	obj/kern/kernel.asm	/^f01008ad:	56                   	push   %esi$/;"	l
f01008ae	obj/kern/kernel.asm	/^f01008ae:	68 88 57 10 f0       	push   $0xf0105788$/;"	l
f01008b3	obj/kern/kernel.asm	/^f01008b3:	e8 cd 24 00 00       	call   f0102d85 <cprintf>$/;"	l
f01008b8	obj/kern/kernel.asm	/^f01008b8:	83 c4 18             	add    $0x18,%esp$/;"	l
f01008bb	obj/kern/kernel.asm	/^f01008bb:	57                   	push   %edi$/;"	l
f01008bc	obj/kern/kernel.asm	/^f01008bc:	56                   	push   %esi$/;"	l
f01008bd	obj/kern/kernel.asm	/^f01008bd:	e8 8d 30 00 00       	call   f010394f <debuginfo_eip>$/;"	l
f01008c2	obj/kern/kernel.asm	/^f01008c2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008c5	obj/kern/kernel.asm	/^f01008c5:	85 c0                	test   %eax,%eax$/;"	l
f01008c7	obj/kern/kernel.asm	/^f01008c7:	78 cb                	js     f0100894 <mon_backtrace+0x20>$/;"	l
f01008c9	obj/kern/kernel.asm	/^f01008c9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01008cc	obj/kern/kernel.asm	/^f01008cc:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f01008cf	obj/kern/kernel.asm	/^f01008cf:	8d 85 50 ff ff ff    	lea    -0xb0(%ebp),%eax$/;"	l
f01008d5	obj/kern/kernel.asm	/^f01008d5:	50                   	push   %eax$/;"	l
f01008d6	obj/kern/kernel.asm	/^f01008d6:	e8 0f 3c 00 00       	call   f01044ea <strcpy>$/;"	l
f01008db	obj/kern/kernel.asm	/^f01008db:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01008de	obj/kern/kernel.asm	/^f01008de:	c6 84 05 50 ff ff ff 	movb   $0x0,-0xb0(%ebp,%eax,1)$/;"	l
f01008e5	obj/kern/kernel.asm	/^f01008e5:	00 $/;"	l
f01008e6	obj/kern/kernel.asm	/^f01008e6:	2b 75 e0             	sub    -0x20(%ebp),%esi$/;"	l
f01008e9	obj/kern/kernel.asm	/^f01008e9:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01008ec	obj/kern/kernel.asm	/^f01008ec:	8d 85 50 ff ff ff    	lea    -0xb0(%ebp),%eax$/;"	l
f01008f2	obj/kern/kernel.asm	/^f01008f2:	50                   	push   %eax$/;"	l
f01008f3	obj/kern/kernel.asm	/^f01008f3:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01008f6	obj/kern/kernel.asm	/^f01008f6:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f01008f9	obj/kern/kernel.asm	/^f01008f9:	68 1e 56 10 f0       	push   $0xf010561e$/;"	l
f01008fe	obj/kern/kernel.asm	/^f01008fe:	e8 82 24 00 00       	call   f0102d85 <cprintf>$/;"	l
f0100903	obj/kern/kernel.asm	/^f0100903:	83 c4 20             	add    $0x20,%esp$/;"	l
f0100906	obj/kern/kernel.asm	/^f0100906:	eb 8c                	jmp    f0100894 <mon_backtrace+0x20>$/;"	l
f0100908	obj/kern/kernel.asm	/^f0100908:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010090d	obj/kern/kernel.asm	/^f010090d:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100910	obj/kern/kernel.asm	/^f0100910:	5b                   	pop    %ebx$/;"	l
f0100911	obj/kern/kernel.asm	/^f0100911:	5e                   	pop    %esi$/;"	l
f0100912	obj/kern/kernel.asm	/^f0100912:	5f                   	pop    %edi$/;"	l
f0100913	obj/kern/kernel.asm	/^f0100913:	5d                   	pop    %ebp$/;"	l
f0100914	obj/kern/kernel.asm	/^f0100914:	c3                   	ret    $/;"	l
f0100915	obj/kern/kernel.asm	/^f0100915 <do_overflow>:$/;"	l
f0100915	obj/kern/kernel.asm	/^f0100915:	55                   	push   %ebp$/;"	l
f0100916	obj/kern/kernel.asm	/^f0100916:	89 e5                	mov    %esp,%ebp$/;"	l
f0100918	obj/kern/kernel.asm	/^f0100918:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010091b	obj/kern/kernel.asm	/^f010091b:	68 2c 56 10 f0       	push   $0xf010562c$/;"	l
f0100920	obj/kern/kernel.asm	/^f0100920:	e8 60 24 00 00       	call   f0102d85 <cprintf>$/;"	l
f0100925	obj/kern/kernel.asm	/^f0100925:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100928	obj/kern/kernel.asm	/^f0100928:	c9                   	leave  $/;"	l
f0100929	obj/kern/kernel.asm	/^f0100929:	c3                   	ret    $/;"	l
f010092a	obj/kern/kernel.asm	/^f010092a <start_overflow>:$/;"	l
f010092a	obj/kern/kernel.asm	/^f010092a:	55                   	push   %ebp$/;"	l
f010092b	obj/kern/kernel.asm	/^f010092b:	89 e5                	mov    %esp,%ebp$/;"	l
f010092d	obj/kern/kernel.asm	/^f010092d:	5d                   	pop    %ebp$/;"	l
f010092e	obj/kern/kernel.asm	/^f010092e:	c3                   	ret    $/;"	l
f010092f	obj/kern/kernel.asm	/^f010092f <overflow_me>:$/;"	l
f010092f	obj/kern/kernel.asm	/^f010092f:	55                   	push   %ebp$/;"	l
f0100930	obj/kern/kernel.asm	/^f0100930:	89 e5                	mov    %esp,%ebp$/;"	l
f0100932	obj/kern/kernel.asm	/^f0100932:	5d                   	pop    %ebp$/;"	l
f0100933	obj/kern/kernel.asm	/^f0100933:	c3                   	ret    $/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934 <monitor>:$/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934:	55                   	push   %ebp$/;"	l
f0100935	obj/kern/kernel.asm	/^f0100935:	89 e5                	mov    %esp,%ebp$/;"	l
f0100937	obj/kern/kernel.asm	/^f0100937:	57                   	push   %edi$/;"	l
f0100938	obj/kern/kernel.asm	/^f0100938:	56                   	push   %esi$/;"	l
f0100939	obj/kern/kernel.asm	/^f0100939:	53                   	push   %ebx$/;"	l
f010093a	obj/kern/kernel.asm	/^f010093a:	83 ec 58             	sub    $0x58,%esp$/;"	l
f010093d	obj/kern/kernel.asm	/^f010093d:	68 bc 57 10 f0       	push   $0xf01057bc$/;"	l
f0100942	obj/kern/kernel.asm	/^f0100942:	e8 3e 24 00 00       	call   f0102d85 <cprintf>$/;"	l
f0100947	obj/kern/kernel.asm	/^f0100947:	c7 04 24 e0 57 10 f0 	movl   $0xf01057e0,(%esp)$/;"	l
f010094e	obj/kern/kernel.asm	/^f010094e:	e8 32 24 00 00       	call   f0102d85 <cprintf>$/;"	l
f0100953	obj/kern/kernel.asm	/^f0100953:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100956	obj/kern/kernel.asm	/^f0100956:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f010095a	obj/kern/kernel.asm	/^f010095a:	74 57                	je     f01009b3 <monitor+0x7f>$/;"	l
f010095c	obj/kern/kernel.asm	/^f010095c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010095f	obj/kern/kernel.asm	/^f010095f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100962	obj/kern/kernel.asm	/^f0100962:	e8 dd 26 00 00       	call   f0103044 <print_trapframe>$/;"	l
f0100967	obj/kern/kernel.asm	/^f0100967:	83 c4 10             	add    $0x10,%esp$/;"	l
f010096a	obj/kern/kernel.asm	/^f010096a:	eb 47                	jmp    f01009b3 <monitor+0x7f>$/;"	l
f010096c	obj/kern/kernel.asm	/^f010096c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010096f	obj/kern/kernel.asm	/^f010096f:	0f be c0             	movsbl %al,%eax$/;"	l
f0100972	obj/kern/kernel.asm	/^f0100972:	50                   	push   %eax$/;"	l
f0100973	obj/kern/kernel.asm	/^f0100973:	68 42 56 10 f0       	push   $0xf0105642$/;"	l
f0100978	obj/kern/kernel.asm	/^f0100978:	e8 71 3c 00 00       	call   f01045ee <strchr>$/;"	l
f010097d	obj/kern/kernel.asm	/^f010097d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100980	obj/kern/kernel.asm	/^f0100980:	85 c0                	test   %eax,%eax$/;"	l
f0100982	obj/kern/kernel.asm	/^f0100982:	74 0a                	je     f010098e <monitor+0x5a>$/;"	l
f0100984	obj/kern/kernel.asm	/^f0100984:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0100987	obj/kern/kernel.asm	/^f0100987:	89 f7                	mov    %esi,%edi$/;"	l
f0100989	obj/kern/kernel.asm	/^f0100989:	8d 5b 01             	lea    0x1(%ebx),%ebx$/;"	l
f010098c	obj/kern/kernel.asm	/^f010098c:	eb 6b                	jmp    f01009f9 <monitor+0xc5>$/;"	l
f010098e	obj/kern/kernel.asm	/^f010098e:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100991	obj/kern/kernel.asm	/^f0100991:	74 73                	je     f0100a06 <monitor+0xd2>$/;"	l
f0100993	obj/kern/kernel.asm	/^f0100993:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0100996	obj/kern/kernel.asm	/^f0100996:	74 09                	je     f01009a1 <monitor+0x6d>$/;"	l
f0100998	obj/kern/kernel.asm	/^f0100998:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f010099b	obj/kern/kernel.asm	/^f010099b:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f010099f	obj/kern/kernel.asm	/^f010099f:	eb 39                	jmp    f01009da <monitor+0xa6>$/;"	l
f01009a1	obj/kern/kernel.asm	/^f01009a1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009a4	obj/kern/kernel.asm	/^f01009a4:	6a 10                	push   $0x10$/;"	l
f01009a6	obj/kern/kernel.asm	/^f01009a6:	68 47 56 10 f0       	push   $0xf0105647$/;"	l
f01009ab	obj/kern/kernel.asm	/^f01009ab:	e8 d5 23 00 00       	call   f0102d85 <cprintf>$/;"	l
f01009b0	obj/kern/kernel.asm	/^f01009b0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009b3	obj/kern/kernel.asm	/^f01009b3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01009b6	obj/kern/kernel.asm	/^f01009b6:	68 3e 56 10 f0       	push   $0xf010563e$/;"	l
f01009bb	obj/kern/kernel.asm	/^f01009bb:	e8 11 3a 00 00       	call   f01043d1 <readline>$/;"	l
f01009c0	obj/kern/kernel.asm	/^f01009c0:	89 c3                	mov    %eax,%ebx$/;"	l
f01009c2	obj/kern/kernel.asm	/^f01009c2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009c5	obj/kern/kernel.asm	/^f01009c5:	85 c0                	test   %eax,%eax$/;"	l
f01009c7	obj/kern/kernel.asm	/^f01009c7:	74 ea                	je     f01009b3 <monitor+0x7f>$/;"	l
f01009c9	obj/kern/kernel.asm	/^f01009c9:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f01009d0	obj/kern/kernel.asm	/^f01009d0:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01009d5	obj/kern/kernel.asm	/^f01009d5:	eb 24                	jmp    f01009fb <monitor+0xc7>$/;"	l
f01009d7	obj/kern/kernel.asm	/^f01009d7:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01009da	obj/kern/kernel.asm	/^f01009da:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01009dd	obj/kern/kernel.asm	/^f01009dd:	84 c0                	test   %al,%al$/;"	l
f01009df	obj/kern/kernel.asm	/^f01009df:	74 18                	je     f01009f9 <monitor+0xc5>$/;"	l
f01009e1	obj/kern/kernel.asm	/^f01009e1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009e4	obj/kern/kernel.asm	/^f01009e4:	0f be c0             	movsbl %al,%eax$/;"	l
f01009e7	obj/kern/kernel.asm	/^f01009e7:	50                   	push   %eax$/;"	l
f01009e8	obj/kern/kernel.asm	/^f01009e8:	68 42 56 10 f0       	push   $0xf0105642$/;"	l
f01009ed	obj/kern/kernel.asm	/^f01009ed:	e8 fc 3b 00 00       	call   f01045ee <strchr>$/;"	l
f01009f2	obj/kern/kernel.asm	/^f01009f2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009f5	obj/kern/kernel.asm	/^f01009f5:	85 c0                	test   %eax,%eax$/;"	l
f01009f7	obj/kern/kernel.asm	/^f01009f7:	74 de                	je     f01009d7 <monitor+0xa3>$/;"	l
f01009f9	obj/kern/kernel.asm	/^f01009f9:	89 fe                	mov    %edi,%esi$/;"	l
f01009fb	obj/kern/kernel.asm	/^f01009fb:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01009fe	obj/kern/kernel.asm	/^f01009fe:	84 c0                	test   %al,%al$/;"	l
f0100a00	obj/kern/kernel.asm	/^f0100a00:	0f 85 66 ff ff ff    	jne    f010096c <monitor+0x38>$/;"	l
f0100a06	obj/kern/kernel.asm	/^f0100a06:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100a0d	obj/kern/kernel.asm	/^f0100a0d:	00 $/;"	l
f0100a0e	obj/kern/kernel.asm	/^f0100a0e:	85 f6                	test   %esi,%esi$/;"	l
f0100a10	obj/kern/kernel.asm	/^f0100a10:	74 a1                	je     f01009b3 <monitor+0x7f>$/;"	l
f0100a12	obj/kern/kernel.asm	/^f0100a12:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100a17	obj/kern/kernel.asm	/^f0100a17:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a1a	obj/kern/kernel.asm	/^f0100a1a:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100a1d	obj/kern/kernel.asm	/^f0100a1d:	ff 34 85 20 58 10 f0 	pushl  -0xfefa7e0(,%eax,4)$/;"	l
f0100a24	obj/kern/kernel.asm	/^f0100a24:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100a27	obj/kern/kernel.asm	/^f0100a27:	e8 64 3b 00 00       	call   f0104590 <strcmp>$/;"	l
f0100a2c	obj/kern/kernel.asm	/^f0100a2c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a2f	obj/kern/kernel.asm	/^f0100a2f:	85 c0                	test   %eax,%eax$/;"	l
f0100a31	obj/kern/kernel.asm	/^f0100a31:	74 20                	je     f0100a53 <monitor+0x11f>$/;"	l
f0100a33	obj/kern/kernel.asm	/^f0100a33:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100a36	obj/kern/kernel.asm	/^f0100a36:	83 fb 03             	cmp    $0x3,%ebx$/;"	l
f0100a39	obj/kern/kernel.asm	/^f0100a39:	75 dc                	jne    f0100a17 <monitor+0xe3>$/;"	l
f0100a3b	obj/kern/kernel.asm	/^f0100a3b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a3e	obj/kern/kernel.asm	/^f0100a3e:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100a41	obj/kern/kernel.asm	/^f0100a41:	68 64 56 10 f0       	push   $0xf0105664$/;"	l
f0100a46	obj/kern/kernel.asm	/^f0100a46:	e8 3a 23 00 00       	call   f0102d85 <cprintf>$/;"	l
f0100a4b	obj/kern/kernel.asm	/^f0100a4b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a4e	obj/kern/kernel.asm	/^f0100a4e:	e9 60 ff ff ff       	jmp    f01009b3 <monitor+0x7f>$/;"	l
f0100a53	obj/kern/kernel.asm	/^f0100a53:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100a56	obj/kern/kernel.asm	/^f0100a56:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100a59	obj/kern/kernel.asm	/^f0100a59:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100a5c	obj/kern/kernel.asm	/^f0100a5c:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f0100a5f	obj/kern/kernel.asm	/^f0100a5f:	52                   	push   %edx$/;"	l
f0100a60	obj/kern/kernel.asm	/^f0100a60:	56                   	push   %esi$/;"	l
f0100a61	obj/kern/kernel.asm	/^f0100a61:	ff 14 85 28 58 10 f0 	call   *-0xfefa7d8(,%eax,4)$/;"	l
f0100a68	obj/kern/kernel.asm	/^f0100a68:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a6b	obj/kern/kernel.asm	/^f0100a6b:	85 c0                	test   %eax,%eax$/;"	l
f0100a6d	obj/kern/kernel.asm	/^f0100a6d:	0f 89 40 ff ff ff    	jns    f01009b3 <monitor+0x7f>$/;"	l
f0100a73	obj/kern/kernel.asm	/^f0100a73:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100a76	obj/kern/kernel.asm	/^f0100a76:	5b                   	pop    %ebx$/;"	l
f0100a77	obj/kern/kernel.asm	/^f0100a77:	5e                   	pop    %esi$/;"	l
f0100a78	obj/kern/kernel.asm	/^f0100a78:	5f                   	pop    %edi$/;"	l
f0100a79	obj/kern/kernel.asm	/^f0100a79:	5d                   	pop    %ebp$/;"	l
f0100a7a	obj/kern/kernel.asm	/^f0100a7a:	c3                   	ret    $/;"	l
f0100a7b	obj/kern/kernel.asm	/^f0100a7b <nvram_read>:$/;"	l
f0100a7b	obj/kern/kernel.asm	/^f0100a7b:	55                   	push   %ebp$/;"	l
f0100a7c	obj/kern/kernel.asm	/^f0100a7c:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a7e	obj/kern/kernel.asm	/^f0100a7e:	56                   	push   %esi$/;"	l
f0100a7f	obj/kern/kernel.asm	/^f0100a7f:	53                   	push   %ebx$/;"	l
f0100a80	obj/kern/kernel.asm	/^f0100a80:	89 c6                	mov    %eax,%esi$/;"	l
f0100a82	obj/kern/kernel.asm	/^f0100a82:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100a85	obj/kern/kernel.asm	/^f0100a85:	50                   	push   %eax$/;"	l
f0100a86	obj/kern/kernel.asm	/^f0100a86:	e8 67 21 00 00       	call   f0102bf2 <mc146818_read>$/;"	l
f0100a8b	obj/kern/kernel.asm	/^f0100a8b:	89 c3                	mov    %eax,%ebx$/;"	l
f0100a8d	obj/kern/kernel.asm	/^f0100a8d:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100a90	obj/kern/kernel.asm	/^f0100a90:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100a93	obj/kern/kernel.asm	/^f0100a93:	e8 5a 21 00 00       	call   f0102bf2 <mc146818_read>$/;"	l
f0100a98	obj/kern/kernel.asm	/^f0100a98:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0100a9b	obj/kern/kernel.asm	/^f0100a9b:	09 d8                	or     %ebx,%eax$/;"	l
f0100a9d	obj/kern/kernel.asm	/^f0100a9d:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0100aa0	obj/kern/kernel.asm	/^f0100aa0:	5b                   	pop    %ebx$/;"	l
f0100aa1	obj/kern/kernel.asm	/^f0100aa1:	5e                   	pop    %esi$/;"	l
f0100aa2	obj/kern/kernel.asm	/^f0100aa2:	5d                   	pop    %ebp$/;"	l
f0100aa3	obj/kern/kernel.asm	/^f0100aa3:	c3                   	ret    $/;"	l
f0100aa4	obj/kern/kernel.asm	/^f0100aa4 <page2kva>:$/;"	l
f0100aa4	obj/kern/kernel.asm	/^f0100aa4:	2b 05 10 0f 24 f0    	sub    0xf0240f10,%eax$/;"	l
f0100aaa	obj/kern/kernel.asm	/^f0100aaa:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100aad	obj/kern/kernel.asm	/^f0100aad:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100ab0	obj/kern/kernel.asm	/^f0100ab0:	89 c2                	mov    %eax,%edx$/;"	l
f0100ab2	obj/kern/kernel.asm	/^f0100ab2:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100ab5	obj/kern/kernel.asm	/^f0100ab5:	39 15 08 0f 24 f0    	cmp    %edx,0xf0240f08$/;"	l
f0100abb	obj/kern/kernel.asm	/^f0100abb:	76 06                	jbe    f0100ac3 <page2kva+0x1f>$/;"	l
f0100abd	obj/kern/kernel.asm	/^f0100abd:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100ac2	obj/kern/kernel.asm	/^f0100ac2:	c3                   	ret    $/;"	l
f0100ac3	obj/kern/kernel.asm	/^f0100ac3:	55                   	push   %ebp$/;"	l
f0100ac4	obj/kern/kernel.asm	/^f0100ac4:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ac6	obj/kern/kernel.asm	/^f0100ac6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100ac9	obj/kern/kernel.asm	/^f0100ac9:	50                   	push   %eax$/;"	l
f0100aca	obj/kern/kernel.asm	/^f0100aca:	68 c4 52 10 f0       	push   $0xf01052c4$/;"	l
f0100acf	obj/kern/kernel.asm	/^f0100acf:	6a 58                	push   $0x58$/;"	l
f0100ad1	obj/kern/kernel.asm	/^f0100ad1:	68 5d 5e 10 f0       	push   $0xf0105e5d$/;"	l
f0100ad6	obj/kern/kernel.asm	/^f0100ad6:	e8 65 f5 ff ff       	call   f0100040 <_panic>$/;"	l
f0100adb	obj/kern/kernel.asm	/^f0100adb <check_va2pa>:$/;"	l
f0100adb	obj/kern/kernel.asm	/^f0100adb:	89 d1                	mov    %edx,%ecx$/;"	l
f0100add	obj/kern/kernel.asm	/^f0100add:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100ae0	obj/kern/kernel.asm	/^f0100ae0:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0100ae3	obj/kern/kernel.asm	/^f0100ae3:	a8 01                	test   $0x1,%al$/;"	l
f0100ae5	obj/kern/kernel.asm	/^f0100ae5:	74 4f                	je     f0100b36 <check_va2pa+0x5b>$/;"	l
f0100ae7	obj/kern/kernel.asm	/^f0100ae7:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100aec	obj/kern/kernel.asm	/^f0100aec:	89 c1                	mov    %eax,%ecx$/;"	l
f0100aee	obj/kern/kernel.asm	/^f0100aee:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100af1	obj/kern/kernel.asm	/^f0100af1:	3b 0d 08 0f 24 f0    	cmp    0xf0240f08,%ecx$/;"	l
f0100af7	obj/kern/kernel.asm	/^f0100af7:	72 1b                	jb     f0100b14 <check_va2pa+0x39>$/;"	l
f0100af9	obj/kern/kernel.asm	/^f0100af9:	55                   	push   %ebp$/;"	l
f0100afa	obj/kern/kernel.asm	/^f0100afa:	89 e5                	mov    %esp,%ebp$/;"	l
f0100afc	obj/kern/kernel.asm	/^f0100afc:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100aff	obj/kern/kernel.asm	/^f0100aff:	50                   	push   %eax$/;"	l
f0100b00	obj/kern/kernel.asm	/^f0100b00:	68 c4 52 10 f0       	push   $0xf01052c4$/;"	l
f0100b05	obj/kern/kernel.asm	/^f0100b05:	68 0a 04 00 00       	push   $0x40a$/;"	l
f0100b0a	obj/kern/kernel.asm	/^f0100b0a:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0100b0f	obj/kern/kernel.asm	/^f0100b0f:	e8 2c f5 ff ff       	call   f0100040 <_panic>$/;"	l
f0100b14	obj/kern/kernel.asm	/^f0100b14:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100b17	obj/kern/kernel.asm	/^f0100b17:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100b1d	obj/kern/kernel.asm	/^f0100b1d:	8b 94 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%edx$/;"	l
f0100b24	obj/kern/kernel.asm	/^f0100b24:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100b29	obj/kern/kernel.asm	/^f0100b29:	f6 c2 01             	test   $0x1,%dl$/;"	l
f0100b2c	obj/kern/kernel.asm	/^f0100b2c:	74 0d                	je     f0100b3b <check_va2pa+0x60>$/;"	l
f0100b2e	obj/kern/kernel.asm	/^f0100b2e:	89 d0                	mov    %edx,%eax$/;"	l
f0100b30	obj/kern/kernel.asm	/^f0100b30:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100b35	obj/kern/kernel.asm	/^f0100b35:	c3                   	ret    $/;"	l
f0100b36	obj/kern/kernel.asm	/^f0100b36:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100b3b	obj/kern/kernel.asm	/^f0100b3b:	c3                   	ret    $/;"	l
f0100b3c	obj/kern/kernel.asm	/^f0100b3c <boot_alloc>:$/;"	l
f0100b3c	obj/kern/kernel.asm	/^f0100b3c:	55                   	push   %ebp$/;"	l
f0100b3d	obj/kern/kernel.asm	/^f0100b3d:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b3f	obj/kern/kernel.asm	/^f0100b3f:	53                   	push   %ebx$/;"	l
f0100b40	obj/kern/kernel.asm	/^f0100b40:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100b43	obj/kern/kernel.asm	/^f0100b43:	89 c3                	mov    %eax,%ebx$/;"	l
f0100b45	obj/kern/kernel.asm	/^f0100b45:	83 3d 38 02 24 f0 00 	cmpl   $0x0,0xf0240238$/;"	l
f0100b4c	obj/kern/kernel.asm	/^f0100b4c:	74 45                	je     f0100b93 <boot_alloc+0x57>$/;"	l
f0100b4e	obj/kern/kernel.asm	/^f0100b4e:	a1 38 02 24 f0       	mov    0xf0240238,%eax$/;"	l
f0100b53	obj/kern/kernel.asm	/^f0100b53:	85 db                	test   %ebx,%ebx$/;"	l
f0100b55	obj/kern/kernel.asm	/^f0100b55:	74 16                	je     f0100b6d <boot_alloc+0x31>$/;"	l
f0100b57	obj/kern/kernel.asm	/^f0100b57:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0100b5a	obj/kern/kernel.asm	/^f0100b5a:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0100b60	obj/kern/kernel.asm	/^f0100b60:	8d 94 18 00 10 00 00 	lea    0x1000(%eax,%ebx,1),%edx$/;"	l
f0100b67	obj/kern/kernel.asm	/^f0100b67:	89 15 38 02 24 f0    	mov    %edx,0xf0240238$/;"	l
f0100b6d	obj/kern/kernel.asm	/^f0100b6d:	8b 15 38 02 24 f0    	mov    0xf0240238,%edx$/;"	l
f0100b73	obj/kern/kernel.asm	/^f0100b73:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0100b79	obj/kern/kernel.asm	/^f0100b79:	76 43                	jbe    f0100bbe <boot_alloc+0x82>$/;"	l
f0100b7b	obj/kern/kernel.asm	/^f0100b7b:	8b 0d 08 0f 24 f0    	mov    0xf0240f08,%ecx$/;"	l
f0100b81	obj/kern/kernel.asm	/^f0100b81:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0100b84	obj/kern/kernel.asm	/^f0100b84:	81 c2 00 00 00 10    	add    $0x10000000,%edx$/;"	l
f0100b8a	obj/kern/kernel.asm	/^f0100b8a:	39 d1                	cmp    %edx,%ecx$/;"	l
f0100b8c	obj/kern/kernel.asm	/^f0100b8c:	76 42                	jbe    f0100bd0 <boot_alloc+0x94>$/;"	l
f0100b8e	obj/kern/kernel.asm	/^f0100b8e:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100b91	obj/kern/kernel.asm	/^f0100b91:	c9                   	leave  $/;"	l
f0100b92	obj/kern/kernel.asm	/^f0100b92:	c3                   	ret    $/;"	l
f0100b93	obj/kern/kernel.asm	/^f0100b93:	b8 07 30 28 f0       	mov    $0xf0283007,%eax$/;"	l
f0100b98	obj/kern/kernel.asm	/^f0100b98:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100b9d	obj/kern/kernel.asm	/^f0100b9d:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f0100ba2	obj/kern/kernel.asm	/^f0100ba2:	a3 38 02 24 f0       	mov    %eax,0xf0240238$/;"	l
f0100ba7	obj/kern/kernel.asm	/^f0100ba7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100baa	obj/kern/kernel.asm	/^f0100baa:	68 08 20 28 f0       	push   $0xf0282008$/;"	l
f0100baf	obj/kern/kernel.asm	/^f0100baf:	68 77 5e 10 f0       	push   $0xf0105e77$/;"	l
f0100bb4	obj/kern/kernel.asm	/^f0100bb4:	e8 cc 21 00 00       	call   f0102d85 <cprintf>$/;"	l
f0100bb9	obj/kern/kernel.asm	/^f0100bb9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100bbc	obj/kern/kernel.asm	/^f0100bbc:	eb 90                	jmp    f0100b4e <boot_alloc+0x12>$/;"	l
f0100bbe	obj/kern/kernel.asm	/^f0100bbe:	52                   	push   %edx$/;"	l
f0100bbf	obj/kern/kernel.asm	/^f0100bbf:	68 e8 52 10 f0       	push   $0xf01052e8$/;"	l
f0100bc4	obj/kern/kernel.asm	/^f0100bc4:	6a 7d                	push   $0x7d$/;"	l
f0100bc6	obj/kern/kernel.asm	/^f0100bc6:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0100bcb	obj/kern/kernel.asm	/^f0100bcb:	e8 70 f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100bd0	obj/kern/kernel.asm	/^f0100bd0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100bd3	obj/kern/kernel.asm	/^f0100bd3:	68 7e 5e 10 f0       	push   $0xf0105e7e$/;"	l
f0100bd8	obj/kern/kernel.asm	/^f0100bd8:	6a 7e                	push   $0x7e$/;"	l
f0100bda	obj/kern/kernel.asm	/^f0100bda:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0100bdf	obj/kern/kernel.asm	/^f0100bdf:	e8 5c f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100be4	obj/kern/kernel.asm	/^f0100be4 <page_init>:$/;"	l
f0100be4	obj/kern/kernel.asm	/^f0100be4:	55                   	push   %ebp$/;"	l
f0100be5	obj/kern/kernel.asm	/^f0100be5:	89 e5                	mov    %esp,%ebp$/;"	l
f0100be7	obj/kern/kernel.asm	/^f0100be7:	57                   	push   %edi$/;"	l
f0100be8	obj/kern/kernel.asm	/^f0100be8:	56                   	push   %esi$/;"	l
f0100be9	obj/kern/kernel.asm	/^f0100be9:	53                   	push   %ebx$/;"	l
f0100bea	obj/kern/kernel.asm	/^f0100bea:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100bed	obj/kern/kernel.asm	/^f0100bed:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100bf2	obj/kern/kernel.asm	/^f0100bf2:	e8 45 ff ff ff       	call   f0100b3c <boot_alloc>$/;"	l
f0100bf7	obj/kern/kernel.asm	/^f0100bf7:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0100bfc	obj/kern/kernel.asm	/^f0100bfc:	76 22                	jbe    f0100c20 <page_init+0x3c>$/;"	l
f0100bfe	obj/kern/kernel.asm	/^f0100bfe:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0100c03	obj/kern/kernel.asm	/^f0100c03:	8b 0d 44 02 24 f0    	mov    0xf0240244,%ecx$/;"	l
f0100c09	obj/kern/kernel.asm	/^f0100c09:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0100c0c	obj/kern/kernel.asm	/^f0100c0c:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0100c0f	obj/kern/kernel.asm	/^f0100c0f:	8b 3d 40 02 24 f0    	mov    0xf0240240,%edi$/;"	l
f0100c15	obj/kern/kernel.asm	/^f0100c15:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)$/;"	l
f0100c19	obj/kern/kernel.asm	/^f0100c19:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100c1e	obj/kern/kernel.asm	/^f0100c1e:	eb 30                	jmp    f0100c50 <page_init+0x6c>$/;"	l
f0100c20	obj/kern/kernel.asm	/^f0100c20:	50                   	push   %eax$/;"	l
f0100c21	obj/kern/kernel.asm	/^f0100c21:	68 e8 52 10 f0       	push   $0xf01052e8$/;"	l
f0100c26	obj/kern/kernel.asm	/^f0100c26:	68 59 01 00 00       	push   $0x159$/;"	l
f0100c2b	obj/kern/kernel.asm	/^f0100c2b:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0100c30	obj/kern/kernel.asm	/^f0100c30:	e8 0b f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c35	obj/kern/kernel.asm	/^f0100c35:	39 d8                	cmp    %ebx,%eax$/;"	l
f0100c37	obj/kern/kernel.asm	/^f0100c37:	77 42                	ja     f0100c7b <page_init+0x97>$/;"	l
f0100c39	obj/kern/kernel.asm	/^f0100c39:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0100c3f	obj/kern/kernel.asm	/^f0100c3f:	89 3e                	mov    %edi,(%esi)$/;"	l
f0100c41	obj/kern/kernel.asm	/^f0100c41:	89 cf                	mov    %ecx,%edi$/;"	l
f0100c43	obj/kern/kernel.asm	/^f0100c43:	03 3d 10 0f 24 f0    	add    0xf0240f10,%edi$/;"	l
f0100c49	obj/kern/kernel.asm	/^f0100c49:	c6 45 e7 01          	movb   $0x1,-0x19(%ebp)$/;"	l
f0100c4d	obj/kern/kernel.asm	/^f0100c4d:	83 c2 01             	add    $0x1,%edx$/;"	l
f0100c50	obj/kern/kernel.asm	/^f0100c50:	39 15 08 0f 24 f0    	cmp    %edx,0xf0240f08$/;"	l
f0100c56	obj/kern/kernel.asm	/^f0100c56:	76 31                	jbe    f0100c89 <page_init+0xa5>$/;"	l
f0100c58	obj/kern/kernel.asm	/^f0100c58:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx$/;"	l
f0100c5f	obj/kern/kernel.asm	/^f0100c5f:	89 ce                	mov    %ecx,%esi$/;"	l
f0100c61	obj/kern/kernel.asm	/^f0100c61:	03 35 10 0f 24 f0    	add    0xf0240f10,%esi$/;"	l
f0100c67	obj/kern/kernel.asm	/^f0100c67:	89 cb                	mov    %ecx,%ebx$/;"	l
f0100c69	obj/kern/kernel.asm	/^f0100c69:	c1 e3 09             	shl    $0x9,%ebx$/;"	l
f0100c6c	obj/kern/kernel.asm	/^f0100c6c:	81 fb ff 0f 00 00    	cmp    $0xfff,%ebx$/;"	l
f0100c72	obj/kern/kernel.asm	/^f0100c72:	76 c1                	jbe    f0100c35 <page_init+0x51>$/;"	l
f0100c74	obj/kern/kernel.asm	/^f0100c74:	39 5d e0             	cmp    %ebx,-0x20(%ebp)$/;"	l
f0100c77	obj/kern/kernel.asm	/^f0100c77:	77 c0                	ja     f0100c39 <page_init+0x55>$/;"	l
f0100c79	obj/kern/kernel.asm	/^f0100c79:	eb ba                	jmp    f0100c35 <page_init+0x51>$/;"	l
f0100c7b	obj/kern/kernel.asm	/^f0100c7b:	66 c7 46 04 01 00    	movw   $0x1,0x4(%esi)$/;"	l
f0100c81	obj/kern/kernel.asm	/^f0100c81:	c7 06 00 00 00 00    	movl   $0x0,(%esi)$/;"	l
f0100c87	obj/kern/kernel.asm	/^f0100c87:	eb c4                	jmp    f0100c4d <page_init+0x69>$/;"	l
f0100c89	obj/kern/kernel.asm	/^f0100c89:	80 7d e7 00          	cmpb   $0x0,-0x19(%ebp)$/;"	l
f0100c8d	obj/kern/kernel.asm	/^f0100c8d:	75 08                	jne    f0100c97 <page_init+0xb3>$/;"	l
f0100c8f	obj/kern/kernel.asm	/^f0100c8f:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100c92	obj/kern/kernel.asm	/^f0100c92:	5b                   	pop    %ebx$/;"	l
f0100c93	obj/kern/kernel.asm	/^f0100c93:	5e                   	pop    %esi$/;"	l
f0100c94	obj/kern/kernel.asm	/^f0100c94:	5f                   	pop    %edi$/;"	l
f0100c95	obj/kern/kernel.asm	/^f0100c95:	5d                   	pop    %ebp$/;"	l
f0100c96	obj/kern/kernel.asm	/^f0100c96:	c3                   	ret    $/;"	l
f0100c97	obj/kern/kernel.asm	/^f0100c97:	89 3d 40 02 24 f0    	mov    %edi,0xf0240240$/;"	l
f0100c9d	obj/kern/kernel.asm	/^f0100c9d:	eb f0                	jmp    f0100c8f <page_init+0xab>$/;"	l
f0100c9f	obj/kern/kernel.asm	/^f0100c9f <page_alloc>:$/;"	l
f0100c9f	obj/kern/kernel.asm	/^f0100c9f:	55                   	push   %ebp$/;"	l
f0100ca0	obj/kern/kernel.asm	/^f0100ca0:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ca2	obj/kern/kernel.asm	/^f0100ca2:	53                   	push   %ebx$/;"	l
f0100ca3	obj/kern/kernel.asm	/^f0100ca3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100ca6	obj/kern/kernel.asm	/^f0100ca6:	8b 1d 40 02 24 f0    	mov    0xf0240240,%ebx$/;"	l
f0100cac	obj/kern/kernel.asm	/^f0100cac:	85 db                	test   %ebx,%ebx$/;"	l
f0100cae	obj/kern/kernel.asm	/^f0100cae:	74 13                	je     f0100cc3 <page_alloc+0x24>$/;"	l
f0100cb0	obj/kern/kernel.asm	/^f0100cb0:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100cb2	obj/kern/kernel.asm	/^f0100cb2:	a3 40 02 24 f0       	mov    %eax,0xf0240240$/;"	l
f0100cb7	obj/kern/kernel.asm	/^f0100cb7:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f0100cbd	obj/kern/kernel.asm	/^f0100cbd:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f0100cc1	obj/kern/kernel.asm	/^f0100cc1:	75 07                	jne    f0100cca <page_alloc+0x2b>$/;"	l
f0100cc3	obj/kern/kernel.asm	/^f0100cc3:	89 d8                	mov    %ebx,%eax$/;"	l
f0100cc5	obj/kern/kernel.asm	/^f0100cc5:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100cc8	obj/kern/kernel.asm	/^f0100cc8:	c9                   	leave  $/;"	l
f0100cc9	obj/kern/kernel.asm	/^f0100cc9:	c3                   	ret    $/;"	l
f0100cca	obj/kern/kernel.asm	/^f0100cca:	89 d8                	mov    %ebx,%eax$/;"	l
f0100ccc	obj/kern/kernel.asm	/^f0100ccc:	2b 05 10 0f 24 f0    	sub    0xf0240f10,%eax$/;"	l
f0100cd2	obj/kern/kernel.asm	/^f0100cd2:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100cd5	obj/kern/kernel.asm	/^f0100cd5:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100cd8	obj/kern/kernel.asm	/^f0100cd8:	89 c2                	mov    %eax,%edx$/;"	l
f0100cda	obj/kern/kernel.asm	/^f0100cda:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100cdd	obj/kern/kernel.asm	/^f0100cdd:	3b 15 08 0f 24 f0    	cmp    0xf0240f08,%edx$/;"	l
f0100ce3	obj/kern/kernel.asm	/^f0100ce3:	73 1a                	jae    f0100cff <page_alloc+0x60>$/;"	l
f0100ce5	obj/kern/kernel.asm	/^f0100ce5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100ce8	obj/kern/kernel.asm	/^f0100ce8:	68 00 10 00 00       	push   $0x1000$/;"	l
f0100ced	obj/kern/kernel.asm	/^f0100ced:	6a 00                	push   $0x0$/;"	l
f0100cef	obj/kern/kernel.asm	/^f0100cef:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100cf4	obj/kern/kernel.asm	/^f0100cf4:	50                   	push   %eax$/;"	l
f0100cf5	obj/kern/kernel.asm	/^f0100cf5:	e8 31 39 00 00       	call   f010462b <memset>$/;"	l
f0100cfa	obj/kern/kernel.asm	/^f0100cfa:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100cfd	obj/kern/kernel.asm	/^f0100cfd:	eb c4                	jmp    f0100cc3 <page_alloc+0x24>$/;"	l
f0100cff	obj/kern/kernel.asm	/^f0100cff:	50                   	push   %eax$/;"	l
f0100d00	obj/kern/kernel.asm	/^f0100d00:	68 c4 52 10 f0       	push   $0xf01052c4$/;"	l
f0100d05	obj/kern/kernel.asm	/^f0100d05:	6a 58                	push   $0x58$/;"	l
f0100d07	obj/kern/kernel.asm	/^f0100d07:	68 5d 5e 10 f0       	push   $0xf0105e5d$/;"	l
f0100d0c	obj/kern/kernel.asm	/^f0100d0c:	e8 2f f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d11	obj/kern/kernel.asm	/^f0100d11 <page_free>:$/;"	l
f0100d11	obj/kern/kernel.asm	/^f0100d11:	55                   	push   %ebp$/;"	l
f0100d12	obj/kern/kernel.asm	/^f0100d12:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d14	obj/kern/kernel.asm	/^f0100d14:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100d17	obj/kern/kernel.asm	/^f0100d17:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100d1a	obj/kern/kernel.asm	/^f0100d1a:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f0100d1f	obj/kern/kernel.asm	/^f0100d1f:	75 14                	jne    f0100d35 <page_free+0x24>$/;"	l
f0100d21	obj/kern/kernel.asm	/^f0100d21:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0100d24	obj/kern/kernel.asm	/^f0100d24:	75 26                	jne    f0100d4c <page_free+0x3b>$/;"	l
f0100d26	obj/kern/kernel.asm	/^f0100d26:	8b 15 40 02 24 f0    	mov    0xf0240240,%edx$/;"	l
f0100d2c	obj/kern/kernel.asm	/^f0100d2c:	89 10                	mov    %edx,(%eax)$/;"	l
f0100d2e	obj/kern/kernel.asm	/^f0100d2e:	a3 40 02 24 f0       	mov    %eax,0xf0240240$/;"	l
f0100d33	obj/kern/kernel.asm	/^f0100d33:	c9                   	leave  $/;"	l
f0100d34	obj/kern/kernel.asm	/^f0100d34:	c3                   	ret    $/;"	l
f0100d35	obj/kern/kernel.asm	/^f0100d35:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100d38	obj/kern/kernel.asm	/^f0100d38:	68 44 58 10 f0       	push   $0xf0105844$/;"	l
f0100d3d	obj/kern/kernel.asm	/^f0100d3d:	68 9e 01 00 00       	push   $0x19e$/;"	l
f0100d42	obj/kern/kernel.asm	/^f0100d42:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0100d47	obj/kern/kernel.asm	/^f0100d47:	e8 f4 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d4c	obj/kern/kernel.asm	/^f0100d4c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100d4f	obj/kern/kernel.asm	/^f0100d4f:	68 8e 5e 10 f0       	push   $0xf0105e8e$/;"	l
f0100d54	obj/kern/kernel.asm	/^f0100d54:	68 a1 01 00 00       	push   $0x1a1$/;"	l
f0100d59	obj/kern/kernel.asm	/^f0100d59:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0100d5e	obj/kern/kernel.asm	/^f0100d5e:	e8 dd f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d63	obj/kern/kernel.asm	/^f0100d63 <page_decref>:$/;"	l
f0100d63	obj/kern/kernel.asm	/^f0100d63:	55                   	push   %ebp$/;"	l
f0100d64	obj/kern/kernel.asm	/^f0100d64:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d66	obj/kern/kernel.asm	/^f0100d66:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100d69	obj/kern/kernel.asm	/^f0100d69:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100d6c	obj/kern/kernel.asm	/^f0100d6c:	0f b7 42 04          	movzwl 0x4(%edx),%eax$/;"	l
f0100d70	obj/kern/kernel.asm	/^f0100d70:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100d73	obj/kern/kernel.asm	/^f0100d73:	66 89 42 04          	mov    %ax,0x4(%edx)$/;"	l
f0100d77	obj/kern/kernel.asm	/^f0100d77:	66 85 c0             	test   %ax,%ax$/;"	l
f0100d7a	obj/kern/kernel.asm	/^f0100d7a:	74 02                	je     f0100d7e <page_decref+0x1b>$/;"	l
f0100d7c	obj/kern/kernel.asm	/^f0100d7c:	c9                   	leave  $/;"	l
f0100d7d	obj/kern/kernel.asm	/^f0100d7d:	c3                   	ret    $/;"	l
f0100d7e	obj/kern/kernel.asm	/^f0100d7e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100d81	obj/kern/kernel.asm	/^f0100d81:	52                   	push   %edx$/;"	l
f0100d82	obj/kern/kernel.asm	/^f0100d82:	e8 8a ff ff ff       	call   f0100d11 <page_free>$/;"	l
f0100d87	obj/kern/kernel.asm	/^f0100d87:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100d8a	obj/kern/kernel.asm	/^f0100d8a:	eb f0                	jmp    f0100d7c <page_decref+0x19>$/;"	l
f0100d8c	obj/kern/kernel.asm	/^f0100d8c <pgdir_walk>:$/;"	l
f0100d8c	obj/kern/kernel.asm	/^f0100d8c:	55                   	push   %ebp$/;"	l
f0100d8d	obj/kern/kernel.asm	/^f0100d8d:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d8f	obj/kern/kernel.asm	/^f0100d8f:	56                   	push   %esi$/;"	l
f0100d90	obj/kern/kernel.asm	/^f0100d90:	53                   	push   %ebx$/;"	l
f0100d91	obj/kern/kernel.asm	/^f0100d91:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0100d94	obj/kern/kernel.asm	/^f0100d94:	89 de                	mov    %ebx,%esi$/;"	l
f0100d96	obj/kern/kernel.asm	/^f0100d96:	c1 ee 16             	shr    $0x16,%esi$/;"	l
f0100d99	obj/kern/kernel.asm	/^f0100d99:	c1 e6 02             	shl    $0x2,%esi$/;"	l
f0100d9c	obj/kern/kernel.asm	/^f0100d9c:	03 75 08             	add    0x8(%ebp),%esi$/;"	l
f0100d9f	obj/kern/kernel.asm	/^f0100d9f:	8b 06                	mov    (%esi),%eax$/;"	l
f0100da1	obj/kern/kernel.asm	/^f0100da1:	a8 01                	test   $0x1,%al$/;"	l
f0100da3	obj/kern/kernel.asm	/^f0100da3:	74 3e                	je     f0100de3 <pgdir_walk+0x57>$/;"	l
f0100da5	obj/kern/kernel.asm	/^f0100da5:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100daa	obj/kern/kernel.asm	/^f0100daa:	89 c2                	mov    %eax,%edx$/;"	l
f0100dac	obj/kern/kernel.asm	/^f0100dac:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100daf	obj/kern/kernel.asm	/^f0100daf:	39 15 08 0f 24 f0    	cmp    %edx,0xf0240f08$/;"	l
f0100db5	obj/kern/kernel.asm	/^f0100db5:	76 17                	jbe    f0100dce <pgdir_walk+0x42>$/;"	l
f0100db7	obj/kern/kernel.asm	/^f0100db7:	c1 eb 0a             	shr    $0xa,%ebx$/;"	l
f0100dba	obj/kern/kernel.asm	/^f0100dba:	81 e3 fc 0f 00 00    	and    $0xffc,%ebx$/;"	l
f0100dc0	obj/kern/kernel.asm	/^f0100dc0:	8d 84 18 00 00 00 f0 	lea    -0x10000000(%eax,%ebx,1),%eax$/;"	l
f0100dc7	obj/kern/kernel.asm	/^f0100dc7:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0100dca	obj/kern/kernel.asm	/^f0100dca:	5b                   	pop    %ebx$/;"	l
f0100dcb	obj/kern/kernel.asm	/^f0100dcb:	5e                   	pop    %esi$/;"	l
f0100dcc	obj/kern/kernel.asm	/^f0100dcc:	5d                   	pop    %ebp$/;"	l
f0100dcd	obj/kern/kernel.asm	/^f0100dcd:	c3                   	ret    $/;"	l
f0100dce	obj/kern/kernel.asm	/^f0100dce:	50                   	push   %eax$/;"	l
f0100dcf	obj/kern/kernel.asm	/^f0100dcf:	68 c4 52 10 f0       	push   $0xf01052c4$/;"	l
f0100dd4	obj/kern/kernel.asm	/^f0100dd4:	68 d4 01 00 00       	push   $0x1d4$/;"	l
f0100dd9	obj/kern/kernel.asm	/^f0100dd9:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0100dde	obj/kern/kernel.asm	/^f0100dde:	e8 5d f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100de3	obj/kern/kernel.asm	/^f0100de3:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0100de7	obj/kern/kernel.asm	/^f0100de7:	74 66                	je     f0100e4f <pgdir_walk+0xc3>$/;"	l
f0100de9	obj/kern/kernel.asm	/^f0100de9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100dec	obj/kern/kernel.asm	/^f0100dec:	6a 01                	push   $0x1$/;"	l
f0100dee	obj/kern/kernel.asm	/^f0100dee:	e8 ac fe ff ff       	call   f0100c9f <page_alloc>$/;"	l
f0100df3	obj/kern/kernel.asm	/^f0100df3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100df6	obj/kern/kernel.asm	/^f0100df6:	85 c0                	test   %eax,%eax$/;"	l
f0100df8	obj/kern/kernel.asm	/^f0100df8:	74 5f                	je     f0100e59 <pgdir_walk+0xcd>$/;"	l
f0100dfa	obj/kern/kernel.asm	/^f0100dfa:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0100dff	obj/kern/kernel.asm	/^f0100dff:	89 c2                	mov    %eax,%edx$/;"	l
f0100e01	obj/kern/kernel.asm	/^f0100e01:	2b 15 10 0f 24 f0    	sub    0xf0240f10,%edx$/;"	l
f0100e07	obj/kern/kernel.asm	/^f0100e07:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0100e0a	obj/kern/kernel.asm	/^f0100e0a:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0100e0d	obj/kern/kernel.asm	/^f0100e0d:	83 ca 3f             	or     $0x3f,%edx$/;"	l
f0100e10	obj/kern/kernel.asm	/^f0100e10:	89 16                	mov    %edx,(%esi)$/;"	l
f0100e12	obj/kern/kernel.asm	/^f0100e12:	2b 05 10 0f 24 f0    	sub    0xf0240f10,%eax$/;"	l
f0100e18	obj/kern/kernel.asm	/^f0100e18:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100e1b	obj/kern/kernel.asm	/^f0100e1b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100e1e	obj/kern/kernel.asm	/^f0100e1e:	89 c2                	mov    %eax,%edx$/;"	l
f0100e20	obj/kern/kernel.asm	/^f0100e20:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100e23	obj/kern/kernel.asm	/^f0100e23:	3b 15 08 0f 24 f0    	cmp    0xf0240f08,%edx$/;"	l
f0100e29	obj/kern/kernel.asm	/^f0100e29:	73 12                	jae    f0100e3d <pgdir_walk+0xb1>$/;"	l
f0100e2b	obj/kern/kernel.asm	/^f0100e2b:	c1 eb 0a             	shr    $0xa,%ebx$/;"	l
f0100e2e	obj/kern/kernel.asm	/^f0100e2e:	81 e3 fc 0f 00 00    	and    $0xffc,%ebx$/;"	l
f0100e34	obj/kern/kernel.asm	/^f0100e34:	8d 84 18 00 00 00 f0 	lea    -0x10000000(%eax,%ebx,1),%eax$/;"	l
f0100e3b	obj/kern/kernel.asm	/^f0100e3b:	eb 8a                	jmp    f0100dc7 <pgdir_walk+0x3b>$/;"	l
f0100e3d	obj/kern/kernel.asm	/^f0100e3d:	50                   	push   %eax$/;"	l
f0100e3e	obj/kern/kernel.asm	/^f0100e3e:	68 c4 52 10 f0       	push   $0xf01052c4$/;"	l
f0100e43	obj/kern/kernel.asm	/^f0100e43:	6a 58                	push   $0x58$/;"	l
f0100e45	obj/kern/kernel.asm	/^f0100e45:	68 5d 5e 10 f0       	push   $0xf0105e5d$/;"	l
f0100e4a	obj/kern/kernel.asm	/^f0100e4a:	e8 f1 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e4f	obj/kern/kernel.asm	/^f0100e4f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e54	obj/kern/kernel.asm	/^f0100e54:	e9 6e ff ff ff       	jmp    f0100dc7 <pgdir_walk+0x3b>$/;"	l
f0100e59	obj/kern/kernel.asm	/^f0100e59:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e5e	obj/kern/kernel.asm	/^f0100e5e:	e9 64 ff ff ff       	jmp    f0100dc7 <pgdir_walk+0x3b>$/;"	l
f0100e63	obj/kern/kernel.asm	/^f0100e63 <page_lookup>:$/;"	l
f0100e63	obj/kern/kernel.asm	/^f0100e63:	55                   	push   %ebp$/;"	l
f0100e64	obj/kern/kernel.asm	/^f0100e64:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e66	obj/kern/kernel.asm	/^f0100e66:	53                   	push   %ebx$/;"	l
f0100e67	obj/kern/kernel.asm	/^f0100e67:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100e6a	obj/kern/kernel.asm	/^f0100e6a:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0100e6d	obj/kern/kernel.asm	/^f0100e6d:	6a 01                	push   $0x1$/;"	l
f0100e6f	obj/kern/kernel.asm	/^f0100e6f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100e72	obj/kern/kernel.asm	/^f0100e72:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100e75	obj/kern/kernel.asm	/^f0100e75:	e8 12 ff ff ff       	call   f0100d8c <pgdir_walk>$/;"	l
f0100e7a	obj/kern/kernel.asm	/^f0100e7a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e7d	obj/kern/kernel.asm	/^f0100e7d:	85 c0                	test   %eax,%eax$/;"	l
f0100e7f	obj/kern/kernel.asm	/^f0100e7f:	74 39                	je     f0100eba <page_lookup+0x57>$/;"	l
f0100e81	obj/kern/kernel.asm	/^f0100e81:	85 db                	test   %ebx,%ebx$/;"	l
f0100e83	obj/kern/kernel.asm	/^f0100e83:	74 02                	je     f0100e87 <page_lookup+0x24>$/;"	l
f0100e85	obj/kern/kernel.asm	/^f0100e85:	89 03                	mov    %eax,(%ebx)$/;"	l
f0100e87	obj/kern/kernel.asm	/^f0100e87:	8b 00                	mov    (%eax),%eax$/;"	l
f0100e89	obj/kern/kernel.asm	/^f0100e89:	a8 01                	test   $0x1,%al$/;"	l
f0100e8b	obj/kern/kernel.asm	/^f0100e8b:	74 34                	je     f0100ec1 <page_lookup+0x5e>$/;"	l
f0100e8d	obj/kern/kernel.asm	/^f0100e8d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100e90	obj/kern/kernel.asm	/^f0100e90:	39 05 08 0f 24 f0    	cmp    %eax,0xf0240f08$/;"	l
f0100e96	obj/kern/kernel.asm	/^f0100e96:	76 0e                	jbe    f0100ea6 <page_lookup+0x43>$/;"	l
f0100e98	obj/kern/kernel.asm	/^f0100e98:	8b 15 10 0f 24 f0    	mov    0xf0240f10,%edx$/;"	l
f0100e9e	obj/kern/kernel.asm	/^f0100e9e:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0100ea1	obj/kern/kernel.asm	/^f0100ea1:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100ea4	obj/kern/kernel.asm	/^f0100ea4:	c9                   	leave  $/;"	l
f0100ea5	obj/kern/kernel.asm	/^f0100ea5:	c3                   	ret    $/;"	l
f0100ea6	obj/kern/kernel.asm	/^f0100ea6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100ea9	obj/kern/kernel.asm	/^f0100ea9:	68 6c 58 10 f0       	push   $0xf010586c$/;"	l
f0100eae	obj/kern/kernel.asm	/^f0100eae:	6a 51                	push   $0x51$/;"	l
f0100eb0	obj/kern/kernel.asm	/^f0100eb0:	68 5d 5e 10 f0       	push   $0xf0105e5d$/;"	l
f0100eb5	obj/kern/kernel.asm	/^f0100eb5:	e8 86 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100eba	obj/kern/kernel.asm	/^f0100eba:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ebf	obj/kern/kernel.asm	/^f0100ebf:	eb e0                	jmp    f0100ea1 <page_lookup+0x3e>$/;"	l
f0100ec1	obj/kern/kernel.asm	/^f0100ec1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ec6	obj/kern/kernel.asm	/^f0100ec6:	eb d9                	jmp    f0100ea1 <page_lookup+0x3e>$/;"	l
f0100ec8	obj/kern/kernel.asm	/^f0100ec8 <tlb_invalidate>:$/;"	l
f0100ec8	obj/kern/kernel.asm	/^f0100ec8:	55                   	push   %ebp$/;"	l
f0100ec9	obj/kern/kernel.asm	/^f0100ec9:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ecb	obj/kern/kernel.asm	/^f0100ecb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100ece	obj/kern/kernel.asm	/^f0100ece:	e8 7c 3d 00 00       	call   f0104c4f <cpunum>$/;"	l
f0100ed3	obj/kern/kernel.asm	/^f0100ed3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100ed6	obj/kern/kernel.asm	/^f0100ed6:	83 b8 28 10 24 f0 00 	cmpl   $0x0,-0xfdbefd8(%eax)$/;"	l
f0100edd	obj/kern/kernel.asm	/^f0100edd:	74 16                	je     f0100ef5 <tlb_invalidate+0x2d>$/;"	l
f0100edf	obj/kern/kernel.asm	/^f0100edf:	e8 6b 3d 00 00       	call   f0104c4f <cpunum>$/;"	l
f0100ee4	obj/kern/kernel.asm	/^f0100ee4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100ee7	obj/kern/kernel.asm	/^f0100ee7:	8b 80 28 10 24 f0    	mov    -0xfdbefd8(%eax),%eax$/;"	l
f0100eed	obj/kern/kernel.asm	/^f0100eed:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100ef0	obj/kern/kernel.asm	/^f0100ef0:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f0100ef3	obj/kern/kernel.asm	/^f0100ef3:	75 06                	jne    f0100efb <tlb_invalidate+0x33>$/;"	l
f0100ef5	obj/kern/kernel.asm	/^f0100ef5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100ef8	obj/kern/kernel.asm	/^f0100ef8:	0f 01 38             	invlpg (%eax)$/;"	l
f0100efb	obj/kern/kernel.asm	/^f0100efb:	c9                   	leave  $/;"	l
f0100efc	obj/kern/kernel.asm	/^f0100efc:	c3                   	ret    $/;"	l
f0100efd	obj/kern/kernel.asm	/^f0100efd <page_remove>:$/;"	l
f0100efd	obj/kern/kernel.asm	/^f0100efd:	55                   	push   %ebp$/;"	l
f0100efe	obj/kern/kernel.asm	/^f0100efe:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f00	obj/kern/kernel.asm	/^f0100f00:	56                   	push   %esi$/;"	l
f0100f01	obj/kern/kernel.asm	/^f0100f01:	53                   	push   %ebx$/;"	l
f0100f02	obj/kern/kernel.asm	/^f0100f02:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100f05	obj/kern/kernel.asm	/^f0100f05:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0100f08	obj/kern/kernel.asm	/^f0100f08:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100f0b	obj/kern/kernel.asm	/^f0100f0b:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0100f0e	obj/kern/kernel.asm	/^f0100f0e:	50                   	push   %eax$/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	56                   	push   %esi$/;"	l
f0100f10	obj/kern/kernel.asm	/^f0100f10:	53                   	push   %ebx$/;"	l
f0100f11	obj/kern/kernel.asm	/^f0100f11:	e8 4d ff ff ff       	call   f0100e63 <page_lookup>$/;"	l
f0100f16	obj/kern/kernel.asm	/^f0100f16:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f19	obj/kern/kernel.asm	/^f0100f19:	85 c0                	test   %eax,%eax$/;"	l
f0100f1b	obj/kern/kernel.asm	/^f0100f1b:	75 07                	jne    f0100f24 <page_remove+0x27>$/;"	l
f0100f1d	obj/kern/kernel.asm	/^f0100f1d:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0100f20	obj/kern/kernel.asm	/^f0100f20:	5b                   	pop    %ebx$/;"	l
f0100f21	obj/kern/kernel.asm	/^f0100f21:	5e                   	pop    %esi$/;"	l
f0100f22	obj/kern/kernel.asm	/^f0100f22:	5d                   	pop    %ebp$/;"	l
f0100f23	obj/kern/kernel.asm	/^f0100f23:	c3                   	ret    $/;"	l
f0100f24	obj/kern/kernel.asm	/^f0100f24:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100f27	obj/kern/kernel.asm	/^f0100f27:	50                   	push   %eax$/;"	l
f0100f28	obj/kern/kernel.asm	/^f0100f28:	e8 36 fe ff ff       	call   f0100d63 <page_decref>$/;"	l
f0100f2d	obj/kern/kernel.asm	/^f0100f2d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100f30	obj/kern/kernel.asm	/^f0100f30:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100f36	obj/kern/kernel.asm	/^f0100f36:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100f39	obj/kern/kernel.asm	/^f0100f39:	56                   	push   %esi$/;"	l
f0100f3a	obj/kern/kernel.asm	/^f0100f3a:	53                   	push   %ebx$/;"	l
f0100f3b	obj/kern/kernel.asm	/^f0100f3b:	e8 88 ff ff ff       	call   f0100ec8 <tlb_invalidate>$/;"	l
f0100f40	obj/kern/kernel.asm	/^f0100f40:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f43	obj/kern/kernel.asm	/^f0100f43:	eb d8                	jmp    f0100f1d <page_remove+0x20>$/;"	l
f0100f45	obj/kern/kernel.asm	/^f0100f45 <page_insert>:$/;"	l
f0100f45	obj/kern/kernel.asm	/^f0100f45:	55                   	push   %ebp$/;"	l
f0100f46	obj/kern/kernel.asm	/^f0100f46:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f48	obj/kern/kernel.asm	/^f0100f48:	57                   	push   %edi$/;"	l
f0100f49	obj/kern/kernel.asm	/^f0100f49:	56                   	push   %esi$/;"	l
f0100f4a	obj/kern/kernel.asm	/^f0100f4a:	53                   	push   %ebx$/;"	l
f0100f4b	obj/kern/kernel.asm	/^f0100f4b:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100f4e	obj/kern/kernel.asm	/^f0100f4e:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100f51	obj/kern/kernel.asm	/^f0100f51:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0100f54	obj/kern/kernel.asm	/^f0100f54:	6a 01                	push   $0x1$/;"	l
f0100f56	obj/kern/kernel.asm	/^f0100f56:	57                   	push   %edi$/;"	l
f0100f57	obj/kern/kernel.asm	/^f0100f57:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100f5a	obj/kern/kernel.asm	/^f0100f5a:	e8 2d fe ff ff       	call   f0100d8c <pgdir_walk>$/;"	l
f0100f5f	obj/kern/kernel.asm	/^f0100f5f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f62	obj/kern/kernel.asm	/^f0100f62:	85 c0                	test   %eax,%eax$/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64:	0f 84 87 00 00 00    	je     f0100ff1 <page_insert+0xac>$/;"	l
f0100f6a	obj/kern/kernel.asm	/^f0100f6a:	89 c3                	mov    %eax,%ebx$/;"	l
f0100f6c	obj/kern/kernel.asm	/^f0100f6c:	8b 00                	mov    (%eax),%eax$/;"	l
f0100f6e	obj/kern/kernel.asm	/^f0100f6e:	a8 01                	test   $0x1,%al$/;"	l
f0100f70	obj/kern/kernel.asm	/^f0100f70:	75 2a                	jne    f0100f9c <page_insert+0x57>$/;"	l
f0100f72	obj/kern/kernel.asm	/^f0100f72:	89 f0                	mov    %esi,%eax$/;"	l
f0100f74	obj/kern/kernel.asm	/^f0100f74:	2b 05 10 0f 24 f0    	sub    0xf0240f10,%eax$/;"	l
f0100f7a	obj/kern/kernel.asm	/^f0100f7a:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100f7d	obj/kern/kernel.asm	/^f0100f7d:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100f80	obj/kern/kernel.asm	/^f0100f80:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0100f83	obj/kern/kernel.asm	/^f0100f83:	83 ca 01             	or     $0x1,%edx$/;"	l
f0100f86	obj/kern/kernel.asm	/^f0100f86:	09 d0                	or     %edx,%eax$/;"	l
f0100f88	obj/kern/kernel.asm	/^f0100f88:	89 03                	mov    %eax,(%ebx)$/;"	l
f0100f8a	obj/kern/kernel.asm	/^f0100f8a:	66 83 46 04 01       	addw   $0x1,0x4(%esi)$/;"	l
f0100f8f	obj/kern/kernel.asm	/^f0100f8f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100f94	obj/kern/kernel.asm	/^f0100f94:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100f97	obj/kern/kernel.asm	/^f0100f97:	5b                   	pop    %ebx$/;"	l
f0100f98	obj/kern/kernel.asm	/^f0100f98:	5e                   	pop    %esi$/;"	l
f0100f99	obj/kern/kernel.asm	/^f0100f99:	5f                   	pop    %edi$/;"	l
f0100f9a	obj/kern/kernel.asm	/^f0100f9a:	5d                   	pop    %ebp$/;"	l
f0100f9b	obj/kern/kernel.asm	/^f0100f9b:	c3                   	ret    $/;"	l
f0100f9c	obj/kern/kernel.asm	/^f0100f9c:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100fa1	obj/kern/kernel.asm	/^f0100fa1:	89 c2                	mov    %eax,%edx$/;"	l
f0100fa3	obj/kern/kernel.asm	/^f0100fa3:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100fa6	obj/kern/kernel.asm	/^f0100fa6:	3b 15 08 0f 24 f0    	cmp    0xf0240f08,%edx$/;"	l
f0100fac	obj/kern/kernel.asm	/^f0100fac:	73 1e                	jae    f0100fcc <page_insert+0x87>$/;"	l
f0100fae	obj/kern/kernel.asm	/^f0100fae:	8b 0d 10 0f 24 f0    	mov    0xf0240f10,%ecx$/;"	l
f0100fb4	obj/kern/kernel.asm	/^f0100fb4:	8d 14 d1             	lea    (%ecx,%edx,8),%edx$/;"	l
f0100fb7	obj/kern/kernel.asm	/^f0100fb7:	39 d6                	cmp    %edx,%esi$/;"	l
f0100fb9	obj/kern/kernel.asm	/^f0100fb9:	74 25                	je     f0100fe0 <page_insert+0x9b>$/;"	l
f0100fbb	obj/kern/kernel.asm	/^f0100fbb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100fbe	obj/kern/kernel.asm	/^f0100fbe:	57                   	push   %edi$/;"	l
f0100fbf	obj/kern/kernel.asm	/^f0100fbf:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100fc2	obj/kern/kernel.asm	/^f0100fc2:	e8 36 ff ff ff       	call   f0100efd <page_remove>$/;"	l
f0100fc7	obj/kern/kernel.asm	/^f0100fc7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100fca	obj/kern/kernel.asm	/^f0100fca:	eb a6                	jmp    f0100f72 <page_insert+0x2d>$/;"	l
f0100fcc	obj/kern/kernel.asm	/^f0100fcc:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100fcf	obj/kern/kernel.asm	/^f0100fcf:	68 6c 58 10 f0       	push   $0xf010586c$/;"	l
f0100fd4	obj/kern/kernel.asm	/^f0100fd4:	6a 51                	push   $0x51$/;"	l
f0100fd6	obj/kern/kernel.asm	/^f0100fd6:	68 5d 5e 10 f0       	push   $0xf0105e5d$/;"	l
f0100fdb	obj/kern/kernel.asm	/^f0100fdb:	e8 60 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100fe0	obj/kern/kernel.asm	/^f0100fe0:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0100fe3	obj/kern/kernel.asm	/^f0100fe3:	83 ca 01             	or     $0x1,%edx$/;"	l
f0100fe6	obj/kern/kernel.asm	/^f0100fe6:	09 d0                	or     %edx,%eax$/;"	l
f0100fe8	obj/kern/kernel.asm	/^f0100fe8:	89 03                	mov    %eax,(%ebx)$/;"	l
f0100fea	obj/kern/kernel.asm	/^f0100fea:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100fef	obj/kern/kernel.asm	/^f0100fef:	eb a3                	jmp    f0100f94 <page_insert+0x4f>$/;"	l
f0100ff1	obj/kern/kernel.asm	/^f0100ff1:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0100ff6	obj/kern/kernel.asm	/^f0100ff6:	eb 9c                	jmp    f0100f94 <page_insert+0x4f>$/;"	l
f0100ff8	obj/kern/kernel.asm	/^f0100ff8 <mmio_map_region>:$/;"	l
f0100ff8	obj/kern/kernel.asm	/^f0100ff8:	55                   	push   %ebp$/;"	l
f0100ff9	obj/kern/kernel.asm	/^f0100ff9:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ffb	obj/kern/kernel.asm	/^f0100ffb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100ffe	obj/kern/kernel.asm	/^f0100ffe:	68 8c 58 10 f0       	push   $0xf010588c$/;"	l
f0101003	obj/kern/kernel.asm	/^f0101003:	68 d3 02 00 00       	push   $0x2d3$/;"	l
f0101008	obj/kern/kernel.asm	/^f0101008:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f010100d	obj/kern/kernel.asm	/^f010100d:	e8 2e f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101012	obj/kern/kernel.asm	/^f0101012 <mem_init>:$/;"	l
f0101012	obj/kern/kernel.asm	/^f0101012:	55                   	push   %ebp$/;"	l
f0101013	obj/kern/kernel.asm	/^f0101013:	89 e5                	mov    %esp,%ebp$/;"	l
f0101015	obj/kern/kernel.asm	/^f0101015:	57                   	push   %edi$/;"	l
f0101016	obj/kern/kernel.asm	/^f0101016:	56                   	push   %esi$/;"	l
f0101017	obj/kern/kernel.asm	/^f0101017:	53                   	push   %ebx$/;"	l
f0101018	obj/kern/kernel.asm	/^f0101018:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010101b	obj/kern/kernel.asm	/^f010101b:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f0101020	obj/kern/kernel.asm	/^f0101020:	e8 56 fa ff ff       	call   f0100a7b <nvram_read>$/;"	l
f0101025	obj/kern/kernel.asm	/^f0101025:	89 c3                	mov    %eax,%ebx$/;"	l
f0101027	obj/kern/kernel.asm	/^f0101027:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f010102c	obj/kern/kernel.asm	/^f010102c:	e8 4a fa ff ff       	call   f0100a7b <nvram_read>$/;"	l
f0101031	obj/kern/kernel.asm	/^f0101031:	89 c6                	mov    %eax,%esi$/;"	l
f0101033	obj/kern/kernel.asm	/^f0101033:	b8 34 00 00 00       	mov    $0x34,%eax$/;"	l
f0101038	obj/kern/kernel.asm	/^f0101038:	e8 3e fa ff ff       	call   f0100a7b <nvram_read>$/;"	l
f010103d	obj/kern/kernel.asm	/^f010103d:	c1 e0 06             	shl    $0x6,%eax$/;"	l
f0101040	obj/kern/kernel.asm	/^f0101040:	85 c0                	test   %eax,%eax$/;"	l
f0101042	obj/kern/kernel.asm	/^f0101042:	75 0e                	jne    f0101052 <mem_init+0x40>$/;"	l
f0101044	obj/kern/kernel.asm	/^f0101044:	89 d8                	mov    %ebx,%eax$/;"	l
f0101046	obj/kern/kernel.asm	/^f0101046:	85 f6                	test   %esi,%esi$/;"	l
f0101048	obj/kern/kernel.asm	/^f0101048:	74 0d                	je     f0101057 <mem_init+0x45>$/;"	l
f010104a	obj/kern/kernel.asm	/^f010104a:	8d 86 00 04 00 00    	lea    0x400(%esi),%eax$/;"	l
f0101050	obj/kern/kernel.asm	/^f0101050:	eb 05                	jmp    f0101057 <mem_init+0x45>$/;"	l
f0101052	obj/kern/kernel.asm	/^f0101052:	05 00 40 00 00       	add    $0x4000,%eax$/;"	l
f0101057	obj/kern/kernel.asm	/^f0101057:	89 c2                	mov    %eax,%edx$/;"	l
f0101059	obj/kern/kernel.asm	/^f0101059:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f010105c	obj/kern/kernel.asm	/^f010105c:	89 15 08 0f 24 f0    	mov    %edx,0xf0240f08$/;"	l
f0101062	obj/kern/kernel.asm	/^f0101062:	89 da                	mov    %ebx,%edx$/;"	l
f0101064	obj/kern/kernel.asm	/^f0101064:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f0101067	obj/kern/kernel.asm	/^f0101067:	89 15 44 02 24 f0    	mov    %edx,0xf0240244$/;"	l
f010106d	obj/kern/kernel.asm	/^f010106d:	89 c2                	mov    %eax,%edx$/;"	l
f010106f	obj/kern/kernel.asm	/^f010106f:	29 da                	sub    %ebx,%edx$/;"	l
f0101071	obj/kern/kernel.asm	/^f0101071:	52                   	push   %edx$/;"	l
f0101072	obj/kern/kernel.asm	/^f0101072:	53                   	push   %ebx$/;"	l
f0101073	obj/kern/kernel.asm	/^f0101073:	50                   	push   %eax$/;"	l
f0101074	obj/kern/kernel.asm	/^f0101074:	68 ac 58 10 f0       	push   $0xf01058ac$/;"	l
f0101079	obj/kern/kernel.asm	/^f0101079:	e8 07 1d 00 00       	call   f0102d85 <cprintf>$/;"	l
f010107e	obj/kern/kernel.asm	/^f010107e:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0101083	obj/kern/kernel.asm	/^f0101083:	e8 b4 fa ff ff       	call   f0100b3c <boot_alloc>$/;"	l
f0101088	obj/kern/kernel.asm	/^f0101088:	a3 0c 0f 24 f0       	mov    %eax,0xf0240f0c$/;"	l
f010108d	obj/kern/kernel.asm	/^f010108d:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0101090	obj/kern/kernel.asm	/^f0101090:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101095	obj/kern/kernel.asm	/^f0101095:	6a 00                	push   $0x0$/;"	l
f0101097	obj/kern/kernel.asm	/^f0101097:	50                   	push   %eax$/;"	l
f0101098	obj/kern/kernel.asm	/^f0101098:	e8 8e 35 00 00       	call   f010462b <memset>$/;"	l
f010109d	obj/kern/kernel.asm	/^f010109d:	a1 0c 0f 24 f0       	mov    0xf0240f0c,%eax$/;"	l
f01010a2	obj/kern/kernel.asm	/^f01010a2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01010a5	obj/kern/kernel.asm	/^f01010a5:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01010aa	obj/kern/kernel.asm	/^f01010aa:	77 15                	ja     f01010c1 <mem_init+0xaf>$/;"	l
f01010ac	obj/kern/kernel.asm	/^f01010ac:	50                   	push   %eax$/;"	l
f01010ad	obj/kern/kernel.asm	/^f01010ad:	68 e8 52 10 f0       	push   $0xf01052e8$/;"	l
f01010b2	obj/kern/kernel.asm	/^f01010b2:	68 a5 00 00 00       	push   $0xa5$/;"	l
f01010b7	obj/kern/kernel.asm	/^f01010b7:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f01010bc	obj/kern/kernel.asm	/^f01010bc:	e8 7f ef ff ff       	call   f0100040 <_panic>$/;"	l
f01010c1	obj/kern/kernel.asm	/^f01010c1:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f01010c7	obj/kern/kernel.asm	/^f01010c7:	83 ca 05             	or     $0x5,%edx$/;"	l
f01010ca	obj/kern/kernel.asm	/^f01010ca:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f01010d0	obj/kern/kernel.asm	/^f01010d0:	a1 08 0f 24 f0       	mov    0xf0240f08,%eax$/;"	l
f01010d5	obj/kern/kernel.asm	/^f01010d5:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f01010d8	obj/kern/kernel.asm	/^f01010d8:	e8 5f fa ff ff       	call   f0100b3c <boot_alloc>$/;"	l
f01010dd	obj/kern/kernel.asm	/^f01010dd:	a3 10 0f 24 f0       	mov    %eax,0xf0240f10$/;"	l
f01010e2	obj/kern/kernel.asm	/^f01010e2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01010e5	obj/kern/kernel.asm	/^f01010e5:	8b 35 08 0f 24 f0    	mov    0xf0240f08,%esi$/;"	l
f01010eb	obj/kern/kernel.asm	/^f01010eb:	8d 14 f5 00 00 00 00 	lea    0x0(,%esi,8),%edx$/;"	l
f01010f2	obj/kern/kernel.asm	/^f01010f2:	52                   	push   %edx$/;"	l
f01010f3	obj/kern/kernel.asm	/^f01010f3:	6a 00                	push   $0x0$/;"	l
f01010f5	obj/kern/kernel.asm	/^f01010f5:	50                   	push   %eax$/;"	l
f01010f6	obj/kern/kernel.asm	/^f01010f6:	e8 30 35 00 00       	call   f010462b <memset>$/;"	l
f01010fb	obj/kern/kernel.asm	/^f01010fb:	b8 00 00 02 00       	mov    $0x20000,%eax$/;"	l
f0101100	obj/kern/kernel.asm	/^f0101100:	e8 37 fa ff ff       	call   f0100b3c <boot_alloc>$/;"	l
f0101105	obj/kern/kernel.asm	/^f0101105:	a3 48 02 24 f0       	mov    %eax,0xf0240248$/;"	l
f010110a	obj/kern/kernel.asm	/^f010110a:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010110d	obj/kern/kernel.asm	/^f010110d:	68 00 00 02 00       	push   $0x20000$/;"	l
f0101112	obj/kern/kernel.asm	/^f0101112:	6a 00                	push   $0x0$/;"	l
f0101114	obj/kern/kernel.asm	/^f0101114:	50                   	push   %eax$/;"	l
f0101115	obj/kern/kernel.asm	/^f0101115:	e8 11 35 00 00       	call   f010462b <memset>$/;"	l
f010111a	obj/kern/kernel.asm	/^f010111a:	e8 c5 fa ff ff       	call   f0100be4 <page_init>$/;"	l
f010111f	obj/kern/kernel.asm	/^f010111f:	a1 40 02 24 f0       	mov    0xf0240240,%eax$/;"	l
f0101124	obj/kern/kernel.asm	/^f0101124:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101127	obj/kern/kernel.asm	/^f0101127:	85 c0                	test   %eax,%eax$/;"	l
f0101129	obj/kern/kernel.asm	/^f0101129:	74 4c                	je     f0101177 <mem_init+0x165>$/;"	l
f010112b	obj/kern/kernel.asm	/^f010112b:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f010112e	obj/kern/kernel.asm	/^f010112e:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0101131	obj/kern/kernel.asm	/^f0101131:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0101134	obj/kern/kernel.asm	/^f0101134:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0101137	obj/kern/kernel.asm	/^f0101137:	89 c2                	mov    %eax,%edx$/;"	l
f0101139	obj/kern/kernel.asm	/^f0101139:	2b 15 10 0f 24 f0    	sub    0xf0240f10,%edx$/;"	l
f010113f	obj/kern/kernel.asm	/^f010113f:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f0101145	obj/kern/kernel.asm	/^f0101145:	0f 95 c2             	setne  %dl$/;"	l
f0101148	obj/kern/kernel.asm	/^f0101148:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f010114b	obj/kern/kernel.asm	/^f010114b:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f010114f	obj/kern/kernel.asm	/^f010114f:	89 01                	mov    %eax,(%ecx)$/;"	l
f0101151	obj/kern/kernel.asm	/^f0101151:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f0101155	obj/kern/kernel.asm	/^f0101155:	8b 00                	mov    (%eax),%eax$/;"	l
f0101157	obj/kern/kernel.asm	/^f0101157:	85 c0                	test   %eax,%eax$/;"	l
f0101159	obj/kern/kernel.asm	/^f0101159:	75 dc                	jne    f0101137 <mem_init+0x125>$/;"	l
f010115b	obj/kern/kernel.asm	/^f010115b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010115e	obj/kern/kernel.asm	/^f010115e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101164	obj/kern/kernel.asm	/^f0101164:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0101167	obj/kern/kernel.asm	/^f0101167:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010116a	obj/kern/kernel.asm	/^f010116a:	89 10                	mov    %edx,(%eax)$/;"	l
f010116c	obj/kern/kernel.asm	/^f010116c:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f010116f	obj/kern/kernel.asm	/^f010116f:	89 1d 40 02 24 f0    	mov    %ebx,0xf0240240$/;"	l
f0101175	obj/kern/kernel.asm	/^f0101175:	eb 2b                	jmp    f01011a2 <mem_init+0x190>$/;"	l
f0101177	obj/kern/kernel.asm	/^f0101177:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010117a	obj/kern/kernel.asm	/^f010117a:	68 e8 58 10 f0       	push   $0xf01058e8$/;"	l
f010117f	obj/kern/kernel.asm	/^f010117f:	68 36 03 00 00       	push   $0x336$/;"	l
f0101184	obj/kern/kernel.asm	/^f0101184:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101189	obj/kern/kernel.asm	/^f0101189:	e8 b2 ee ff ff       	call   f0100040 <_panic>$/;"	l
f010118e	obj/kern/kernel.asm	/^f010118e:	52                   	push   %edx$/;"	l
f010118f	obj/kern/kernel.asm	/^f010118f:	68 c4 52 10 f0       	push   $0xf01052c4$/;"	l
f0101194	obj/kern/kernel.asm	/^f0101194:	6a 58                	push   $0x58$/;"	l
f0101196	obj/kern/kernel.asm	/^f0101196:	68 5d 5e 10 f0       	push   $0xf0105e5d$/;"	l
f010119b	obj/kern/kernel.asm	/^f010119b:	e8 a0 ee ff ff       	call   f0100040 <_panic>$/;"	l
f01011a0	obj/kern/kernel.asm	/^f01011a0:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f01011a2	obj/kern/kernel.asm	/^f01011a2:	85 db                	test   %ebx,%ebx$/;"	l
f01011a4	obj/kern/kernel.asm	/^f01011a4:	74 42                	je     f01011e8 <mem_init+0x1d6>$/;"	l
f01011a6	obj/kern/kernel.asm	/^f01011a6:	89 d8                	mov    %ebx,%eax$/;"	l
f01011a8	obj/kern/kernel.asm	/^f01011a8:	2b 05 10 0f 24 f0    	sub    0xf0240f10,%eax$/;"	l
f01011ae	obj/kern/kernel.asm	/^f01011ae:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01011b1	obj/kern/kernel.asm	/^f01011b1:	89 c2                	mov    %eax,%edx$/;"	l
f01011b3	obj/kern/kernel.asm	/^f01011b3:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01011b6	obj/kern/kernel.asm	/^f01011b6:	a9 00 fc 0f 00       	test   $0xffc00,%eax$/;"	l
f01011bb	obj/kern/kernel.asm	/^f01011bb:	75 e3                	jne    f01011a0 <mem_init+0x18e>$/;"	l
f01011bd	obj/kern/kernel.asm	/^f01011bd:	89 d0                	mov    %edx,%eax$/;"	l
f01011bf	obj/kern/kernel.asm	/^f01011bf:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01011c2	obj/kern/kernel.asm	/^f01011c2:	3b 05 08 0f 24 f0    	cmp    0xf0240f08,%eax$/;"	l
f01011c8	obj/kern/kernel.asm	/^f01011c8:	73 c4                	jae    f010118e <mem_init+0x17c>$/;"	l
f01011ca	obj/kern/kernel.asm	/^f01011ca:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01011cd	obj/kern/kernel.asm	/^f01011cd:	68 80 00 00 00       	push   $0x80$/;"	l
f01011d2	obj/kern/kernel.asm	/^f01011d2:	68 97 00 00 00       	push   $0x97$/;"	l
f01011d7	obj/kern/kernel.asm	/^f01011d7:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f01011dd	obj/kern/kernel.asm	/^f01011dd:	52                   	push   %edx$/;"	l
f01011de	obj/kern/kernel.asm	/^f01011de:	e8 48 34 00 00       	call   f010462b <memset>$/;"	l
f01011e3	obj/kern/kernel.asm	/^f01011e3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01011e6	obj/kern/kernel.asm	/^f01011e6:	eb b8                	jmp    f01011a0 <mem_init+0x18e>$/;"	l
f01011e8	obj/kern/kernel.asm	/^f01011e8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01011ed	obj/kern/kernel.asm	/^f01011ed:	e8 4a f9 ff ff       	call   f0100b3c <boot_alloc>$/;"	l
f01011f2	obj/kern/kernel.asm	/^f01011f2:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01011f5	obj/kern/kernel.asm	/^f01011f5:	8b 15 40 02 24 f0    	mov    0xf0240240,%edx$/;"	l
f01011fb	obj/kern/kernel.asm	/^f01011fb:	8b 0d 10 0f 24 f0    	mov    0xf0240f10,%ecx$/;"	l
f0101201	obj/kern/kernel.asm	/^f0101201:	a1 08 0f 24 f0       	mov    0xf0240f08,%eax$/;"	l
f0101206	obj/kern/kernel.asm	/^f0101206:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0101209	obj/kern/kernel.asm	/^f0101209:	8d 04 c1             	lea    (%ecx,%eax,8),%eax$/;"	l
f010120c	obj/kern/kernel.asm	/^f010120c:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010120f	obj/kern/kernel.asm	/^f010120f:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0101212	obj/kern/kernel.asm	/^f0101212:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0101217	obj/kern/kernel.asm	/^f0101217:	e9 04 01 00 00       	jmp    f0101320 <mem_init+0x30e>$/;"	l
f010121c	obj/kern/kernel.asm	/^f010121c:	68 a3 5e 10 f0       	push   $0xf0105ea3$/;"	l
f0101221	obj/kern/kernel.asm	/^f0101221:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101226	obj/kern/kernel.asm	/^f0101226:	68 50 03 00 00       	push   $0x350$/;"	l
f010122b	obj/kern/kernel.asm	/^f010122b:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101230	obj/kern/kernel.asm	/^f0101230:	e8 0b ee ff ff       	call   f0100040 <_panic>$/;"	l
f0101235	obj/kern/kernel.asm	/^f0101235:	68 c4 5e 10 f0       	push   $0xf0105ec4$/;"	l
f010123a	obj/kern/kernel.asm	/^f010123a:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f010123f	obj/kern/kernel.asm	/^f010123f:	68 51 03 00 00       	push   $0x351$/;"	l
f0101244	obj/kern/kernel.asm	/^f0101244:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101249	obj/kern/kernel.asm	/^f0101249:	e8 f2 ed ff ff       	call   f0100040 <_panic>$/;"	l
f010124e	obj/kern/kernel.asm	/^f010124e:	68 0c 59 10 f0       	push   $0xf010590c$/;"	l
f0101253	obj/kern/kernel.asm	/^f0101253:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101258	obj/kern/kernel.asm	/^f0101258:	68 52 03 00 00       	push   $0x352$/;"	l
f010125d	obj/kern/kernel.asm	/^f010125d:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101262	obj/kern/kernel.asm	/^f0101262:	e8 d9 ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101267	obj/kern/kernel.asm	/^f0101267:	68 d8 5e 10 f0       	push   $0xf0105ed8$/;"	l
f010126c	obj/kern/kernel.asm	/^f010126c:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101271	obj/kern/kernel.asm	/^f0101271:	68 55 03 00 00       	push   $0x355$/;"	l
f0101276	obj/kern/kernel.asm	/^f0101276:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f010127b	obj/kern/kernel.asm	/^f010127b:	e8 c0 ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101280	obj/kern/kernel.asm	/^f0101280:	68 e9 5e 10 f0       	push   $0xf0105ee9$/;"	l
f0101285	obj/kern/kernel.asm	/^f0101285:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f010128a	obj/kern/kernel.asm	/^f010128a:	68 56 03 00 00       	push   $0x356$/;"	l
f010128f	obj/kern/kernel.asm	/^f010128f:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101294	obj/kern/kernel.asm	/^f0101294:	e8 a7 ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101299	obj/kern/kernel.asm	/^f0101299:	68 40 59 10 f0       	push   $0xf0105940$/;"	l
f010129e	obj/kern/kernel.asm	/^f010129e:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f01012a3	obj/kern/kernel.asm	/^f01012a3:	68 57 03 00 00       	push   $0x357$/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f01012ad	obj/kern/kernel.asm	/^f01012ad:	e8 8e ed ff ff       	call   f0100040 <_panic>$/;"	l
f01012b2	obj/kern/kernel.asm	/^f01012b2:	68 02 5f 10 f0       	push   $0xf0105f02$/;"	l
f01012b7	obj/kern/kernel.asm	/^f01012b7:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f01012bc	obj/kern/kernel.asm	/^f01012bc:	68 58 03 00 00       	push   $0x358$/;"	l
f01012c1	obj/kern/kernel.asm	/^f01012c1:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f01012c6	obj/kern/kernel.asm	/^f01012c6:	e8 75 ed ff ff       	call   f0100040 <_panic>$/;"	l
f01012cb	obj/kern/kernel.asm	/^f01012cb:	89 c7                	mov    %eax,%edi$/;"	l
f01012cd	obj/kern/kernel.asm	/^f01012cd:	c1 ef 0c             	shr    $0xc,%edi$/;"	l
f01012d0	obj/kern/kernel.asm	/^f01012d0:	39 7d c8             	cmp    %edi,-0x38(%ebp)$/;"	l
f01012d3	obj/kern/kernel.asm	/^f01012d3:	76 1b                	jbe    f01012f0 <mem_init+0x2de>$/;"	l
f01012d5	obj/kern/kernel.asm	/^f01012d5:	8d b8 00 00 00 f0    	lea    -0x10000000(%eax),%edi$/;"	l
f01012db	obj/kern/kernel.asm	/^f01012db:	39 7d cc             	cmp    %edi,-0x34(%ebp)$/;"	l
f01012de	obj/kern/kernel.asm	/^f01012de:	77 22                	ja     f0101302 <mem_init+0x2f0>$/;"	l
f01012e0	obj/kern/kernel.asm	/^f01012e0:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f01012e5	obj/kern/kernel.asm	/^f01012e5:	0f 84 98 00 00 00    	je     f0101383 <mem_init+0x371>$/;"	l
f01012eb	obj/kern/kernel.asm	/^f01012eb:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01012ee	obj/kern/kernel.asm	/^f01012ee:	eb 2e                	jmp    f010131e <mem_init+0x30c>$/;"	l
f01012f0	obj/kern/kernel.asm	/^f01012f0:	50                   	push   %eax$/;"	l
f01012f1	obj/kern/kernel.asm	/^f01012f1:	68 c4 52 10 f0       	push   $0xf01052c4$/;"	l
f01012f6	obj/kern/kernel.asm	/^f01012f6:	6a 58                	push   $0x58$/;"	l
f01012f8	obj/kern/kernel.asm	/^f01012f8:	68 5d 5e 10 f0       	push   $0xf0105e5d$/;"	l
f01012fd	obj/kern/kernel.asm	/^f01012fd:	e8 3e ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101302	obj/kern/kernel.asm	/^f0101302:	68 64 59 10 f0       	push   $0xf0105964$/;"	l
f0101307	obj/kern/kernel.asm	/^f0101307:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f010130c	obj/kern/kernel.asm	/^f010130c:	68 59 03 00 00       	push   $0x359$/;"	l
f0101311	obj/kern/kernel.asm	/^f0101311:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101316	obj/kern/kernel.asm	/^f0101316:	e8 25 ed ff ff       	call   f0100040 <_panic>$/;"	l
f010131b	obj/kern/kernel.asm	/^f010131b:	83 c6 01             	add    $0x1,%esi$/;"	l
f010131e	obj/kern/kernel.asm	/^f010131e:	8b 12                	mov    (%edx),%edx$/;"	l
f0101320	obj/kern/kernel.asm	/^f0101320:	85 d2                	test   %edx,%edx$/;"	l
f0101322	obj/kern/kernel.asm	/^f0101322:	74 78                	je     f010139c <mem_init+0x38a>$/;"	l
f0101324	obj/kern/kernel.asm	/^f0101324:	39 d1                	cmp    %edx,%ecx$/;"	l
f0101326	obj/kern/kernel.asm	/^f0101326:	0f 87 f0 fe ff ff    	ja     f010121c <mem_init+0x20a>$/;"	l
f010132c	obj/kern/kernel.asm	/^f010132c:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
f010132f	obj/kern/kernel.asm	/^f010132f:	0f 83 00 ff ff ff    	jae    f0101235 <mem_init+0x223>$/;"	l
f0101335	obj/kern/kernel.asm	/^f0101335:	89 d0                	mov    %edx,%eax$/;"	l
f0101337	obj/kern/kernel.asm	/^f0101337:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
f010133a	obj/kern/kernel.asm	/^f010133a:	a8 07                	test   $0x7,%al$/;"	l
f010133c	obj/kern/kernel.asm	/^f010133c:	0f 85 0c ff ff ff    	jne    f010124e <mem_init+0x23c>$/;"	l
f0101342	obj/kern/kernel.asm	/^f0101342:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101345	obj/kern/kernel.asm	/^f0101345:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101348	obj/kern/kernel.asm	/^f0101348:	85 c0                	test   %eax,%eax$/;"	l
f010134a	obj/kern/kernel.asm	/^f010134a:	0f 84 17 ff ff ff    	je     f0101267 <mem_init+0x255>$/;"	l
f0101350	obj/kern/kernel.asm	/^f0101350:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0101355	obj/kern/kernel.asm	/^f0101355:	0f 84 25 ff ff ff    	je     f0101280 <mem_init+0x26e>$/;"	l
f010135b	obj/kern/kernel.asm	/^f010135b:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0101360	obj/kern/kernel.asm	/^f0101360:	0f 84 33 ff ff ff    	je     f0101299 <mem_init+0x287>$/;"	l
f0101366	obj/kern/kernel.asm	/^f0101366:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f010136b	obj/kern/kernel.asm	/^f010136b:	0f 84 41 ff ff ff    	je     f01012b2 <mem_init+0x2a0>$/;"	l
f0101371	obj/kern/kernel.asm	/^f0101371:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0101376	obj/kern/kernel.asm	/^f0101376:	0f 87 4f ff ff ff    	ja     f01012cb <mem_init+0x2b9>$/;"	l
f010137c	obj/kern/kernel.asm	/^f010137c:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0101381	obj/kern/kernel.asm	/^f0101381:	75 98                	jne    f010131b <mem_init+0x309>$/;"	l
f0101383	obj/kern/kernel.asm	/^f0101383:	68 1c 5f 10 f0       	push   $0xf0105f1c$/;"	l
f0101388	obj/kern/kernel.asm	/^f0101388:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f010138d	obj/kern/kernel.asm	/^f010138d:	68 5b 03 00 00       	push   $0x35b$/;"	l
f0101392	obj/kern/kernel.asm	/^f0101392:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101397	obj/kern/kernel.asm	/^f0101397:	e8 a4 ec ff ff       	call   f0100040 <_panic>$/;"	l
f010139c	obj/kern/kernel.asm	/^f010139c:	85 f6                	test   %esi,%esi$/;"	l
f010139e	obj/kern/kernel.asm	/^f010139e:	7e 3e                	jle    f01013de <mem_init+0x3cc>$/;"	l
f01013a0	obj/kern/kernel.asm	/^f01013a0:	85 db                	test   %ebx,%ebx$/;"	l
f01013a2	obj/kern/kernel.asm	/^f01013a2:	7e 53                	jle    f01013f7 <mem_init+0x3e5>$/;"	l
f01013a4	obj/kern/kernel.asm	/^f01013a4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01013a7	obj/kern/kernel.asm	/^f01013a7:	68 ac 59 10 f0       	push   $0xf01059ac$/;"	l
f01013ac	obj/kern/kernel.asm	/^f01013ac:	e8 d4 19 00 00       	call   f0102d85 <cprintf>$/;"	l
f01013b1	obj/kern/kernel.asm	/^f01013b1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01013b4	obj/kern/kernel.asm	/^f01013b4:	a1 40 02 24 f0       	mov    0xf0240240,%eax$/;"	l
f01013b9	obj/kern/kernel.asm	/^f01013b9:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01013be	obj/kern/kernel.asm	/^f01013be:	83 3d 10 0f 24 f0 00 	cmpl   $0x0,0xf0240f10$/;"	l
f01013c5	obj/kern/kernel.asm	/^f01013c5:	75 4e                	jne    f0101415 <mem_init+0x403>$/;"	l
f01013c7	obj/kern/kernel.asm	/^f01013c7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01013ca	obj/kern/kernel.asm	/^f01013ca:	68 5c 5f 10 f0       	push   $0xf0105f5c$/;"	l
f01013cf	obj/kern/kernel.asm	/^f01013cf:	68 77 03 00 00       	push   $0x377$/;"	l
f01013d4	obj/kern/kernel.asm	/^f01013d4:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f01013d9	obj/kern/kernel.asm	/^f01013d9:	e8 62 ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013de	obj/kern/kernel.asm	/^f01013de:	68 39 5f 10 f0       	push   $0xf0105f39$/;"	l
f01013e3	obj/kern/kernel.asm	/^f01013e3:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f01013e8	obj/kern/kernel.asm	/^f01013e8:	68 63 03 00 00       	push   $0x363$/;"	l
f01013ed	obj/kern/kernel.asm	/^f01013ed:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f01013f2	obj/kern/kernel.asm	/^f01013f2:	e8 49 ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013f7	obj/kern/kernel.asm	/^f01013f7:	68 4b 5f 10 f0       	push   $0xf0105f4b$/;"	l
f01013fc	obj/kern/kernel.asm	/^f01013fc:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101401	obj/kern/kernel.asm	/^f0101401:	68 64 03 00 00       	push   $0x364$/;"	l
f0101406	obj/kern/kernel.asm	/^f0101406:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f010140b	obj/kern/kernel.asm	/^f010140b:	e8 30 ec ff ff       	call   f0100040 <_panic>$/;"	l
f0101410	obj/kern/kernel.asm	/^f0101410:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101413	obj/kern/kernel.asm	/^f0101413:	8b 00                	mov    (%eax),%eax$/;"	l
f0101415	obj/kern/kernel.asm	/^f0101415:	85 c0                	test   %eax,%eax$/;"	l
f0101417	obj/kern/kernel.asm	/^f0101417:	75 f7                	jne    f0101410 <mem_init+0x3fe>$/;"	l
f0101419	obj/kern/kernel.asm	/^f0101419:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010141c	obj/kern/kernel.asm	/^f010141c:	6a 00                	push   $0x0$/;"	l
f010141e	obj/kern/kernel.asm	/^f010141e:	e8 7c f8 ff ff       	call   f0100c9f <page_alloc>$/;"	l
f0101423	obj/kern/kernel.asm	/^f0101423:	89 c7                	mov    %eax,%edi$/;"	l
f0101425	obj/kern/kernel.asm	/^f0101425:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101428	obj/kern/kernel.asm	/^f0101428:	85 c0                	test   %eax,%eax$/;"	l
f010142a	obj/kern/kernel.asm	/^f010142a:	0f 84 d5 01 00 00    	je     f0101605 <mem_init+0x5f3>$/;"	l
f0101430	obj/kern/kernel.asm	/^f0101430:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101433	obj/kern/kernel.asm	/^f0101433:	6a 00                	push   $0x0$/;"	l
f0101435	obj/kern/kernel.asm	/^f0101435:	e8 65 f8 ff ff       	call   f0100c9f <page_alloc>$/;"	l
f010143a	obj/kern/kernel.asm	/^f010143a:	89 c6                	mov    %eax,%esi$/;"	l
f010143c	obj/kern/kernel.asm	/^f010143c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010143f	obj/kern/kernel.asm	/^f010143f:	85 c0                	test   %eax,%eax$/;"	l
f0101441	obj/kern/kernel.asm	/^f0101441:	0f 84 d7 01 00 00    	je     f010161e <mem_init+0x60c>$/;"	l
f0101447	obj/kern/kernel.asm	/^f0101447:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010144a	obj/kern/kernel.asm	/^f010144a:	6a 00                	push   $0x0$/;"	l
f010144c	obj/kern/kernel.asm	/^f010144c:	e8 4e f8 ff ff       	call   f0100c9f <page_alloc>$/;"	l
f0101451	obj/kern/kernel.asm	/^f0101451:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101454	obj/kern/kernel.asm	/^f0101454:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101457	obj/kern/kernel.asm	/^f0101457:	85 c0                	test   %eax,%eax$/;"	l
f0101459	obj/kern/kernel.asm	/^f0101459:	0f 84 d8 01 00 00    	je     f0101637 <mem_init+0x625>$/;"	l
f010145f	obj/kern/kernel.asm	/^f010145f:	39 f7                	cmp    %esi,%edi$/;"	l
f0101461	obj/kern/kernel.asm	/^f0101461:	0f 84 e9 01 00 00    	je     f0101650 <mem_init+0x63e>$/;"	l
f0101467	obj/kern/kernel.asm	/^f0101467:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010146a	obj/kern/kernel.asm	/^f010146a:	39 c7                	cmp    %eax,%edi$/;"	l
f010146c	obj/kern/kernel.asm	/^f010146c:	0f 84 f7 01 00 00    	je     f0101669 <mem_init+0x657>$/;"	l
f0101472	obj/kern/kernel.asm	/^f0101472:	39 c6                	cmp    %eax,%esi$/;"	l
f0101474	obj/kern/kernel.asm	/^f0101474:	0f 84 ef 01 00 00    	je     f0101669 <mem_init+0x657>$/;"	l
f010147a	obj/kern/kernel.asm	/^f010147a:	8b 0d 10 0f 24 f0    	mov    0xf0240f10,%ecx$/;"	l
f0101480	obj/kern/kernel.asm	/^f0101480:	8b 15 08 0f 24 f0    	mov    0xf0240f08,%edx$/;"	l
f0101486	obj/kern/kernel.asm	/^f0101486:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101489	obj/kern/kernel.asm	/^f0101489:	89 f8                	mov    %edi,%eax$/;"	l
f010148b	obj/kern/kernel.asm	/^f010148b:	29 c8                	sub    %ecx,%eax$/;"	l
f010148d	obj/kern/kernel.asm	/^f010148d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101490	obj/kern/kernel.asm	/^f0101490:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101493	obj/kern/kernel.asm	/^f0101493:	39 d0                	cmp    %edx,%eax$/;"	l
f0101495	obj/kern/kernel.asm	/^f0101495:	0f 83 e7 01 00 00    	jae    f0101682 <mem_init+0x670>$/;"	l
f010149b	obj/kern/kernel.asm	/^f010149b:	89 f0                	mov    %esi,%eax$/;"	l
f010149d	obj/kern/kernel.asm	/^f010149d:	29 c8                	sub    %ecx,%eax$/;"	l
f010149f	obj/kern/kernel.asm	/^f010149f:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01014a2	obj/kern/kernel.asm	/^f01014a2:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01014a5	obj/kern/kernel.asm	/^f01014a5:	39 c2                	cmp    %eax,%edx$/;"	l
f01014a7	obj/kern/kernel.asm	/^f01014a7:	0f 86 ee 01 00 00    	jbe    f010169b <mem_init+0x689>$/;"	l
f01014ad	obj/kern/kernel.asm	/^f01014ad:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01014b0	obj/kern/kernel.asm	/^f01014b0:	29 c8                	sub    %ecx,%eax$/;"	l
f01014b2	obj/kern/kernel.asm	/^f01014b2:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01014b5	obj/kern/kernel.asm	/^f01014b5:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01014b8	obj/kern/kernel.asm	/^f01014b8:	39 c2                	cmp    %eax,%edx$/;"	l
f01014ba	obj/kern/kernel.asm	/^f01014ba:	0f 86 f4 01 00 00    	jbe    f01016b4 <mem_init+0x6a2>$/;"	l
f01014c0	obj/kern/kernel.asm	/^f01014c0:	a1 40 02 24 f0       	mov    0xf0240240,%eax$/;"	l
f01014c5	obj/kern/kernel.asm	/^f01014c5:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01014c8	obj/kern/kernel.asm	/^f01014c8:	c7 05 40 02 24 f0 00 	movl   $0x0,0xf0240240$/;"	l
f01014cf	obj/kern/kernel.asm	/^f01014cf:	00 00 00 $/;"	l
f01014d2	obj/kern/kernel.asm	/^f01014d2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01014d5	obj/kern/kernel.asm	/^f01014d5:	6a 00                	push   $0x0$/;"	l
f01014d7	obj/kern/kernel.asm	/^f01014d7:	e8 c3 f7 ff ff       	call   f0100c9f <page_alloc>$/;"	l
f01014dc	obj/kern/kernel.asm	/^f01014dc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01014df	obj/kern/kernel.asm	/^f01014df:	85 c0                	test   %eax,%eax$/;"	l
f01014e1	obj/kern/kernel.asm	/^f01014e1:	0f 85 e6 01 00 00    	jne    f01016cd <mem_init+0x6bb>$/;"	l
f01014e7	obj/kern/kernel.asm	/^f01014e7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01014ea	obj/kern/kernel.asm	/^f01014ea:	57                   	push   %edi$/;"	l
f01014eb	obj/kern/kernel.asm	/^f01014eb:	e8 21 f8 ff ff       	call   f0100d11 <page_free>$/;"	l
f01014f0	obj/kern/kernel.asm	/^f01014f0:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01014f3	obj/kern/kernel.asm	/^f01014f3:	e8 19 f8 ff ff       	call   f0100d11 <page_free>$/;"	l
f01014f8	obj/kern/kernel.asm	/^f01014f8:	83 c4 04             	add    $0x4,%esp$/;"	l
f01014fb	obj/kern/kernel.asm	/^f01014fb:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01014fe	obj/kern/kernel.asm	/^f01014fe:	e8 0e f8 ff ff       	call   f0100d11 <page_free>$/;"	l
f0101503	obj/kern/kernel.asm	/^f0101503:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010150a	obj/kern/kernel.asm	/^f010150a:	e8 90 f7 ff ff       	call   f0100c9f <page_alloc>$/;"	l
f010150f	obj/kern/kernel.asm	/^f010150f:	89 c6                	mov    %eax,%esi$/;"	l
f0101511	obj/kern/kernel.asm	/^f0101511:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101514	obj/kern/kernel.asm	/^f0101514:	85 c0                	test   %eax,%eax$/;"	l
f0101516	obj/kern/kernel.asm	/^f0101516:	0f 84 ca 01 00 00    	je     f01016e6 <mem_init+0x6d4>$/;"	l
f010151c	obj/kern/kernel.asm	/^f010151c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010151f	obj/kern/kernel.asm	/^f010151f:	6a 00                	push   $0x0$/;"	l
f0101521	obj/kern/kernel.asm	/^f0101521:	e8 79 f7 ff ff       	call   f0100c9f <page_alloc>$/;"	l
f0101526	obj/kern/kernel.asm	/^f0101526:	89 c7                	mov    %eax,%edi$/;"	l
f0101528	obj/kern/kernel.asm	/^f0101528:	83 c4 10             	add    $0x10,%esp$/;"	l
f010152b	obj/kern/kernel.asm	/^f010152b:	85 c0                	test   %eax,%eax$/;"	l
f010152d	obj/kern/kernel.asm	/^f010152d:	0f 84 cc 01 00 00    	je     f01016ff <mem_init+0x6ed>$/;"	l
f0101533	obj/kern/kernel.asm	/^f0101533:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101536	obj/kern/kernel.asm	/^f0101536:	6a 00                	push   $0x0$/;"	l
f0101538	obj/kern/kernel.asm	/^f0101538:	e8 62 f7 ff ff       	call   f0100c9f <page_alloc>$/;"	l
f010153d	obj/kern/kernel.asm	/^f010153d:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101540	obj/kern/kernel.asm	/^f0101540:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101543	obj/kern/kernel.asm	/^f0101543:	85 c0                	test   %eax,%eax$/;"	l
f0101545	obj/kern/kernel.asm	/^f0101545:	0f 84 cd 01 00 00    	je     f0101718 <mem_init+0x706>$/;"	l
f010154b	obj/kern/kernel.asm	/^f010154b:	39 fe                	cmp    %edi,%esi$/;"	l
f010154d	obj/kern/kernel.asm	/^f010154d:	0f 84 de 01 00 00    	je     f0101731 <mem_init+0x71f>$/;"	l
f0101553	obj/kern/kernel.asm	/^f0101553:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101556	obj/kern/kernel.asm	/^f0101556:	39 c6                	cmp    %eax,%esi$/;"	l
f0101558	obj/kern/kernel.asm	/^f0101558:	0f 84 ec 01 00 00    	je     f010174a <mem_init+0x738>$/;"	l
f010155e	obj/kern/kernel.asm	/^f010155e:	39 c7                	cmp    %eax,%edi$/;"	l
f0101560	obj/kern/kernel.asm	/^f0101560:	0f 84 e4 01 00 00    	je     f010174a <mem_init+0x738>$/;"	l
f0101566	obj/kern/kernel.asm	/^f0101566:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101569	obj/kern/kernel.asm	/^f0101569:	6a 00                	push   $0x0$/;"	l
f010156b	obj/kern/kernel.asm	/^f010156b:	e8 2f f7 ff ff       	call   f0100c9f <page_alloc>$/;"	l
f0101570	obj/kern/kernel.asm	/^f0101570:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101573	obj/kern/kernel.asm	/^f0101573:	85 c0                	test   %eax,%eax$/;"	l
f0101575	obj/kern/kernel.asm	/^f0101575:	0f 85 e8 01 00 00    	jne    f0101763 <mem_init+0x751>$/;"	l
f010157b	obj/kern/kernel.asm	/^f010157b:	89 f0                	mov    %esi,%eax$/;"	l
f010157d	obj/kern/kernel.asm	/^f010157d:	e8 22 f5 ff ff       	call   f0100aa4 <page2kva>$/;"	l
f0101582	obj/kern/kernel.asm	/^f0101582:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101585	obj/kern/kernel.asm	/^f0101585:	68 00 10 00 00       	push   $0x1000$/;"	l
f010158a	obj/kern/kernel.asm	/^f010158a:	6a 01                	push   $0x1$/;"	l
f010158c	obj/kern/kernel.asm	/^f010158c:	50                   	push   %eax$/;"	l
f010158d	obj/kern/kernel.asm	/^f010158d:	e8 99 30 00 00       	call   f010462b <memset>$/;"	l
f0101592	obj/kern/kernel.asm	/^f0101592:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101595	obj/kern/kernel.asm	/^f0101595:	e8 77 f7 ff ff       	call   f0100d11 <page_free>$/;"	l
f010159a	obj/kern/kernel.asm	/^f010159a:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01015a1	obj/kern/kernel.asm	/^f01015a1:	e8 f9 f6 ff ff       	call   f0100c9f <page_alloc>$/;"	l
f01015a6	obj/kern/kernel.asm	/^f01015a6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01015a9	obj/kern/kernel.asm	/^f01015a9:	85 c0                	test   %eax,%eax$/;"	l
f01015ab	obj/kern/kernel.asm	/^f01015ab:	0f 84 cb 01 00 00    	je     f010177c <mem_init+0x76a>$/;"	l
f01015b1	obj/kern/kernel.asm	/^f01015b1:	39 c6                	cmp    %eax,%esi$/;"	l
f01015b3	obj/kern/kernel.asm	/^f01015b3:	0f 85 dc 01 00 00    	jne    f0101795 <mem_init+0x783>$/;"	l
f01015b9	obj/kern/kernel.asm	/^f01015b9:	e8 e6 f4 ff ff       	call   f0100aa4 <page2kva>$/;"	l
f01015be	obj/kern/kernel.asm	/^f01015be:	8d 90 00 10 00 00    	lea    0x1000(%eax),%edx$/;"	l
f01015c4	obj/kern/kernel.asm	/^f01015c4:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f01015c7	obj/kern/kernel.asm	/^f01015c7:	0f 85 e1 01 00 00    	jne    f01017ae <mem_init+0x79c>$/;"	l
f01015cd	obj/kern/kernel.asm	/^f01015cd:	83 c0 01             	add    $0x1,%eax$/;"	l
f01015d0	obj/kern/kernel.asm	/^f01015d0:	39 c2                	cmp    %eax,%edx$/;"	l
f01015d2	obj/kern/kernel.asm	/^f01015d2:	75 f0                	jne    f01015c4 <mem_init+0x5b2>$/;"	l
f01015d4	obj/kern/kernel.asm	/^f01015d4:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01015d7	obj/kern/kernel.asm	/^f01015d7:	a3 40 02 24 f0       	mov    %eax,0xf0240240$/;"	l
f01015dc	obj/kern/kernel.asm	/^f01015dc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01015df	obj/kern/kernel.asm	/^f01015df:	56                   	push   %esi$/;"	l
f01015e0	obj/kern/kernel.asm	/^f01015e0:	e8 2c f7 ff ff       	call   f0100d11 <page_free>$/;"	l
f01015e5	obj/kern/kernel.asm	/^f01015e5:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01015e8	obj/kern/kernel.asm	/^f01015e8:	e8 24 f7 ff ff       	call   f0100d11 <page_free>$/;"	l
f01015ed	obj/kern/kernel.asm	/^f01015ed:	83 c4 04             	add    $0x4,%esp$/;"	l
f01015f0	obj/kern/kernel.asm	/^f01015f0:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01015f3	obj/kern/kernel.asm	/^f01015f3:	e8 19 f7 ff ff       	call   f0100d11 <page_free>$/;"	l
f01015f8	obj/kern/kernel.asm	/^f01015f8:	a1 40 02 24 f0       	mov    0xf0240240,%eax$/;"	l
f01015fd	obj/kern/kernel.asm	/^f01015fd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101600	obj/kern/kernel.asm	/^f0101600:	e9 c7 01 00 00       	jmp    f01017cc <mem_init+0x7ba>$/;"	l
f0101605	obj/kern/kernel.asm	/^f0101605:	68 77 5f 10 f0       	push   $0xf0105f77$/;"	l
f010160a	obj/kern/kernel.asm	/^f010160a:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f010160f	obj/kern/kernel.asm	/^f010160f:	68 7f 03 00 00       	push   $0x37f$/;"	l
f0101614	obj/kern/kernel.asm	/^f0101614:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101619	obj/kern/kernel.asm	/^f0101619:	e8 22 ea ff ff       	call   f0100040 <_panic>$/;"	l
f010161e	obj/kern/kernel.asm	/^f010161e:	68 8d 5f 10 f0       	push   $0xf0105f8d$/;"	l
f0101623	obj/kern/kernel.asm	/^f0101623:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101628	obj/kern/kernel.asm	/^f0101628:	68 80 03 00 00       	push   $0x380$/;"	l
f010162d	obj/kern/kernel.asm	/^f010162d:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101632	obj/kern/kernel.asm	/^f0101632:	e8 09 ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101637	obj/kern/kernel.asm	/^f0101637:	68 a3 5f 10 f0       	push   $0xf0105fa3$/;"	l
f010163c	obj/kern/kernel.asm	/^f010163c:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101641	obj/kern/kernel.asm	/^f0101641:	68 81 03 00 00       	push   $0x381$/;"	l
f0101646	obj/kern/kernel.asm	/^f0101646:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f010164b	obj/kern/kernel.asm	/^f010164b:	e8 f0 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101650	obj/kern/kernel.asm	/^f0101650:	68 b9 5f 10 f0       	push   $0xf0105fb9$/;"	l
f0101655	obj/kern/kernel.asm	/^f0101655:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f010165a	obj/kern/kernel.asm	/^f010165a:	68 84 03 00 00       	push   $0x384$/;"	l
f010165f	obj/kern/kernel.asm	/^f010165f:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101664	obj/kern/kernel.asm	/^f0101664:	e8 d7 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101669	obj/kern/kernel.asm	/^f0101669:	68 d0 59 10 f0       	push   $0xf01059d0$/;"	l
f010166e	obj/kern/kernel.asm	/^f010166e:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101673	obj/kern/kernel.asm	/^f0101673:	68 85 03 00 00       	push   $0x385$/;"	l
f0101678	obj/kern/kernel.asm	/^f0101678:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f010167d	obj/kern/kernel.asm	/^f010167d:	e8 be e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101682	obj/kern/kernel.asm	/^f0101682:	68 cb 5f 10 f0       	push   $0xf0105fcb$/;"	l
f0101687	obj/kern/kernel.asm	/^f0101687:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f010168c	obj/kern/kernel.asm	/^f010168c:	68 86 03 00 00       	push   $0x386$/;"	l
f0101691	obj/kern/kernel.asm	/^f0101691:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101696	obj/kern/kernel.asm	/^f0101696:	e8 a5 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f010169b	obj/kern/kernel.asm	/^f010169b:	68 e8 5f 10 f0       	push   $0xf0105fe8$/;"	l
f01016a0	obj/kern/kernel.asm	/^f01016a0:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f01016a5	obj/kern/kernel.asm	/^f01016a5:	68 87 03 00 00       	push   $0x387$/;"	l
f01016aa	obj/kern/kernel.asm	/^f01016aa:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f01016af	obj/kern/kernel.asm	/^f01016af:	e8 8c e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016b4	obj/kern/kernel.asm	/^f01016b4:	68 05 60 10 f0       	push   $0xf0106005$/;"	l
f01016b9	obj/kern/kernel.asm	/^f01016b9:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f01016be	obj/kern/kernel.asm	/^f01016be:	68 88 03 00 00       	push   $0x388$/;"	l
f01016c3	obj/kern/kernel.asm	/^f01016c3:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f01016c8	obj/kern/kernel.asm	/^f01016c8:	e8 73 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016cd	obj/kern/kernel.asm	/^f01016cd:	68 22 60 10 f0       	push   $0xf0106022$/;"	l
f01016d2	obj/kern/kernel.asm	/^f01016d2:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f01016d7	obj/kern/kernel.asm	/^f01016d7:	68 8f 03 00 00       	push   $0x38f$/;"	l
f01016dc	obj/kern/kernel.asm	/^f01016dc:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f01016e1	obj/kern/kernel.asm	/^f01016e1:	e8 5a e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016e6	obj/kern/kernel.asm	/^f01016e6:	68 77 5f 10 f0       	push   $0xf0105f77$/;"	l
f01016eb	obj/kern/kernel.asm	/^f01016eb:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f01016f0	obj/kern/kernel.asm	/^f01016f0:	68 96 03 00 00       	push   $0x396$/;"	l
f01016f5	obj/kern/kernel.asm	/^f01016f5:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f01016fa	obj/kern/kernel.asm	/^f01016fa:	e8 41 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016ff	obj/kern/kernel.asm	/^f01016ff:	68 8d 5f 10 f0       	push   $0xf0105f8d$/;"	l
f0101704	obj/kern/kernel.asm	/^f0101704:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101709	obj/kern/kernel.asm	/^f0101709:	68 97 03 00 00       	push   $0x397$/;"	l
f010170e	obj/kern/kernel.asm	/^f010170e:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101713	obj/kern/kernel.asm	/^f0101713:	e8 28 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101718	obj/kern/kernel.asm	/^f0101718:	68 a3 5f 10 f0       	push   $0xf0105fa3$/;"	l
f010171d	obj/kern/kernel.asm	/^f010171d:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101722	obj/kern/kernel.asm	/^f0101722:	68 98 03 00 00       	push   $0x398$/;"	l
f0101727	obj/kern/kernel.asm	/^f0101727:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f010172c	obj/kern/kernel.asm	/^f010172c:	e8 0f e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101731	obj/kern/kernel.asm	/^f0101731:	68 b9 5f 10 f0       	push   $0xf0105fb9$/;"	l
f0101736	obj/kern/kernel.asm	/^f0101736:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f010173b	obj/kern/kernel.asm	/^f010173b:	68 9a 03 00 00       	push   $0x39a$/;"	l
f0101740	obj/kern/kernel.asm	/^f0101740:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101745	obj/kern/kernel.asm	/^f0101745:	e8 f6 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f010174a	obj/kern/kernel.asm	/^f010174a:	68 d0 59 10 f0       	push   $0xf01059d0$/;"	l
f010174f	obj/kern/kernel.asm	/^f010174f:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101754	obj/kern/kernel.asm	/^f0101754:	68 9b 03 00 00       	push   $0x39b$/;"	l
f0101759	obj/kern/kernel.asm	/^f0101759:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f010175e	obj/kern/kernel.asm	/^f010175e:	e8 dd e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101763	obj/kern/kernel.asm	/^f0101763:	68 22 60 10 f0       	push   $0xf0106022$/;"	l
f0101768	obj/kern/kernel.asm	/^f0101768:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f010176d	obj/kern/kernel.asm	/^f010176d:	68 9c 03 00 00       	push   $0x39c$/;"	l
f0101772	obj/kern/kernel.asm	/^f0101772:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101777	obj/kern/kernel.asm	/^f0101777:	e8 c4 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f010177c	obj/kern/kernel.asm	/^f010177c:	68 31 60 10 f0       	push   $0xf0106031$/;"	l
f0101781	obj/kern/kernel.asm	/^f0101781:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101786	obj/kern/kernel.asm	/^f0101786:	68 a1 03 00 00       	push   $0x3a1$/;"	l
f010178b	obj/kern/kernel.asm	/^f010178b:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101790	obj/kern/kernel.asm	/^f0101790:	e8 ab e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101795	obj/kern/kernel.asm	/^f0101795:	68 4f 60 10 f0       	push   $0xf010604f$/;"	l
f010179a	obj/kern/kernel.asm	/^f010179a:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f010179f	obj/kern/kernel.asm	/^f010179f:	68 a2 03 00 00       	push   $0x3a2$/;"	l
f01017a4	obj/kern/kernel.asm	/^f01017a4:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f01017a9	obj/kern/kernel.asm	/^f01017a9:	e8 92 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017ae	obj/kern/kernel.asm	/^f01017ae:	68 5f 60 10 f0       	push   $0xf010605f$/;"	l
f01017b3	obj/kern/kernel.asm	/^f01017b3:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f01017b8	obj/kern/kernel.asm	/^f01017b8:	68 a5 03 00 00       	push   $0x3a5$/;"	l
f01017bd	obj/kern/kernel.asm	/^f01017bd:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f01017c2	obj/kern/kernel.asm	/^f01017c2:	e8 79 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017c7	obj/kern/kernel.asm	/^f01017c7:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01017ca	obj/kern/kernel.asm	/^f01017ca:	8b 00                	mov    (%eax),%eax$/;"	l
f01017cc	obj/kern/kernel.asm	/^f01017cc:	85 c0                	test   %eax,%eax$/;"	l
f01017ce	obj/kern/kernel.asm	/^f01017ce:	75 f7                	jne    f01017c7 <mem_init+0x7b5>$/;"	l
f01017d0	obj/kern/kernel.asm	/^f01017d0:	85 db                	test   %ebx,%ebx$/;"	l
f01017d2	obj/kern/kernel.asm	/^f01017d2:	75 75                	jne    f0101849 <mem_init+0x837>$/;"	l
f01017d4	obj/kern/kernel.asm	/^f01017d4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01017d7	obj/kern/kernel.asm	/^f01017d7:	68 f0 59 10 f0       	push   $0xf01059f0$/;"	l
f01017dc	obj/kern/kernel.asm	/^f01017dc:	e8 a4 15 00 00       	call   f0102d85 <cprintf>$/;"	l
f01017e1	obj/kern/kernel.asm	/^f01017e1:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01017e8	obj/kern/kernel.asm	/^f01017e8:	e8 b2 f4 ff ff       	call   f0100c9f <page_alloc>$/;"	l
f01017ed	obj/kern/kernel.asm	/^f01017ed:	89 c3                	mov    %eax,%ebx$/;"	l
f01017ef	obj/kern/kernel.asm	/^f01017ef:	83 c4 10             	add    $0x10,%esp$/;"	l
f01017f2	obj/kern/kernel.asm	/^f01017f2:	85 c0                	test   %eax,%eax$/;"	l
f01017f4	obj/kern/kernel.asm	/^f01017f4:	74 6c                	je     f0101862 <mem_init+0x850>$/;"	l
f01017f6	obj/kern/kernel.asm	/^f01017f6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01017f9	obj/kern/kernel.asm	/^f01017f9:	6a 00                	push   $0x0$/;"	l
f01017fb	obj/kern/kernel.asm	/^f01017fb:	e8 9f f4 ff ff       	call   f0100c9f <page_alloc>$/;"	l
f0101800	obj/kern/kernel.asm	/^f0101800:	89 c6                	mov    %eax,%esi$/;"	l
f0101802	obj/kern/kernel.asm	/^f0101802:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101805	obj/kern/kernel.asm	/^f0101805:	85 c0                	test   %eax,%eax$/;"	l
f0101807	obj/kern/kernel.asm	/^f0101807:	74 72                	je     f010187b <mem_init+0x869>$/;"	l
f0101809	obj/kern/kernel.asm	/^f0101809:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010180c	obj/kern/kernel.asm	/^f010180c:	6a 00                	push   $0x0$/;"	l
f010180e	obj/kern/kernel.asm	/^f010180e:	e8 8c f4 ff ff       	call   f0100c9f <page_alloc>$/;"	l
f0101813	obj/kern/kernel.asm	/^f0101813:	89 c7                	mov    %eax,%edi$/;"	l
f0101815	obj/kern/kernel.asm	/^f0101815:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101818	obj/kern/kernel.asm	/^f0101818:	85 c0                	test   %eax,%eax$/;"	l
f010181a	obj/kern/kernel.asm	/^f010181a:	74 78                	je     f0101894 <mem_init+0x882>$/;"	l
f010181c	obj/kern/kernel.asm	/^f010181c:	39 f3                	cmp    %esi,%ebx$/;"	l
f010181e	obj/kern/kernel.asm	/^f010181e:	0f 84 89 00 00 00    	je     f01018ad <mem_init+0x89b>$/;"	l
f0101824	obj/kern/kernel.asm	/^f0101824:	39 c3                	cmp    %eax,%ebx$/;"	l
f0101826	obj/kern/kernel.asm	/^f0101826:	74 08                	je     f0101830 <mem_init+0x81e>$/;"	l
f0101828	obj/kern/kernel.asm	/^f0101828:	39 c6                	cmp    %eax,%esi$/;"	l
f010182a	obj/kern/kernel.asm	/^f010182a:	0f 85 96 00 00 00    	jne    f01018c6 <mem_init+0x8b4>$/;"	l
f0101830	obj/kern/kernel.asm	/^f0101830:	68 d0 59 10 f0       	push   $0xf01059d0$/;"	l
f0101835	obj/kern/kernel.asm	/^f0101835:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f010183a	obj/kern/kernel.asm	/^f010183a:	68 2d 04 00 00       	push   $0x42d$/;"	l
f010183f	obj/kern/kernel.asm	/^f010183f:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101844	obj/kern/kernel.asm	/^f0101844:	e8 f7 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101849	obj/kern/kernel.asm	/^f0101849:	68 69 60 10 f0       	push   $0xf0106069$/;"	l
f010184e	obj/kern/kernel.asm	/^f010184e:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101853	obj/kern/kernel.asm	/^f0101853:	68 b2 03 00 00       	push   $0x3b2$/;"	l
f0101858	obj/kern/kernel.asm	/^f0101858:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f010185d	obj/kern/kernel.asm	/^f010185d:	e8 de e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101862	obj/kern/kernel.asm	/^f0101862:	68 77 5f 10 f0       	push   $0xf0105f77$/;"	l
f0101867	obj/kern/kernel.asm	/^f0101867:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f010186c	obj/kern/kernel.asm	/^f010186c:	68 27 04 00 00       	push   $0x427$/;"	l
f0101871	obj/kern/kernel.asm	/^f0101871:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101876	obj/kern/kernel.asm	/^f0101876:	e8 c5 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f010187b	obj/kern/kernel.asm	/^f010187b:	68 8d 5f 10 f0       	push   $0xf0105f8d$/;"	l
f0101880	obj/kern/kernel.asm	/^f0101880:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101885	obj/kern/kernel.asm	/^f0101885:	68 28 04 00 00       	push   $0x428$/;"	l
f010188a	obj/kern/kernel.asm	/^f010188a:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f010188f	obj/kern/kernel.asm	/^f010188f:	e8 ac e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101894	obj/kern/kernel.asm	/^f0101894:	68 a3 5f 10 f0       	push   $0xf0105fa3$/;"	l
f0101899	obj/kern/kernel.asm	/^f0101899:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f010189e	obj/kern/kernel.asm	/^f010189e:	68 29 04 00 00       	push   $0x429$/;"	l
f01018a3	obj/kern/kernel.asm	/^f01018a3:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f01018a8	obj/kern/kernel.asm	/^f01018a8:	e8 93 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018ad	obj/kern/kernel.asm	/^f01018ad:	68 b9 5f 10 f0       	push   $0xf0105fb9$/;"	l
f01018b2	obj/kern/kernel.asm	/^f01018b2:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f01018b7	obj/kern/kernel.asm	/^f01018b7:	68 2c 04 00 00       	push   $0x42c$/;"	l
f01018bc	obj/kern/kernel.asm	/^f01018bc:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f01018c1	obj/kern/kernel.asm	/^f01018c1:	e8 7a e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018c6	obj/kern/kernel.asm	/^f01018c6:	a1 40 02 24 f0       	mov    0xf0240240,%eax$/;"	l
f01018cb	obj/kern/kernel.asm	/^f01018cb:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01018ce	obj/kern/kernel.asm	/^f01018ce:	c7 05 40 02 24 f0 00 	movl   $0x0,0xf0240240$/;"	l
f01018d5	obj/kern/kernel.asm	/^f01018d5:	00 00 00 $/;"	l
f01018d8	obj/kern/kernel.asm	/^f01018d8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01018db	obj/kern/kernel.asm	/^f01018db:	6a 00                	push   $0x0$/;"	l
f01018dd	obj/kern/kernel.asm	/^f01018dd:	e8 bd f3 ff ff       	call   f0100c9f <page_alloc>$/;"	l
f01018e2	obj/kern/kernel.asm	/^f01018e2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01018e5	obj/kern/kernel.asm	/^f01018e5:	85 c0                	test   %eax,%eax$/;"	l
f01018e7	obj/kern/kernel.asm	/^f01018e7:	74 19                	je     f0101902 <mem_init+0x8f0>$/;"	l
f01018e9	obj/kern/kernel.asm	/^f01018e9:	68 22 60 10 f0       	push   $0xf0106022$/;"	l
f01018ee	obj/kern/kernel.asm	/^f01018ee:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f01018f3	obj/kern/kernel.asm	/^f01018f3:	68 34 04 00 00       	push   $0x434$/;"	l
f01018f8	obj/kern/kernel.asm	/^f01018f8:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f01018fd	obj/kern/kernel.asm	/^f01018fd:	e8 3e e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101902	obj/kern/kernel.asm	/^f0101902:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101905	obj/kern/kernel.asm	/^f0101905:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0101908	obj/kern/kernel.asm	/^f0101908:	50                   	push   %eax$/;"	l
f0101909	obj/kern/kernel.asm	/^f0101909:	6a 00                	push   $0x0$/;"	l
f010190b	obj/kern/kernel.asm	/^f010190b:	ff 35 0c 0f 24 f0    	pushl  0xf0240f0c$/;"	l
f0101911	obj/kern/kernel.asm	/^f0101911:	e8 4d f5 ff ff       	call   f0100e63 <page_lookup>$/;"	l
f0101916	obj/kern/kernel.asm	/^f0101916:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101919	obj/kern/kernel.asm	/^f0101919:	85 c0                	test   %eax,%eax$/;"	l
f010191b	obj/kern/kernel.asm	/^f010191b:	74 19                	je     f0101936 <mem_init+0x924>$/;"	l
f010191d	obj/kern/kernel.asm	/^f010191d:	68 10 5a 10 f0       	push   $0xf0105a10$/;"	l
f0101922	obj/kern/kernel.asm	/^f0101922:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101927	obj/kern/kernel.asm	/^f0101927:	68 37 04 00 00       	push   $0x437$/;"	l
f010192c	obj/kern/kernel.asm	/^f010192c:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101931	obj/kern/kernel.asm	/^f0101931:	e8 0a e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101936	obj/kern/kernel.asm	/^f0101936:	6a 02                	push   $0x2$/;"	l
f0101938	obj/kern/kernel.asm	/^f0101938:	6a 00                	push   $0x0$/;"	l
f010193a	obj/kern/kernel.asm	/^f010193a:	56                   	push   %esi$/;"	l
f010193b	obj/kern/kernel.asm	/^f010193b:	ff 35 0c 0f 24 f0    	pushl  0xf0240f0c$/;"	l
f0101941	obj/kern/kernel.asm	/^f0101941:	e8 ff f5 ff ff       	call   f0100f45 <page_insert>$/;"	l
f0101946	obj/kern/kernel.asm	/^f0101946:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101949	obj/kern/kernel.asm	/^f0101949:	85 c0                	test   %eax,%eax$/;"	l
f010194b	obj/kern/kernel.asm	/^f010194b:	78 19                	js     f0101966 <mem_init+0x954>$/;"	l
f010194d	obj/kern/kernel.asm	/^f010194d:	68 48 5a 10 f0       	push   $0xf0105a48$/;"	l
f0101952	obj/kern/kernel.asm	/^f0101952:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101957	obj/kern/kernel.asm	/^f0101957:	68 3a 04 00 00       	push   $0x43a$/;"	l
f010195c	obj/kern/kernel.asm	/^f010195c:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101961	obj/kern/kernel.asm	/^f0101961:	e8 da e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101966	obj/kern/kernel.asm	/^f0101966:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101969	obj/kern/kernel.asm	/^f0101969:	53                   	push   %ebx$/;"	l
f010196a	obj/kern/kernel.asm	/^f010196a:	e8 a2 f3 ff ff       	call   f0100d11 <page_free>$/;"	l
f010196f	obj/kern/kernel.asm	/^f010196f:	6a 02                	push   $0x2$/;"	l
f0101971	obj/kern/kernel.asm	/^f0101971:	6a 00                	push   $0x0$/;"	l
f0101973	obj/kern/kernel.asm	/^f0101973:	56                   	push   %esi$/;"	l
f0101974	obj/kern/kernel.asm	/^f0101974:	ff 35 0c 0f 24 f0    	pushl  0xf0240f0c$/;"	l
f010197a	obj/kern/kernel.asm	/^f010197a:	e8 c6 f5 ff ff       	call   f0100f45 <page_insert>$/;"	l
f010197f	obj/kern/kernel.asm	/^f010197f:	83 c4 20             	add    $0x20,%esp$/;"	l
f0101982	obj/kern/kernel.asm	/^f0101982:	85 c0                	test   %eax,%eax$/;"	l
f0101984	obj/kern/kernel.asm	/^f0101984:	74 19                	je     f010199f <mem_init+0x98d>$/;"	l
f0101986	obj/kern/kernel.asm	/^f0101986:	68 78 5a 10 f0       	push   $0xf0105a78$/;"	l
f010198b	obj/kern/kernel.asm	/^f010198b:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101990	obj/kern/kernel.asm	/^f0101990:	68 3e 04 00 00       	push   $0x43e$/;"	l
f0101995	obj/kern/kernel.asm	/^f0101995:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f010199a	obj/kern/kernel.asm	/^f010199a:	e8 a1 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f010199f	obj/kern/kernel.asm	/^f010199f:	a1 0c 0f 24 f0       	mov    0xf0240f0c,%eax$/;"	l
f01019a4	obj/kern/kernel.asm	/^f01019a4:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01019a7	obj/kern/kernel.asm	/^f01019a7:	8b 0d 10 0f 24 f0    	mov    0xf0240f10,%ecx$/;"	l
f01019ad	obj/kern/kernel.asm	/^f01019ad:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
f01019b0	obj/kern/kernel.asm	/^f01019b0:	8b 00                	mov    (%eax),%eax$/;"	l
f01019b2	obj/kern/kernel.asm	/^f01019b2:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f01019b5	obj/kern/kernel.asm	/^f01019b5:	89 c2                	mov    %eax,%edx$/;"	l
f01019b7	obj/kern/kernel.asm	/^f01019b7:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01019bd	obj/kern/kernel.asm	/^f01019bd:	89 d8                	mov    %ebx,%eax$/;"	l
f01019bf	obj/kern/kernel.asm	/^f01019bf:	29 c8                	sub    %ecx,%eax$/;"	l
f01019c1	obj/kern/kernel.asm	/^f01019c1:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01019c4	obj/kern/kernel.asm	/^f01019c4:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01019c7	obj/kern/kernel.asm	/^f01019c7:	39 c2                	cmp    %eax,%edx$/;"	l
f01019c9	obj/kern/kernel.asm	/^f01019c9:	74 19                	je     f01019e4 <mem_init+0x9d2>$/;"	l
f01019cb	obj/kern/kernel.asm	/^f01019cb:	68 a8 5a 10 f0       	push   $0xf0105aa8$/;"	l
f01019d0	obj/kern/kernel.asm	/^f01019d0:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f01019d5	obj/kern/kernel.asm	/^f01019d5:	68 3f 04 00 00       	push   $0x43f$/;"	l
f01019da	obj/kern/kernel.asm	/^f01019da:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f01019df	obj/kern/kernel.asm	/^f01019df:	e8 5c e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019e4	obj/kern/kernel.asm	/^f01019e4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01019e9	obj/kern/kernel.asm	/^f01019e9:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01019ec	obj/kern/kernel.asm	/^f01019ec:	e8 ea f0 ff ff       	call   f0100adb <check_va2pa>$/;"	l
f01019f1	obj/kern/kernel.asm	/^f01019f1:	89 f2                	mov    %esi,%edx$/;"	l
f01019f3	obj/kern/kernel.asm	/^f01019f3:	2b 55 cc             	sub    -0x34(%ebp),%edx$/;"	l
f01019f6	obj/kern/kernel.asm	/^f01019f6:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01019f9	obj/kern/kernel.asm	/^f01019f9:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01019fc	obj/kern/kernel.asm	/^f01019fc:	39 d0                	cmp    %edx,%eax$/;"	l
f01019fe	obj/kern/kernel.asm	/^f01019fe:	74 19                	je     f0101a19 <mem_init+0xa07>$/;"	l
f0101a00	obj/kern/kernel.asm	/^f0101a00:	68 d0 5a 10 f0       	push   $0xf0105ad0$/;"	l
f0101a05	obj/kern/kernel.asm	/^f0101a05:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101a0a	obj/kern/kernel.asm	/^f0101a0a:	68 40 04 00 00       	push   $0x440$/;"	l
f0101a0f	obj/kern/kernel.asm	/^f0101a0f:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101a14	obj/kern/kernel.asm	/^f0101a14:	e8 27 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a19	obj/kern/kernel.asm	/^f0101a19:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101a1e	obj/kern/kernel.asm	/^f0101a1e:	74 19                	je     f0101a39 <mem_init+0xa27>$/;"	l
f0101a20	obj/kern/kernel.asm	/^f0101a20:	68 74 60 10 f0       	push   $0xf0106074$/;"	l
f0101a25	obj/kern/kernel.asm	/^f0101a25:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101a2a	obj/kern/kernel.asm	/^f0101a2a:	68 41 04 00 00       	push   $0x441$/;"	l
f0101a2f	obj/kern/kernel.asm	/^f0101a2f:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101a34	obj/kern/kernel.asm	/^f0101a34:	e8 07 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a39	obj/kern/kernel.asm	/^f0101a39:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101a3e	obj/kern/kernel.asm	/^f0101a3e:	74 19                	je     f0101a59 <mem_init+0xa47>$/;"	l
f0101a40	obj/kern/kernel.asm	/^f0101a40:	68 85 60 10 f0       	push   $0xf0106085$/;"	l
f0101a45	obj/kern/kernel.asm	/^f0101a45:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101a4a	obj/kern/kernel.asm	/^f0101a4a:	68 42 04 00 00       	push   $0x442$/;"	l
f0101a4f	obj/kern/kernel.asm	/^f0101a4f:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101a54	obj/kern/kernel.asm	/^f0101a54:	e8 e7 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a59	obj/kern/kernel.asm	/^f0101a59:	6a 02                	push   $0x2$/;"	l
f0101a5b	obj/kern/kernel.asm	/^f0101a5b:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101a60	obj/kern/kernel.asm	/^f0101a60:	57                   	push   %edi$/;"	l
f0101a61	obj/kern/kernel.asm	/^f0101a61:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101a64	obj/kern/kernel.asm	/^f0101a64:	e8 dc f4 ff ff       	call   f0100f45 <page_insert>$/;"	l
f0101a69	obj/kern/kernel.asm	/^f0101a69:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101a6c	obj/kern/kernel.asm	/^f0101a6c:	85 c0                	test   %eax,%eax$/;"	l
f0101a6e	obj/kern/kernel.asm	/^f0101a6e:	74 19                	je     f0101a89 <mem_init+0xa77>$/;"	l
f0101a70	obj/kern/kernel.asm	/^f0101a70:	68 00 5b 10 f0       	push   $0xf0105b00$/;"	l
f0101a75	obj/kern/kernel.asm	/^f0101a75:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101a7a	obj/kern/kernel.asm	/^f0101a7a:	68 45 04 00 00       	push   $0x445$/;"	l
f0101a7f	obj/kern/kernel.asm	/^f0101a7f:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101a84	obj/kern/kernel.asm	/^f0101a84:	e8 b7 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a89	obj/kern/kernel.asm	/^f0101a89:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101a8e	obj/kern/kernel.asm	/^f0101a8e:	a1 0c 0f 24 f0       	mov    0xf0240f0c,%eax$/;"	l
f0101a93	obj/kern/kernel.asm	/^f0101a93:	e8 43 f0 ff ff       	call   f0100adb <check_va2pa>$/;"	l
f0101a98	obj/kern/kernel.asm	/^f0101a98:	89 fa                	mov    %edi,%edx$/;"	l
f0101a9a	obj/kern/kernel.asm	/^f0101a9a:	2b 15 10 0f 24 f0    	sub    0xf0240f10,%edx$/;"	l
f0101aa0	obj/kern/kernel.asm	/^f0101aa0:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101aa3	obj/kern/kernel.asm	/^f0101aa3:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101aa6	obj/kern/kernel.asm	/^f0101aa6:	39 d0                	cmp    %edx,%eax$/;"	l
f0101aa8	obj/kern/kernel.asm	/^f0101aa8:	74 19                	je     f0101ac3 <mem_init+0xab1>$/;"	l
f0101aaa	obj/kern/kernel.asm	/^f0101aaa:	68 3c 5b 10 f0       	push   $0xf0105b3c$/;"	l
f0101aaf	obj/kern/kernel.asm	/^f0101aaf:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101ab4	obj/kern/kernel.asm	/^f0101ab4:	68 46 04 00 00       	push   $0x446$/;"	l
f0101ab9	obj/kern/kernel.asm	/^f0101ab9:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101abe	obj/kern/kernel.asm	/^f0101abe:	e8 7d e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ac3	obj/kern/kernel.asm	/^f0101ac3:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0101ac8	obj/kern/kernel.asm	/^f0101ac8:	74 19                	je     f0101ae3 <mem_init+0xad1>$/;"	l
f0101aca	obj/kern/kernel.asm	/^f0101aca:	68 96 60 10 f0       	push   $0xf0106096$/;"	l
f0101acf	obj/kern/kernel.asm	/^f0101acf:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101ad4	obj/kern/kernel.asm	/^f0101ad4:	68 47 04 00 00       	push   $0x447$/;"	l
f0101ad9	obj/kern/kernel.asm	/^f0101ad9:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101ade	obj/kern/kernel.asm	/^f0101ade:	e8 5d e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ae3	obj/kern/kernel.asm	/^f0101ae3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101ae6	obj/kern/kernel.asm	/^f0101ae6:	6a 00                	push   $0x0$/;"	l
f0101ae8	obj/kern/kernel.asm	/^f0101ae8:	e8 b2 f1 ff ff       	call   f0100c9f <page_alloc>$/;"	l
f0101aed	obj/kern/kernel.asm	/^f0101aed:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101af0	obj/kern/kernel.asm	/^f0101af0:	85 c0                	test   %eax,%eax$/;"	l
f0101af2	obj/kern/kernel.asm	/^f0101af2:	74 19                	je     f0101b0d <mem_init+0xafb>$/;"	l
f0101af4	obj/kern/kernel.asm	/^f0101af4:	68 22 60 10 f0       	push   $0xf0106022$/;"	l
f0101af9	obj/kern/kernel.asm	/^f0101af9:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101afe	obj/kern/kernel.asm	/^f0101afe:	68 4a 04 00 00       	push   $0x44a$/;"	l
f0101b03	obj/kern/kernel.asm	/^f0101b03:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101b08	obj/kern/kernel.asm	/^f0101b08:	e8 33 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b0d	obj/kern/kernel.asm	/^f0101b0d:	6a 02                	push   $0x2$/;"	l
f0101b0f	obj/kern/kernel.asm	/^f0101b0f:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101b14	obj/kern/kernel.asm	/^f0101b14:	57                   	push   %edi$/;"	l
f0101b15	obj/kern/kernel.asm	/^f0101b15:	ff 35 0c 0f 24 f0    	pushl  0xf0240f0c$/;"	l
f0101b1b	obj/kern/kernel.asm	/^f0101b1b:	e8 25 f4 ff ff       	call   f0100f45 <page_insert>$/;"	l
f0101b20	obj/kern/kernel.asm	/^f0101b20:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b23	obj/kern/kernel.asm	/^f0101b23:	85 c0                	test   %eax,%eax$/;"	l
f0101b25	obj/kern/kernel.asm	/^f0101b25:	74 19                	je     f0101b40 <mem_init+0xb2e>$/;"	l
f0101b27	obj/kern/kernel.asm	/^f0101b27:	68 00 5b 10 f0       	push   $0xf0105b00$/;"	l
f0101b2c	obj/kern/kernel.asm	/^f0101b2c:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101b31	obj/kern/kernel.asm	/^f0101b31:	68 4d 04 00 00       	push   $0x44d$/;"	l
f0101b36	obj/kern/kernel.asm	/^f0101b36:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101b3b	obj/kern/kernel.asm	/^f0101b3b:	e8 00 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b40	obj/kern/kernel.asm	/^f0101b40:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101b45	obj/kern/kernel.asm	/^f0101b45:	a1 0c 0f 24 f0       	mov    0xf0240f0c,%eax$/;"	l
f0101b4a	obj/kern/kernel.asm	/^f0101b4a:	e8 8c ef ff ff       	call   f0100adb <check_va2pa>$/;"	l
f0101b4f	obj/kern/kernel.asm	/^f0101b4f:	89 fa                	mov    %edi,%edx$/;"	l
f0101b51	obj/kern/kernel.asm	/^f0101b51:	2b 15 10 0f 24 f0    	sub    0xf0240f10,%edx$/;"	l
f0101b57	obj/kern/kernel.asm	/^f0101b57:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101b5a	obj/kern/kernel.asm	/^f0101b5a:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101b5d	obj/kern/kernel.asm	/^f0101b5d:	39 d0                	cmp    %edx,%eax$/;"	l
f0101b5f	obj/kern/kernel.asm	/^f0101b5f:	74 19                	je     f0101b7a <mem_init+0xb68>$/;"	l
f0101b61	obj/kern/kernel.asm	/^f0101b61:	68 3c 5b 10 f0       	push   $0xf0105b3c$/;"	l
f0101b66	obj/kern/kernel.asm	/^f0101b66:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101b6b	obj/kern/kernel.asm	/^f0101b6b:	68 4e 04 00 00       	push   $0x44e$/;"	l
f0101b70	obj/kern/kernel.asm	/^f0101b70:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101b75	obj/kern/kernel.asm	/^f0101b75:	e8 c6 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b7a	obj/kern/kernel.asm	/^f0101b7a:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0101b7f	obj/kern/kernel.asm	/^f0101b7f:	74 19                	je     f0101b9a <mem_init+0xb88>$/;"	l
f0101b81	obj/kern/kernel.asm	/^f0101b81:	68 96 60 10 f0       	push   $0xf0106096$/;"	l
f0101b86	obj/kern/kernel.asm	/^f0101b86:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101b8b	obj/kern/kernel.asm	/^f0101b8b:	68 4f 04 00 00       	push   $0x44f$/;"	l
f0101b90	obj/kern/kernel.asm	/^f0101b90:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101b95	obj/kern/kernel.asm	/^f0101b95:	e8 a6 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b9a	obj/kern/kernel.asm	/^f0101b9a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101b9d	obj/kern/kernel.asm	/^f0101b9d:	6a 00                	push   $0x0$/;"	l
f0101b9f	obj/kern/kernel.asm	/^f0101b9f:	e8 fb f0 ff ff       	call   f0100c9f <page_alloc>$/;"	l
f0101ba4	obj/kern/kernel.asm	/^f0101ba4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ba7	obj/kern/kernel.asm	/^f0101ba7:	85 c0                	test   %eax,%eax$/;"	l
f0101ba9	obj/kern/kernel.asm	/^f0101ba9:	74 19                	je     f0101bc4 <mem_init+0xbb2>$/;"	l
f0101bab	obj/kern/kernel.asm	/^f0101bab:	68 22 60 10 f0       	push   $0xf0106022$/;"	l
f0101bb0	obj/kern/kernel.asm	/^f0101bb0:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101bb5	obj/kern/kernel.asm	/^f0101bb5:	68 53 04 00 00       	push   $0x453$/;"	l
f0101bba	obj/kern/kernel.asm	/^f0101bba:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101bbf	obj/kern/kernel.asm	/^f0101bbf:	e8 7c e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101bc4	obj/kern/kernel.asm	/^f0101bc4:	8b 15 0c 0f 24 f0    	mov    0xf0240f0c,%edx$/;"	l
f0101bca	obj/kern/kernel.asm	/^f0101bca:	8b 02                	mov    (%edx),%eax$/;"	l
f0101bcc	obj/kern/kernel.asm	/^f0101bcc:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101bd1	obj/kern/kernel.asm	/^f0101bd1:	89 c1                	mov    %eax,%ecx$/;"	l
f0101bd3	obj/kern/kernel.asm	/^f0101bd3:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0101bd6	obj/kern/kernel.asm	/^f0101bd6:	3b 0d 08 0f 24 f0    	cmp    0xf0240f08,%ecx$/;"	l
f0101bdc	obj/kern/kernel.asm	/^f0101bdc:	72 15                	jb     f0101bf3 <mem_init+0xbe1>$/;"	l
f0101bde	obj/kern/kernel.asm	/^f0101bde:	50                   	push   %eax$/;"	l
f0101bdf	obj/kern/kernel.asm	/^f0101bdf:	68 c4 52 10 f0       	push   $0xf01052c4$/;"	l
f0101be4	obj/kern/kernel.asm	/^f0101be4:	68 56 04 00 00       	push   $0x456$/;"	l
f0101be9	obj/kern/kernel.asm	/^f0101be9:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101bee	obj/kern/kernel.asm	/^f0101bee:	e8 4d e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101bf3	obj/kern/kernel.asm	/^f0101bf3:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101bf8	obj/kern/kernel.asm	/^f0101bf8:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0101bfb	obj/kern/kernel.asm	/^f0101bfb:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101bfe	obj/kern/kernel.asm	/^f0101bfe:	6a 00                	push   $0x0$/;"	l
f0101c00	obj/kern/kernel.asm	/^f0101c00:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101c05	obj/kern/kernel.asm	/^f0101c05:	52                   	push   %edx$/;"	l
f0101c06	obj/kern/kernel.asm	/^f0101c06:	e8 81 f1 ff ff       	call   f0100d8c <pgdir_walk>$/;"	l
f0101c0b	obj/kern/kernel.asm	/^f0101c0b:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0101c0e	obj/kern/kernel.asm	/^f0101c0e:	8d 51 04             	lea    0x4(%ecx),%edx$/;"	l
f0101c11	obj/kern/kernel.asm	/^f0101c11:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c14	obj/kern/kernel.asm	/^f0101c14:	39 d0                	cmp    %edx,%eax$/;"	l
f0101c16	obj/kern/kernel.asm	/^f0101c16:	74 19                	je     f0101c31 <mem_init+0xc1f>$/;"	l
f0101c18	obj/kern/kernel.asm	/^f0101c18:	68 6c 5b 10 f0       	push   $0xf0105b6c$/;"	l
f0101c1d	obj/kern/kernel.asm	/^f0101c1d:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101c22	obj/kern/kernel.asm	/^f0101c22:	68 57 04 00 00       	push   $0x457$/;"	l
f0101c27	obj/kern/kernel.asm	/^f0101c27:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101c2c	obj/kern/kernel.asm	/^f0101c2c:	e8 0f e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c31	obj/kern/kernel.asm	/^f0101c31:	6a 06                	push   $0x6$/;"	l
f0101c33	obj/kern/kernel.asm	/^f0101c33:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101c38	obj/kern/kernel.asm	/^f0101c38:	57                   	push   %edi$/;"	l
f0101c39	obj/kern/kernel.asm	/^f0101c39:	ff 35 0c 0f 24 f0    	pushl  0xf0240f0c$/;"	l
f0101c3f	obj/kern/kernel.asm	/^f0101c3f:	e8 01 f3 ff ff       	call   f0100f45 <page_insert>$/;"	l
f0101c44	obj/kern/kernel.asm	/^f0101c44:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c47	obj/kern/kernel.asm	/^f0101c47:	85 c0                	test   %eax,%eax$/;"	l
f0101c49	obj/kern/kernel.asm	/^f0101c49:	74 19                	je     f0101c64 <mem_init+0xc52>$/;"	l
f0101c4b	obj/kern/kernel.asm	/^f0101c4b:	68 ac 5b 10 f0       	push   $0xf0105bac$/;"	l
f0101c50	obj/kern/kernel.asm	/^f0101c50:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101c55	obj/kern/kernel.asm	/^f0101c55:	68 5a 04 00 00       	push   $0x45a$/;"	l
f0101c5a	obj/kern/kernel.asm	/^f0101c5a:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101c5f	obj/kern/kernel.asm	/^f0101c5f:	e8 dc e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c64	obj/kern/kernel.asm	/^f0101c64:	a1 0c 0f 24 f0       	mov    0xf0240f0c,%eax$/;"	l
f0101c69	obj/kern/kernel.asm	/^f0101c69:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101c6c	obj/kern/kernel.asm	/^f0101c6c:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101c71	obj/kern/kernel.asm	/^f0101c71:	e8 65 ee ff ff       	call   f0100adb <check_va2pa>$/;"	l
f0101c76	obj/kern/kernel.asm	/^f0101c76:	89 fa                	mov    %edi,%edx$/;"	l
f0101c78	obj/kern/kernel.asm	/^f0101c78:	2b 15 10 0f 24 f0    	sub    0xf0240f10,%edx$/;"	l
f0101c7e	obj/kern/kernel.asm	/^f0101c7e:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101c81	obj/kern/kernel.asm	/^f0101c81:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101c84	obj/kern/kernel.asm	/^f0101c84:	39 d0                	cmp    %edx,%eax$/;"	l
f0101c86	obj/kern/kernel.asm	/^f0101c86:	74 19                	je     f0101ca1 <mem_init+0xc8f>$/;"	l
f0101c88	obj/kern/kernel.asm	/^f0101c88:	68 3c 5b 10 f0       	push   $0xf0105b3c$/;"	l
f0101c8d	obj/kern/kernel.asm	/^f0101c8d:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101c92	obj/kern/kernel.asm	/^f0101c92:	68 5b 04 00 00       	push   $0x45b$/;"	l
f0101c97	obj/kern/kernel.asm	/^f0101c97:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101c9c	obj/kern/kernel.asm	/^f0101c9c:	e8 9f e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ca1	obj/kern/kernel.asm	/^f0101ca1:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0101ca6	obj/kern/kernel.asm	/^f0101ca6:	74 19                	je     f0101cc1 <mem_init+0xcaf>$/;"	l
f0101ca8	obj/kern/kernel.asm	/^f0101ca8:	68 96 60 10 f0       	push   $0xf0106096$/;"	l
f0101cad	obj/kern/kernel.asm	/^f0101cad:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101cb2	obj/kern/kernel.asm	/^f0101cb2:	68 5c 04 00 00       	push   $0x45c$/;"	l
f0101cb7	obj/kern/kernel.asm	/^f0101cb7:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101cbc	obj/kern/kernel.asm	/^f0101cbc:	e8 7f e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cc1	obj/kern/kernel.asm	/^f0101cc1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101cc4	obj/kern/kernel.asm	/^f0101cc4:	6a 00                	push   $0x0$/;"	l
f0101cc6	obj/kern/kernel.asm	/^f0101cc6:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101ccb	obj/kern/kernel.asm	/^f0101ccb:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101cce	obj/kern/kernel.asm	/^f0101cce:	e8 b9 f0 ff ff       	call   f0100d8c <pgdir_walk>$/;"	l
f0101cd3	obj/kern/kernel.asm	/^f0101cd3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101cd6	obj/kern/kernel.asm	/^f0101cd6:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101cd9	obj/kern/kernel.asm	/^f0101cd9:	75 19                	jne    f0101cf4 <mem_init+0xce2>$/;"	l
f0101cdb	obj/kern/kernel.asm	/^f0101cdb:	68 ec 5b 10 f0       	push   $0xf0105bec$/;"	l
f0101ce0	obj/kern/kernel.asm	/^f0101ce0:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101ce5	obj/kern/kernel.asm	/^f0101ce5:	68 5d 04 00 00       	push   $0x45d$/;"	l
f0101cea	obj/kern/kernel.asm	/^f0101cea:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101cef	obj/kern/kernel.asm	/^f0101cef:	e8 4c e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cf4	obj/kern/kernel.asm	/^f0101cf4:	a1 0c 0f 24 f0       	mov    0xf0240f0c,%eax$/;"	l
f0101cf9	obj/kern/kernel.asm	/^f0101cf9:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101cfc	obj/kern/kernel.asm	/^f0101cfc:	75 19                	jne    f0101d17 <mem_init+0xd05>$/;"	l
f0101cfe	obj/kern/kernel.asm	/^f0101cfe:	68 a7 60 10 f0       	push   $0xf01060a7$/;"	l
f0101d03	obj/kern/kernel.asm	/^f0101d03:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101d08	obj/kern/kernel.asm	/^f0101d08:	68 5e 04 00 00       	push   $0x45e$/;"	l
f0101d0d	obj/kern/kernel.asm	/^f0101d0d:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101d12	obj/kern/kernel.asm	/^f0101d12:	e8 29 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d17	obj/kern/kernel.asm	/^f0101d17:	6a 02                	push   $0x2$/;"	l
f0101d19	obj/kern/kernel.asm	/^f0101d19:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101d1e	obj/kern/kernel.asm	/^f0101d1e:	57                   	push   %edi$/;"	l
f0101d1f	obj/kern/kernel.asm	/^f0101d1f:	50                   	push   %eax$/;"	l
f0101d20	obj/kern/kernel.asm	/^f0101d20:	e8 20 f2 ff ff       	call   f0100f45 <page_insert>$/;"	l
f0101d25	obj/kern/kernel.asm	/^f0101d25:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d28	obj/kern/kernel.asm	/^f0101d28:	85 c0                	test   %eax,%eax$/;"	l
f0101d2a	obj/kern/kernel.asm	/^f0101d2a:	74 19                	je     f0101d45 <mem_init+0xd33>$/;"	l
f0101d2c	obj/kern/kernel.asm	/^f0101d2c:	68 00 5b 10 f0       	push   $0xf0105b00$/;"	l
f0101d31	obj/kern/kernel.asm	/^f0101d31:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101d36	obj/kern/kernel.asm	/^f0101d36:	68 61 04 00 00       	push   $0x461$/;"	l
f0101d3b	obj/kern/kernel.asm	/^f0101d3b:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101d40	obj/kern/kernel.asm	/^f0101d40:	e8 fb e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d45	obj/kern/kernel.asm	/^f0101d45:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101d48	obj/kern/kernel.asm	/^f0101d48:	6a 00                	push   $0x0$/;"	l
f0101d4a	obj/kern/kernel.asm	/^f0101d4a:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101d4f	obj/kern/kernel.asm	/^f0101d4f:	ff 35 0c 0f 24 f0    	pushl  0xf0240f0c$/;"	l
f0101d55	obj/kern/kernel.asm	/^f0101d55:	e8 32 f0 ff ff       	call   f0100d8c <pgdir_walk>$/;"	l
f0101d5a	obj/kern/kernel.asm	/^f0101d5a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d5d	obj/kern/kernel.asm	/^f0101d5d:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f0101d60	obj/kern/kernel.asm	/^f0101d60:	75 19                	jne    f0101d7b <mem_init+0xd69>$/;"	l
f0101d62	obj/kern/kernel.asm	/^f0101d62:	68 20 5c 10 f0       	push   $0xf0105c20$/;"	l
f0101d67	obj/kern/kernel.asm	/^f0101d67:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101d6c	obj/kern/kernel.asm	/^f0101d6c:	68 62 04 00 00       	push   $0x462$/;"	l
f0101d71	obj/kern/kernel.asm	/^f0101d71:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101d76	obj/kern/kernel.asm	/^f0101d76:	e8 c5 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d7b	obj/kern/kernel.asm	/^f0101d7b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101d7e	obj/kern/kernel.asm	/^f0101d7e:	6a 00                	push   $0x0$/;"	l
f0101d80	obj/kern/kernel.asm	/^f0101d80:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101d85	obj/kern/kernel.asm	/^f0101d85:	ff 35 0c 0f 24 f0    	pushl  0xf0240f0c$/;"	l
f0101d8b	obj/kern/kernel.asm	/^f0101d8b:	e8 fc ef ff ff       	call   f0100d8c <pgdir_walk>$/;"	l
f0101d90	obj/kern/kernel.asm	/^f0101d90:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d93	obj/kern/kernel.asm	/^f0101d93:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101d96	obj/kern/kernel.asm	/^f0101d96:	74 19                	je     f0101db1 <mem_init+0xd9f>$/;"	l
f0101d98	obj/kern/kernel.asm	/^f0101d98:	68 54 5c 10 f0       	push   $0xf0105c54$/;"	l
f0101d9d	obj/kern/kernel.asm	/^f0101d9d:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101da2	obj/kern/kernel.asm	/^f0101da2:	68 63 04 00 00       	push   $0x463$/;"	l
f0101da7	obj/kern/kernel.asm	/^f0101da7:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101dac	obj/kern/kernel.asm	/^f0101dac:	e8 8f e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101db1	obj/kern/kernel.asm	/^f0101db1:	6a 02                	push   $0x2$/;"	l
f0101db3	obj/kern/kernel.asm	/^f0101db3:	68 00 00 40 00       	push   $0x400000$/;"	l
f0101db8	obj/kern/kernel.asm	/^f0101db8:	53                   	push   %ebx$/;"	l
f0101db9	obj/kern/kernel.asm	/^f0101db9:	ff 35 0c 0f 24 f0    	pushl  0xf0240f0c$/;"	l
f0101dbf	obj/kern/kernel.asm	/^f0101dbf:	e8 81 f1 ff ff       	call   f0100f45 <page_insert>$/;"	l
f0101dc4	obj/kern/kernel.asm	/^f0101dc4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101dc7	obj/kern/kernel.asm	/^f0101dc7:	85 c0                	test   %eax,%eax$/;"	l
f0101dc9	obj/kern/kernel.asm	/^f0101dc9:	78 19                	js     f0101de4 <mem_init+0xdd2>$/;"	l
f0101dcb	obj/kern/kernel.asm	/^f0101dcb:	68 8c 5c 10 f0       	push   $0xf0105c8c$/;"	l
f0101dd0	obj/kern/kernel.asm	/^f0101dd0:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101dd5	obj/kern/kernel.asm	/^f0101dd5:	68 66 04 00 00       	push   $0x466$/;"	l
f0101dda	obj/kern/kernel.asm	/^f0101dda:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101ddf	obj/kern/kernel.asm	/^f0101ddf:	e8 5c e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101de4	obj/kern/kernel.asm	/^f0101de4:	6a 02                	push   $0x2$/;"	l
f0101de6	obj/kern/kernel.asm	/^f0101de6:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101deb	obj/kern/kernel.asm	/^f0101deb:	56                   	push   %esi$/;"	l
f0101dec	obj/kern/kernel.asm	/^f0101dec:	ff 35 0c 0f 24 f0    	pushl  0xf0240f0c$/;"	l
f0101df2	obj/kern/kernel.asm	/^f0101df2:	e8 4e f1 ff ff       	call   f0100f45 <page_insert>$/;"	l
f0101df7	obj/kern/kernel.asm	/^f0101df7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101dfa	obj/kern/kernel.asm	/^f0101dfa:	85 c0                	test   %eax,%eax$/;"	l
f0101dfc	obj/kern/kernel.asm	/^f0101dfc:	74 19                	je     f0101e17 <mem_init+0xe05>$/;"	l
f0101dfe	obj/kern/kernel.asm	/^f0101dfe:	68 c4 5c 10 f0       	push   $0xf0105cc4$/;"	l
f0101e03	obj/kern/kernel.asm	/^f0101e03:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101e08	obj/kern/kernel.asm	/^f0101e08:	68 69 04 00 00       	push   $0x469$/;"	l
f0101e0d	obj/kern/kernel.asm	/^f0101e0d:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101e12	obj/kern/kernel.asm	/^f0101e12:	e8 29 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e17	obj/kern/kernel.asm	/^f0101e17:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101e1a	obj/kern/kernel.asm	/^f0101e1a:	6a 00                	push   $0x0$/;"	l
f0101e1c	obj/kern/kernel.asm	/^f0101e1c:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101e21	obj/kern/kernel.asm	/^f0101e21:	ff 35 0c 0f 24 f0    	pushl  0xf0240f0c$/;"	l
f0101e27	obj/kern/kernel.asm	/^f0101e27:	e8 60 ef ff ff       	call   f0100d8c <pgdir_walk>$/;"	l
f0101e2c	obj/kern/kernel.asm	/^f0101e2c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e2f	obj/kern/kernel.asm	/^f0101e2f:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101e32	obj/kern/kernel.asm	/^f0101e32:	74 19                	je     f0101e4d <mem_init+0xe3b>$/;"	l
f0101e34	obj/kern/kernel.asm	/^f0101e34:	68 54 5c 10 f0       	push   $0xf0105c54$/;"	l
f0101e39	obj/kern/kernel.asm	/^f0101e39:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101e3e	obj/kern/kernel.asm	/^f0101e3e:	68 6a 04 00 00       	push   $0x46a$/;"	l
f0101e43	obj/kern/kernel.asm	/^f0101e43:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101e48	obj/kern/kernel.asm	/^f0101e48:	e8 f3 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e4d	obj/kern/kernel.asm	/^f0101e4d:	a1 0c 0f 24 f0       	mov    0xf0240f0c,%eax$/;"	l
f0101e52	obj/kern/kernel.asm	/^f0101e52:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101e55	obj/kern/kernel.asm	/^f0101e55:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101e5a	obj/kern/kernel.asm	/^f0101e5a:	e8 7c ec ff ff       	call   f0100adb <check_va2pa>$/;"	l
f0101e5f	obj/kern/kernel.asm	/^f0101e5f:	89 c1                	mov    %eax,%ecx$/;"	l
f0101e61	obj/kern/kernel.asm	/^f0101e61:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0101e64	obj/kern/kernel.asm	/^f0101e64:	89 f0                	mov    %esi,%eax$/;"	l
f0101e66	obj/kern/kernel.asm	/^f0101e66:	2b 05 10 0f 24 f0    	sub    0xf0240f10,%eax$/;"	l
f0101e6c	obj/kern/kernel.asm	/^f0101e6c:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101e6f	obj/kern/kernel.asm	/^f0101e6f:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101e72	obj/kern/kernel.asm	/^f0101e72:	39 c1                	cmp    %eax,%ecx$/;"	l
f0101e74	obj/kern/kernel.asm	/^f0101e74:	74 19                	je     f0101e8f <mem_init+0xe7d>$/;"	l
f0101e76	obj/kern/kernel.asm	/^f0101e76:	68 00 5d 10 f0       	push   $0xf0105d00$/;"	l
f0101e7b	obj/kern/kernel.asm	/^f0101e7b:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101e80	obj/kern/kernel.asm	/^f0101e80:	68 6d 04 00 00       	push   $0x46d$/;"	l
f0101e85	obj/kern/kernel.asm	/^f0101e85:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101e8a	obj/kern/kernel.asm	/^f0101e8a:	e8 b1 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e8f	obj/kern/kernel.asm	/^f0101e8f:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101e94	obj/kern/kernel.asm	/^f0101e94:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101e97	obj/kern/kernel.asm	/^f0101e97:	e8 3f ec ff ff       	call   f0100adb <check_va2pa>$/;"	l
f0101e9c	obj/kern/kernel.asm	/^f0101e9c:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f0101e9f	obj/kern/kernel.asm	/^f0101e9f:	74 19                	je     f0101eba <mem_init+0xea8>$/;"	l
f0101ea1	obj/kern/kernel.asm	/^f0101ea1:	68 2c 5d 10 f0       	push   $0xf0105d2c$/;"	l
f0101ea6	obj/kern/kernel.asm	/^f0101ea6:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101eab	obj/kern/kernel.asm	/^f0101eab:	68 6e 04 00 00       	push   $0x46e$/;"	l
f0101eb0	obj/kern/kernel.asm	/^f0101eb0:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101eb5	obj/kern/kernel.asm	/^f0101eb5:	e8 86 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101eba	obj/kern/kernel.asm	/^f0101eba:	66 83 7e 04 02       	cmpw   $0x2,0x4(%esi)$/;"	l
f0101ebf	obj/kern/kernel.asm	/^f0101ebf:	74 19                	je     f0101eda <mem_init+0xec8>$/;"	l
f0101ec1	obj/kern/kernel.asm	/^f0101ec1:	68 bd 60 10 f0       	push   $0xf01060bd$/;"	l
f0101ec6	obj/kern/kernel.asm	/^f0101ec6:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101ecb	obj/kern/kernel.asm	/^f0101ecb:	68 70 04 00 00       	push   $0x470$/;"	l
f0101ed0	obj/kern/kernel.asm	/^f0101ed0:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101ed5	obj/kern/kernel.asm	/^f0101ed5:	e8 66 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101eda	obj/kern/kernel.asm	/^f0101eda:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0101edf	obj/kern/kernel.asm	/^f0101edf:	74 19                	je     f0101efa <mem_init+0xee8>$/;"	l
f0101ee1	obj/kern/kernel.asm	/^f0101ee1:	68 ce 60 10 f0       	push   $0xf01060ce$/;"	l
f0101ee6	obj/kern/kernel.asm	/^f0101ee6:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101eeb	obj/kern/kernel.asm	/^f0101eeb:	68 71 04 00 00       	push   $0x471$/;"	l
f0101ef0	obj/kern/kernel.asm	/^f0101ef0:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101ef5	obj/kern/kernel.asm	/^f0101ef5:	e8 46 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101efa	obj/kern/kernel.asm	/^f0101efa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101efd	obj/kern/kernel.asm	/^f0101efd:	6a 00                	push   $0x0$/;"	l
f0101eff	obj/kern/kernel.asm	/^f0101eff:	e8 9b ed ff ff       	call   f0100c9f <page_alloc>$/;"	l
f0101f04	obj/kern/kernel.asm	/^f0101f04:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f07	obj/kern/kernel.asm	/^f0101f07:	85 c0                	test   %eax,%eax$/;"	l
f0101f09	obj/kern/kernel.asm	/^f0101f09:	74 04                	je     f0101f0f <mem_init+0xefd>$/;"	l
f0101f0b	obj/kern/kernel.asm	/^f0101f0b:	39 c7                	cmp    %eax,%edi$/;"	l
f0101f0d	obj/kern/kernel.asm	/^f0101f0d:	74 19                	je     f0101f28 <mem_init+0xf16>$/;"	l
f0101f0f	obj/kern/kernel.asm	/^f0101f0f:	68 5c 5d 10 f0       	push   $0xf0105d5c$/;"	l
f0101f14	obj/kern/kernel.asm	/^f0101f14:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101f19	obj/kern/kernel.asm	/^f0101f19:	68 74 04 00 00       	push   $0x474$/;"	l
f0101f1e	obj/kern/kernel.asm	/^f0101f1e:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101f23	obj/kern/kernel.asm	/^f0101f23:	e8 18 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f28	obj/kern/kernel.asm	/^f0101f28:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101f2b	obj/kern/kernel.asm	/^f0101f2b:	6a 00                	push   $0x0$/;"	l
f0101f2d	obj/kern/kernel.asm	/^f0101f2d:	ff 35 0c 0f 24 f0    	pushl  0xf0240f0c$/;"	l
f0101f33	obj/kern/kernel.asm	/^f0101f33:	e8 c5 ef ff ff       	call   f0100efd <page_remove>$/;"	l
f0101f38	obj/kern/kernel.asm	/^f0101f38:	a1 0c 0f 24 f0       	mov    0xf0240f0c,%eax$/;"	l
f0101f3d	obj/kern/kernel.asm	/^f0101f3d:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101f40	obj/kern/kernel.asm	/^f0101f40:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101f45	obj/kern/kernel.asm	/^f0101f45:	e8 91 eb ff ff       	call   f0100adb <check_va2pa>$/;"	l
f0101f4a	obj/kern/kernel.asm	/^f0101f4a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f4d	obj/kern/kernel.asm	/^f0101f4d:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0101f50	obj/kern/kernel.asm	/^f0101f50:	74 19                	je     f0101f6b <mem_init+0xf59>$/;"	l
f0101f52	obj/kern/kernel.asm	/^f0101f52:	68 80 5d 10 f0       	push   $0xf0105d80$/;"	l
f0101f57	obj/kern/kernel.asm	/^f0101f57:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101f5c	obj/kern/kernel.asm	/^f0101f5c:	68 78 04 00 00       	push   $0x478$/;"	l
f0101f61	obj/kern/kernel.asm	/^f0101f61:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101f66	obj/kern/kernel.asm	/^f0101f66:	e8 d5 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f6b	obj/kern/kernel.asm	/^f0101f6b:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101f70	obj/kern/kernel.asm	/^f0101f70:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101f73	obj/kern/kernel.asm	/^f0101f73:	e8 63 eb ff ff       	call   f0100adb <check_va2pa>$/;"	l
f0101f78	obj/kern/kernel.asm	/^f0101f78:	89 f2                	mov    %esi,%edx$/;"	l
f0101f7a	obj/kern/kernel.asm	/^f0101f7a:	2b 15 10 0f 24 f0    	sub    0xf0240f10,%edx$/;"	l
f0101f80	obj/kern/kernel.asm	/^f0101f80:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101f83	obj/kern/kernel.asm	/^f0101f83:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101f86	obj/kern/kernel.asm	/^f0101f86:	39 d0                	cmp    %edx,%eax$/;"	l
f0101f88	obj/kern/kernel.asm	/^f0101f88:	74 19                	je     f0101fa3 <mem_init+0xf91>$/;"	l
f0101f8a	obj/kern/kernel.asm	/^f0101f8a:	68 2c 5d 10 f0       	push   $0xf0105d2c$/;"	l
f0101f8f	obj/kern/kernel.asm	/^f0101f8f:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101f94	obj/kern/kernel.asm	/^f0101f94:	68 79 04 00 00       	push   $0x479$/;"	l
f0101f99	obj/kern/kernel.asm	/^f0101f99:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101f9e	obj/kern/kernel.asm	/^f0101f9e:	e8 9d e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fa3	obj/kern/kernel.asm	/^f0101fa3:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101fa8	obj/kern/kernel.asm	/^f0101fa8:	74 19                	je     f0101fc3 <mem_init+0xfb1>$/;"	l
f0101faa	obj/kern/kernel.asm	/^f0101faa:	68 74 60 10 f0       	push   $0xf0106074$/;"	l
f0101faf	obj/kern/kernel.asm	/^f0101faf:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101fb4	obj/kern/kernel.asm	/^f0101fb4:	68 7a 04 00 00       	push   $0x47a$/;"	l
f0101fb9	obj/kern/kernel.asm	/^f0101fb9:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101fbe	obj/kern/kernel.asm	/^f0101fbe:	e8 7d e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fc3	obj/kern/kernel.asm	/^f0101fc3:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0101fc8	obj/kern/kernel.asm	/^f0101fc8:	74 19                	je     f0101fe3 <mem_init+0xfd1>$/;"	l
f0101fca	obj/kern/kernel.asm	/^f0101fca:	68 ce 60 10 f0       	push   $0xf01060ce$/;"	l
f0101fcf	obj/kern/kernel.asm	/^f0101fcf:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0101fd4	obj/kern/kernel.asm	/^f0101fd4:	68 7b 04 00 00       	push   $0x47b$/;"	l
f0101fd9	obj/kern/kernel.asm	/^f0101fd9:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0101fde	obj/kern/kernel.asm	/^f0101fde:	e8 5d e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fe3	obj/kern/kernel.asm	/^f0101fe3:	6a 00                	push   $0x0$/;"	l
f0101fe5	obj/kern/kernel.asm	/^f0101fe5:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101fea	obj/kern/kernel.asm	/^f0101fea:	56                   	push   %esi$/;"	l
f0101feb	obj/kern/kernel.asm	/^f0101feb:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101fee	obj/kern/kernel.asm	/^f0101fee:	e8 52 ef ff ff       	call   f0100f45 <page_insert>$/;"	l
f0101ff3	obj/kern/kernel.asm	/^f0101ff3:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0101ff6	obj/kern/kernel.asm	/^f0101ff6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ff9	obj/kern/kernel.asm	/^f0101ff9:	85 c0                	test   %eax,%eax$/;"	l
f0101ffb	obj/kern/kernel.asm	/^f0101ffb:	74 19                	je     f0102016 <mem_init+0x1004>$/;"	l
f0101ffd	obj/kern/kernel.asm	/^f0101ffd:	68 a4 5d 10 f0       	push   $0xf0105da4$/;"	l
f0102002	obj/kern/kernel.asm	/^f0102002:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0102007	obj/kern/kernel.asm	/^f0102007:	68 7e 04 00 00       	push   $0x47e$/;"	l
f010200c	obj/kern/kernel.asm	/^f010200c:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0102011	obj/kern/kernel.asm	/^f0102011:	e8 2a e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102016	obj/kern/kernel.asm	/^f0102016:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f010201b	obj/kern/kernel.asm	/^f010201b:	75 19                	jne    f0102036 <mem_init+0x1024>$/;"	l
f010201d	obj/kern/kernel.asm	/^f010201d:	68 df 60 10 f0       	push   $0xf01060df$/;"	l
f0102022	obj/kern/kernel.asm	/^f0102022:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0102027	obj/kern/kernel.asm	/^f0102027:	68 7f 04 00 00       	push   $0x47f$/;"	l
f010202c	obj/kern/kernel.asm	/^f010202c:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0102031	obj/kern/kernel.asm	/^f0102031:	e8 0a e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102036	obj/kern/kernel.asm	/^f0102036:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f0102039	obj/kern/kernel.asm	/^f0102039:	74 19                	je     f0102054 <mem_init+0x1042>$/;"	l
f010203b	obj/kern/kernel.asm	/^f010203b:	68 eb 60 10 f0       	push   $0xf01060eb$/;"	l
f0102040	obj/kern/kernel.asm	/^f0102040:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0102045	obj/kern/kernel.asm	/^f0102045:	68 80 04 00 00       	push   $0x480$/;"	l
f010204a	obj/kern/kernel.asm	/^f010204a:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f010204f	obj/kern/kernel.asm	/^f010204f:	e8 ec df ff ff       	call   f0100040 <_panic>$/;"	l
f0102054	obj/kern/kernel.asm	/^f0102054:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102057	obj/kern/kernel.asm	/^f0102057:	68 00 10 00 00       	push   $0x1000$/;"	l
f010205c	obj/kern/kernel.asm	/^f010205c:	ff 35 0c 0f 24 f0    	pushl  0xf0240f0c$/;"	l
f0102062	obj/kern/kernel.asm	/^f0102062:	e8 96 ee ff ff       	call   f0100efd <page_remove>$/;"	l
f0102067	obj/kern/kernel.asm	/^f0102067:	a1 0c 0f 24 f0       	mov    0xf0240f0c,%eax$/;"	l
f010206c	obj/kern/kernel.asm	/^f010206c:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010206f	obj/kern/kernel.asm	/^f010206f:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102074	obj/kern/kernel.asm	/^f0102074:	e8 62 ea ff ff       	call   f0100adb <check_va2pa>$/;"	l
f0102079	obj/kern/kernel.asm	/^f0102079:	83 c4 10             	add    $0x10,%esp$/;"	l
f010207c	obj/kern/kernel.asm	/^f010207c:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010207f	obj/kern/kernel.asm	/^f010207f:	74 19                	je     f010209a <mem_init+0x1088>$/;"	l
f0102081	obj/kern/kernel.asm	/^f0102081:	68 80 5d 10 f0       	push   $0xf0105d80$/;"	l
f0102086	obj/kern/kernel.asm	/^f0102086:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f010208b	obj/kern/kernel.asm	/^f010208b:	68 84 04 00 00       	push   $0x484$/;"	l
f0102090	obj/kern/kernel.asm	/^f0102090:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0102095	obj/kern/kernel.asm	/^f0102095:	e8 a6 df ff ff       	call   f0100040 <_panic>$/;"	l
f010209a	obj/kern/kernel.asm	/^f010209a:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010209f	obj/kern/kernel.asm	/^f010209f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01020a2	obj/kern/kernel.asm	/^f01020a2:	e8 34 ea ff ff       	call   f0100adb <check_va2pa>$/;"	l
f01020a7	obj/kern/kernel.asm	/^f01020a7:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01020aa	obj/kern/kernel.asm	/^f01020aa:	74 19                	je     f01020c5 <mem_init+0x10b3>$/;"	l
f01020ac	obj/kern/kernel.asm	/^f01020ac:	68 dc 5d 10 f0       	push   $0xf0105ddc$/;"	l
f01020b1	obj/kern/kernel.asm	/^f01020b1:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f01020b6	obj/kern/kernel.asm	/^f01020b6:	68 85 04 00 00       	push   $0x485$/;"	l
f01020bb	obj/kern/kernel.asm	/^f01020bb:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f01020c0	obj/kern/kernel.asm	/^f01020c0:	e8 7b df ff ff       	call   f0100040 <_panic>$/;"	l
f01020c5	obj/kern/kernel.asm	/^f01020c5:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f01020ca	obj/kern/kernel.asm	/^f01020ca:	74 19                	je     f01020e5 <mem_init+0x10d3>$/;"	l
f01020cc	obj/kern/kernel.asm	/^f01020cc:	68 00 61 10 f0       	push   $0xf0106100$/;"	l
f01020d1	obj/kern/kernel.asm	/^f01020d1:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f01020d6	obj/kern/kernel.asm	/^f01020d6:	68 86 04 00 00       	push   $0x486$/;"	l
f01020db	obj/kern/kernel.asm	/^f01020db:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f01020e0	obj/kern/kernel.asm	/^f01020e0:	e8 5b df ff ff       	call   f0100040 <_panic>$/;"	l
f01020e5	obj/kern/kernel.asm	/^f01020e5:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f01020ea	obj/kern/kernel.asm	/^f01020ea:	74 19                	je     f0102105 <mem_init+0x10f3>$/;"	l
f01020ec	obj/kern/kernel.asm	/^f01020ec:	68 ce 60 10 f0       	push   $0xf01060ce$/;"	l
f01020f1	obj/kern/kernel.asm	/^f01020f1:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f01020f6	obj/kern/kernel.asm	/^f01020f6:	68 87 04 00 00       	push   $0x487$/;"	l
f01020fb	obj/kern/kernel.asm	/^f01020fb:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0102100	obj/kern/kernel.asm	/^f0102100:	e8 3b df ff ff       	call   f0100040 <_panic>$/;"	l
f0102105	obj/kern/kernel.asm	/^f0102105:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102108	obj/kern/kernel.asm	/^f0102108:	6a 00                	push   $0x0$/;"	l
f010210a	obj/kern/kernel.asm	/^f010210a:	e8 90 eb ff ff       	call   f0100c9f <page_alloc>$/;"	l
f010210f	obj/kern/kernel.asm	/^f010210f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102112	obj/kern/kernel.asm	/^f0102112:	39 c6                	cmp    %eax,%esi$/;"	l
f0102114	obj/kern/kernel.asm	/^f0102114:	75 04                	jne    f010211a <mem_init+0x1108>$/;"	l
f0102116	obj/kern/kernel.asm	/^f0102116:	85 c0                	test   %eax,%eax$/;"	l
f0102118	obj/kern/kernel.asm	/^f0102118:	75 19                	jne    f0102133 <mem_init+0x1121>$/;"	l
f010211a	obj/kern/kernel.asm	/^f010211a:	68 04 5e 10 f0       	push   $0xf0105e04$/;"	l
f010211f	obj/kern/kernel.asm	/^f010211f:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0102124	obj/kern/kernel.asm	/^f0102124:	68 8a 04 00 00       	push   $0x48a$/;"	l
f0102129	obj/kern/kernel.asm	/^f0102129:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f010212e	obj/kern/kernel.asm	/^f010212e:	e8 0d df ff ff       	call   f0100040 <_panic>$/;"	l
f0102133	obj/kern/kernel.asm	/^f0102133:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102136	obj/kern/kernel.asm	/^f0102136:	6a 00                	push   $0x0$/;"	l
f0102138	obj/kern/kernel.asm	/^f0102138:	e8 62 eb ff ff       	call   f0100c9f <page_alloc>$/;"	l
f010213d	obj/kern/kernel.asm	/^f010213d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102140	obj/kern/kernel.asm	/^f0102140:	85 c0                	test   %eax,%eax$/;"	l
f0102142	obj/kern/kernel.asm	/^f0102142:	74 19                	je     f010215d <mem_init+0x114b>$/;"	l
f0102144	obj/kern/kernel.asm	/^f0102144:	68 22 60 10 f0       	push   $0xf0106022$/;"	l
f0102149	obj/kern/kernel.asm	/^f0102149:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f010214e	obj/kern/kernel.asm	/^f010214e:	68 8d 04 00 00       	push   $0x48d$/;"	l
f0102153	obj/kern/kernel.asm	/^f0102153:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0102158	obj/kern/kernel.asm	/^f0102158:	e8 e3 de ff ff       	call   f0100040 <_panic>$/;"	l
f010215d	obj/kern/kernel.asm	/^f010215d:	8b 0d 0c 0f 24 f0    	mov    0xf0240f0c,%ecx$/;"	l
f0102163	obj/kern/kernel.asm	/^f0102163:	8b 11                	mov    (%ecx),%edx$/;"	l
f0102165	obj/kern/kernel.asm	/^f0102165:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f010216b	obj/kern/kernel.asm	/^f010216b:	89 d8                	mov    %ebx,%eax$/;"	l
f010216d	obj/kern/kernel.asm	/^f010216d:	2b 05 10 0f 24 f0    	sub    0xf0240f10,%eax$/;"	l
f0102173	obj/kern/kernel.asm	/^f0102173:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102176	obj/kern/kernel.asm	/^f0102176:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102179	obj/kern/kernel.asm	/^f0102179:	39 c2                	cmp    %eax,%edx$/;"	l
f010217b	obj/kern/kernel.asm	/^f010217b:	74 19                	je     f0102196 <mem_init+0x1184>$/;"	l
f010217d	obj/kern/kernel.asm	/^f010217d:	68 a8 5a 10 f0       	push   $0xf0105aa8$/;"	l
f0102182	obj/kern/kernel.asm	/^f0102182:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0102187	obj/kern/kernel.asm	/^f0102187:	68 90 04 00 00       	push   $0x490$/;"	l
f010218c	obj/kern/kernel.asm	/^f010218c:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0102191	obj/kern/kernel.asm	/^f0102191:	e8 aa de ff ff       	call   f0100040 <_panic>$/;"	l
f0102196	obj/kern/kernel.asm	/^f0102196:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f010219c	obj/kern/kernel.asm	/^f010219c:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f01021a1	obj/kern/kernel.asm	/^f01021a1:	74 19                	je     f01021bc <mem_init+0x11aa>$/;"	l
f01021a3	obj/kern/kernel.asm	/^f01021a3:	68 85 60 10 f0       	push   $0xf0106085$/;"	l
f01021a8	obj/kern/kernel.asm	/^f01021a8:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f01021ad	obj/kern/kernel.asm	/^f01021ad:	68 92 04 00 00       	push   $0x492$/;"	l
f01021b2	obj/kern/kernel.asm	/^f01021b2:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f01021b7	obj/kern/kernel.asm	/^f01021b7:	e8 84 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021bc	obj/kern/kernel.asm	/^f01021bc:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f01021c2	obj/kern/kernel.asm	/^f01021c2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01021c5	obj/kern/kernel.asm	/^f01021c5:	53                   	push   %ebx$/;"	l
f01021c6	obj/kern/kernel.asm	/^f01021c6:	e8 46 eb ff ff       	call   f0100d11 <page_free>$/;"	l
f01021cb	obj/kern/kernel.asm	/^f01021cb:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01021ce	obj/kern/kernel.asm	/^f01021ce:	6a 01                	push   $0x1$/;"	l
f01021d0	obj/kern/kernel.asm	/^f01021d0:	68 00 10 40 00       	push   $0x401000$/;"	l
f01021d5	obj/kern/kernel.asm	/^f01021d5:	ff 35 0c 0f 24 f0    	pushl  0xf0240f0c$/;"	l
f01021db	obj/kern/kernel.asm	/^f01021db:	e8 ac eb ff ff       	call   f0100d8c <pgdir_walk>$/;"	l
f01021e0	obj/kern/kernel.asm	/^f01021e0:	89 c1                	mov    %eax,%ecx$/;"	l
f01021e2	obj/kern/kernel.asm	/^f01021e2:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01021e5	obj/kern/kernel.asm	/^f01021e5:	a1 0c 0f 24 f0       	mov    0xf0240f0c,%eax$/;"	l
f01021ea	obj/kern/kernel.asm	/^f01021ea:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01021ed	obj/kern/kernel.asm	/^f01021ed:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f01021f0	obj/kern/kernel.asm	/^f01021f0:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01021f5	obj/kern/kernel.asm	/^f01021f5:	89 c2                	mov    %eax,%edx$/;"	l
f01021f7	obj/kern/kernel.asm	/^f01021f7:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01021fa	obj/kern/kernel.asm	/^f01021fa:	83 c4 10             	add    $0x10,%esp$/;"	l
f01021fd	obj/kern/kernel.asm	/^f01021fd:	3b 15 08 0f 24 f0    	cmp    0xf0240f08,%edx$/;"	l
f0102203	obj/kern/kernel.asm	/^f0102203:	72 15                	jb     f010221a <mem_init+0x1208>$/;"	l
f0102205	obj/kern/kernel.asm	/^f0102205:	50                   	push   %eax$/;"	l
f0102206	obj/kern/kernel.asm	/^f0102206:	68 c4 52 10 f0       	push   $0xf01052c4$/;"	l
f010220b	obj/kern/kernel.asm	/^f010220b:	68 99 04 00 00       	push   $0x499$/;"	l
f0102210	obj/kern/kernel.asm	/^f0102210:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0102215	obj/kern/kernel.asm	/^f0102215:	e8 26 de ff ff       	call   f0100040 <_panic>$/;"	l
f010221a	obj/kern/kernel.asm	/^f010221a:	2d fc ff ff 0f       	sub    $0xffffffc,%eax$/;"	l
f010221f	obj/kern/kernel.asm	/^f010221f:	39 c1                	cmp    %eax,%ecx$/;"	l
f0102221	obj/kern/kernel.asm	/^f0102221:	74 19                	je     f010223c <mem_init+0x122a>$/;"	l
f0102223	obj/kern/kernel.asm	/^f0102223:	68 11 61 10 f0       	push   $0xf0106111$/;"	l
f0102228	obj/kern/kernel.asm	/^f0102228:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f010222d	obj/kern/kernel.asm	/^f010222d:	68 9a 04 00 00       	push   $0x49a$/;"	l
f0102232	obj/kern/kernel.asm	/^f0102232:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f0102237	obj/kern/kernel.asm	/^f0102237:	e8 04 de ff ff       	call   f0100040 <_panic>$/;"	l
f010223c	obj/kern/kernel.asm	/^f010223c:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010223f	obj/kern/kernel.asm	/^f010223f:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
f0102246	obj/kern/kernel.asm	/^f0102246:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f010224c	obj/kern/kernel.asm	/^f010224c:	89 d8                	mov    %ebx,%eax$/;"	l
f010224e	obj/kern/kernel.asm	/^f010224e:	e8 51 e8 ff ff       	call   f0100aa4 <page2kva>$/;"	l
f0102253	obj/kern/kernel.asm	/^f0102253:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102256	obj/kern/kernel.asm	/^f0102256:	68 00 10 00 00       	push   $0x1000$/;"	l
f010225b	obj/kern/kernel.asm	/^f010225b:	68 ff 00 00 00       	push   $0xff$/;"	l
f0102260	obj/kern/kernel.asm	/^f0102260:	50                   	push   %eax$/;"	l
f0102261	obj/kern/kernel.asm	/^f0102261:	e8 c5 23 00 00       	call   f010462b <memset>$/;"	l
f0102266	obj/kern/kernel.asm	/^f0102266:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102269	obj/kern/kernel.asm	/^f0102269:	e8 a3 ea ff ff       	call   f0100d11 <page_free>$/;"	l
f010226e	obj/kern/kernel.asm	/^f010226e:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102271	obj/kern/kernel.asm	/^f0102271:	6a 01                	push   $0x1$/;"	l
f0102273	obj/kern/kernel.asm	/^f0102273:	6a 00                	push   $0x0$/;"	l
f0102275	obj/kern/kernel.asm	/^f0102275:	ff 35 0c 0f 24 f0    	pushl  0xf0240f0c$/;"	l
f010227b	obj/kern/kernel.asm	/^f010227b:	e8 0c eb ff ff       	call   f0100d8c <pgdir_walk>$/;"	l
f0102280	obj/kern/kernel.asm	/^f0102280:	89 d8                	mov    %ebx,%eax$/;"	l
f0102282	obj/kern/kernel.asm	/^f0102282:	e8 1d e8 ff ff       	call   f0100aa4 <page2kva>$/;"	l
f0102287	obj/kern/kernel.asm	/^f0102287:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010228a	obj/kern/kernel.asm	/^f010228a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010228d	obj/kern/kernel.asm	/^f010228d:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f0102290	obj/kern/kernel.asm	/^f0102290:	f6 04 90 01          	testb  $0x1,(%eax,%edx,4)$/;"	l
f0102294	obj/kern/kernel.asm	/^f0102294:	74 19                	je     f01022af <mem_init+0x129d>$/;"	l
f0102296	obj/kern/kernel.asm	/^f0102296:	68 29 61 10 f0       	push   $0xf0106129$/;"	l
f010229b	obj/kern/kernel.asm	/^f010229b:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f01022a0	obj/kern/kernel.asm	/^f01022a0:	68 a4 04 00 00       	push   $0x4a4$/;"	l
f01022a5	obj/kern/kernel.asm	/^f01022a5:	68 6b 5e 10 f0       	push   $0xf0105e6b$/;"	l
f01022aa	obj/kern/kernel.asm	/^f01022aa:	e8 91 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022af	obj/kern/kernel.asm	/^f01022af:	83 c2 01             	add    $0x1,%edx$/;"	l
f01022b2	obj/kern/kernel.asm	/^f01022b2:	81 fa 00 04 00 00    	cmp    $0x400,%edx$/;"	l
f01022b8	obj/kern/kernel.asm	/^f01022b8:	75 d6                	jne    f0102290 <mem_init+0x127e>$/;"	l
f01022ba	obj/kern/kernel.asm	/^f01022ba:	a1 0c 0f 24 f0       	mov    0xf0240f0c,%eax$/;"	l
f01022bf	obj/kern/kernel.asm	/^f01022bf:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01022c5	obj/kern/kernel.asm	/^f01022c5:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f01022cb	obj/kern/kernel.asm	/^f01022cb:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01022ce	obj/kern/kernel.asm	/^f01022ce:	a3 40 02 24 f0       	mov    %eax,0xf0240240$/;"	l
f01022d3	obj/kern/kernel.asm	/^f01022d3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01022d6	obj/kern/kernel.asm	/^f01022d6:	53                   	push   %ebx$/;"	l
f01022d7	obj/kern/kernel.asm	/^f01022d7:	e8 35 ea ff ff       	call   f0100d11 <page_free>$/;"	l
f01022dc	obj/kern/kernel.asm	/^f01022dc:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01022df	obj/kern/kernel.asm	/^f01022df:	e8 2d ea ff ff       	call   f0100d11 <page_free>$/;"	l
f01022e4	obj/kern/kernel.asm	/^f01022e4:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01022e7	obj/kern/kernel.asm	/^f01022e7:	e8 25 ea ff ff       	call   f0100d11 <page_free>$/;"	l
f01022ec	obj/kern/kernel.asm	/^f01022ec:	83 c4 08             	add    $0x8,%esp$/;"	l
f01022ef	obj/kern/kernel.asm	/^f01022ef:	68 01 10 00 00       	push   $0x1001$/;"	l
f01022f4	obj/kern/kernel.asm	/^f01022f4:	6a 00                	push   $0x0$/;"	l
f01022f6	obj/kern/kernel.asm	/^f01022f6:	e8 fd ec ff ff       	call   f0100ff8 <mmio_map_region>$/;"	l
f01022fb	obj/kern/kernel.asm	/^f01022fb <user_mem_check>:$/;"	l
f01022fb	obj/kern/kernel.asm	/^f01022fb:	55                   	push   %ebp$/;"	l
f01022fc	obj/kern/kernel.asm	/^f01022fc:	89 e5                	mov    %esp,%ebp$/;"	l
f01022fe	obj/kern/kernel.asm	/^f01022fe:	57                   	push   %edi$/;"	l
f01022ff	obj/kern/kernel.asm	/^f01022ff:	56                   	push   %esi$/;"	l
f0102300	obj/kern/kernel.asm	/^f0102300:	53                   	push   %ebx$/;"	l
f0102301	obj/kern/kernel.asm	/^f0102301:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0102304	obj/kern/kernel.asm	/^f0102304:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0102307	obj/kern/kernel.asm	/^f0102307:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f010230d	obj/kern/kernel.asm	/^f010230d:	77 53                	ja     f0102362 <user_mem_check+0x67>$/;"	l
f010230f	obj/kern/kernel.asm	/^f010230f:	89 d8                	mov    %ebx,%eax$/;"	l
f0102311	obj/kern/kernel.asm	/^f0102311:	03 45 10             	add    0x10(%ebp),%eax$/;"	l
f0102314	obj/kern/kernel.asm	/^f0102314:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102317	obj/kern/kernel.asm	/^f0102317:	3d ff ff 7f ef       	cmp    $0xef7fffff,%eax$/;"	l
f010231c	obj/kern/kernel.asm	/^f010231c:	77 51                	ja     f010236f <user_mem_check+0x74>$/;"	l
f010231e	obj/kern/kernel.asm	/^f010231e:	c6 45 d3 01          	movb   $0x1,-0x2d(%ebp)$/;"	l
f0102322	obj/kern/kernel.asm	/^f0102322:	8d 7d e4             	lea    -0x1c(%ebp),%edi$/;"	l
f0102325	obj/kern/kernel.asm	/^f0102325:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f0102328	obj/kern/kernel.asm	/^f0102328:	83 ce 01             	or     $0x1,%esi$/;"	l
f010232b	obj/kern/kernel.asm	/^f010232b:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f010232e	obj/kern/kernel.asm	/^f010232e:	0f 86 82 00 00 00    	jbe    f01023b6 <user_mem_check+0xbb>$/;"	l
f0102334	obj/kern/kernel.asm	/^f0102334:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102337	obj/kern/kernel.asm	/^f0102337:	57                   	push   %edi$/;"	l
f0102338	obj/kern/kernel.asm	/^f0102338:	53                   	push   %ebx$/;"	l
f0102339	obj/kern/kernel.asm	/^f0102339:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010233c	obj/kern/kernel.asm	/^f010233c:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f010233f	obj/kern/kernel.asm	/^f010233f:	e8 1f eb ff ff       	call   f0100e63 <page_lookup>$/;"	l
f0102344	obj/kern/kernel.asm	/^f0102344:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102347	obj/kern/kernel.asm	/^f0102347:	85 c0                	test   %eax,%eax$/;"	l
f0102349	obj/kern/kernel.asm	/^f0102349:	74 35                	je     f0102380 <user_mem_check+0x85>$/;"	l
f010234b	obj/kern/kernel.asm	/^f010234b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010234e	obj/kern/kernel.asm	/^f010234e:	89 f1                	mov    %esi,%ecx$/;"	l
f0102350	obj/kern/kernel.asm	/^f0102350:	23 08                	and    (%eax),%ecx$/;"	l
f0102352	obj/kern/kernel.asm	/^f0102352:	39 ce                	cmp    %ecx,%esi$/;"	l
f0102354	obj/kern/kernel.asm	/^f0102354:	75 45                	jne    f010239b <user_mem_check+0xa0>$/;"	l
f0102356	obj/kern/kernel.asm	/^f0102356:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010235c	obj/kern/kernel.asm	/^f010235c:	c6 45 d3 00          	movb   $0x0,-0x2d(%ebp)$/;"	l
f0102360	obj/kern/kernel.asm	/^f0102360:	eb c9                	jmp    f010232b <user_mem_check+0x30>$/;"	l
f0102362	obj/kern/kernel.asm	/^f0102362:	89 1d 3c 02 24 f0    	mov    %ebx,0xf024023c$/;"	l
f0102368	obj/kern/kernel.asm	/^f0102368:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f010236d	obj/kern/kernel.asm	/^f010236d:	eb 4c                	jmp    f01023bb <user_mem_check+0xc0>$/;"	l
f010236f	obj/kern/kernel.asm	/^f010236f:	c7 05 3c 02 24 f0 00 	movl   $0xef800000,0xf024023c$/;"	l
f0102376	obj/kern/kernel.asm	/^f0102376:	00 80 ef $/;"	l
f0102379	obj/kern/kernel.asm	/^f0102379:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f010237e	obj/kern/kernel.asm	/^f010237e:	eb 3b                	jmp    f01023bb <user_mem_check+0xc0>$/;"	l
f0102380	obj/kern/kernel.asm	/^f0102380:	89 d8                	mov    %ebx,%eax$/;"	l
f0102382	obj/kern/kernel.asm	/^f0102382:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102387	obj/kern/kernel.asm	/^f0102387:	80 7d d3 00          	cmpb   $0x0,-0x2d(%ebp)$/;"	l
f010238b	obj/kern/kernel.asm	/^f010238b:	0f 44 d8             	cmove  %eax,%ebx$/;"	l
f010238e	obj/kern/kernel.asm	/^f010238e:	89 1d 3c 02 24 f0    	mov    %ebx,0xf024023c$/;"	l
f0102394	obj/kern/kernel.asm	/^f0102394:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0102399	obj/kern/kernel.asm	/^f0102399:	eb 20                	jmp    f01023bb <user_mem_check+0xc0>$/;"	l
f010239b	obj/kern/kernel.asm	/^f010239b:	89 d8                	mov    %ebx,%eax$/;"	l
f010239d	obj/kern/kernel.asm	/^f010239d:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01023a2	obj/kern/kernel.asm	/^f01023a2:	80 7d d3 00          	cmpb   $0x0,-0x2d(%ebp)$/;"	l
f01023a6	obj/kern/kernel.asm	/^f01023a6:	0f 44 d8             	cmove  %eax,%ebx$/;"	l
f01023a9	obj/kern/kernel.asm	/^f01023a9:	89 1d 3c 02 24 f0    	mov    %ebx,0xf024023c$/;"	l
f01023af	obj/kern/kernel.asm	/^f01023af:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f01023b4	obj/kern/kernel.asm	/^f01023b4:	eb 05                	jmp    f01023bb <user_mem_check+0xc0>$/;"	l
f01023b6	obj/kern/kernel.asm	/^f01023b6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01023bb	obj/kern/kernel.asm	/^f01023bb:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01023be	obj/kern/kernel.asm	/^f01023be:	5b                   	pop    %ebx$/;"	l
f01023bf	obj/kern/kernel.asm	/^f01023bf:	5e                   	pop    %esi$/;"	l
f01023c0	obj/kern/kernel.asm	/^f01023c0:	5f                   	pop    %edi$/;"	l
f01023c1	obj/kern/kernel.asm	/^f01023c1:	5d                   	pop    %ebp$/;"	l
f01023c2	obj/kern/kernel.asm	/^f01023c2:	c3                   	ret    $/;"	l
f01023c3	obj/kern/kernel.asm	/^f01023c3 <user_mem_assert>:$/;"	l
f01023c3	obj/kern/kernel.asm	/^f01023c3:	55                   	push   %ebp$/;"	l
f01023c4	obj/kern/kernel.asm	/^f01023c4:	89 e5                	mov    %esp,%ebp$/;"	l
f01023c6	obj/kern/kernel.asm	/^f01023c6:	53                   	push   %ebx$/;"	l
f01023c7	obj/kern/kernel.asm	/^f01023c7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01023ca	obj/kern/kernel.asm	/^f01023ca:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01023cd	obj/kern/kernel.asm	/^f01023cd:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01023d0	obj/kern/kernel.asm	/^f01023d0:	83 c8 04             	or     $0x4,%eax$/;"	l
f01023d3	obj/kern/kernel.asm	/^f01023d3:	50                   	push   %eax$/;"	l
f01023d4	obj/kern/kernel.asm	/^f01023d4:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01023d7	obj/kern/kernel.asm	/^f01023d7:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01023da	obj/kern/kernel.asm	/^f01023da:	53                   	push   %ebx$/;"	l
f01023db	obj/kern/kernel.asm	/^f01023db:	e8 1b ff ff ff       	call   f01022fb <user_mem_check>$/;"	l
f01023e0	obj/kern/kernel.asm	/^f01023e0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01023e3	obj/kern/kernel.asm	/^f01023e3:	85 c0                	test   %eax,%eax$/;"	l
f01023e5	obj/kern/kernel.asm	/^f01023e5:	78 05                	js     f01023ec <user_mem_assert+0x29>$/;"	l
f01023e7	obj/kern/kernel.asm	/^f01023e7:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01023ea	obj/kern/kernel.asm	/^f01023ea:	c9                   	leave  $/;"	l
f01023eb	obj/kern/kernel.asm	/^f01023eb:	c3                   	ret    $/;"	l
f01023ec	obj/kern/kernel.asm	/^f01023ec:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01023ef	obj/kern/kernel.asm	/^f01023ef:	ff 35 3c 02 24 f0    	pushl  0xf024023c$/;"	l
f01023f5	obj/kern/kernel.asm	/^f01023f5:	ff 73 48             	pushl  0x48(%ebx)$/;"	l
f01023f8	obj/kern/kernel.asm	/^f01023f8:	68 28 5e 10 f0       	push   $0xf0105e28$/;"	l
f01023fd	obj/kern/kernel.asm	/^f01023fd:	e8 83 09 00 00       	call   f0102d85 <cprintf>$/;"	l
f0102402	obj/kern/kernel.asm	/^f0102402:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102405	obj/kern/kernel.asm	/^f0102405:	e8 84 06 00 00       	call   f0102a8e <env_destroy>$/;"	l
f010240a	obj/kern/kernel.asm	/^f010240a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010240d	obj/kern/kernel.asm	/^f010240d:	eb d8                	jmp    f01023e7 <user_mem_assert+0x24>$/;"	l
f010240f	obj/kern/kernel.asm	/^f010240f <region_alloc>:$/;"	l
f010240f	obj/kern/kernel.asm	/^f010240f:	55                   	push   %ebp$/;"	l
f0102410	obj/kern/kernel.asm	/^f0102410:	89 e5                	mov    %esp,%ebp$/;"	l
f0102412	obj/kern/kernel.asm	/^f0102412:	57                   	push   %edi$/;"	l
f0102413	obj/kern/kernel.asm	/^f0102413:	56                   	push   %esi$/;"	l
f0102414	obj/kern/kernel.asm	/^f0102414:	53                   	push   %ebx$/;"	l
f0102415	obj/kern/kernel.asm	/^f0102415:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102418	obj/kern/kernel.asm	/^f0102418:	89 c7                	mov    %eax,%edi$/;"	l
f010241a	obj/kern/kernel.asm	/^f010241a:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102420	obj/kern/kernel.asm	/^f0102420:	89 d3                	mov    %edx,%ebx$/;"	l
f0102422	obj/kern/kernel.asm	/^f0102422:	8d b4 0a ff 0f 00 00 	lea    0xfff(%edx,%ecx,1),%esi$/;"	l
f0102429	obj/kern/kernel.asm	/^f0102429:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f010242f	obj/kern/kernel.asm	/^f010242f:	39 f3                	cmp    %esi,%ebx$/;"	l
f0102431	obj/kern/kernel.asm	/^f0102431:	73 5a                	jae    f010248d <region_alloc+0x7e>$/;"	l
f0102433	obj/kern/kernel.asm	/^f0102433:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102436	obj/kern/kernel.asm	/^f0102436:	6a 00                	push   $0x0$/;"	l
f0102438	obj/kern/kernel.asm	/^f0102438:	e8 62 e8 ff ff       	call   f0100c9f <page_alloc>$/;"	l
f010243d	obj/kern/kernel.asm	/^f010243d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102440	obj/kern/kernel.asm	/^f0102440:	85 c0                	test   %eax,%eax$/;"	l
f0102442	obj/kern/kernel.asm	/^f0102442:	74 1b                	je     f010245f <region_alloc+0x50>$/;"	l
f0102444	obj/kern/kernel.asm	/^f0102444:	6a 06                	push   $0x6$/;"	l
f0102446	obj/kern/kernel.asm	/^f0102446:	53                   	push   %ebx$/;"	l
f0102447	obj/kern/kernel.asm	/^f0102447:	50                   	push   %eax$/;"	l
f0102448	obj/kern/kernel.asm	/^f0102448:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f010244b	obj/kern/kernel.asm	/^f010244b:	e8 f5 ea ff ff       	call   f0100f45 <page_insert>$/;"	l
f0102450	obj/kern/kernel.asm	/^f0102450:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102453	obj/kern/kernel.asm	/^f0102453:	85 c0                	test   %eax,%eax$/;"	l
f0102455	obj/kern/kernel.asm	/^f0102455:	78 1f                	js     f0102476 <region_alloc+0x67>$/;"	l
f0102457	obj/kern/kernel.asm	/^f0102457:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010245d	obj/kern/kernel.asm	/^f010245d:	eb d0                	jmp    f010242f <region_alloc+0x20>$/;"	l
f010245f	obj/kern/kernel.asm	/^f010245f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102462	obj/kern/kernel.asm	/^f0102462:	68 40 61 10 f0       	push   $0xf0106140$/;"	l
f0102467	obj/kern/kernel.asm	/^f0102467:	68 30 01 00 00       	push   $0x130$/;"	l
f010246c	obj/kern/kernel.asm	/^f010246c:	68 18 62 10 f0       	push   $0xf0106218$/;"	l
f0102471	obj/kern/kernel.asm	/^f0102471:	e8 ca db ff ff       	call   f0100040 <_panic>$/;"	l
f0102476	obj/kern/kernel.asm	/^f0102476:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102479	obj/kern/kernel.asm	/^f0102479:	68 70 61 10 f0       	push   $0xf0106170$/;"	l
f010247e	obj/kern/kernel.asm	/^f010247e:	68 33 01 00 00       	push   $0x133$/;"	l
f0102483	obj/kern/kernel.asm	/^f0102483:	68 18 62 10 f0       	push   $0xf0106218$/;"	l
f0102488	obj/kern/kernel.asm	/^f0102488:	e8 b3 db ff ff       	call   f0100040 <_panic>$/;"	l
f010248d	obj/kern/kernel.asm	/^f010248d:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102490	obj/kern/kernel.asm	/^f0102490:	5b                   	pop    %ebx$/;"	l
f0102491	obj/kern/kernel.asm	/^f0102491:	5e                   	pop    %esi$/;"	l
f0102492	obj/kern/kernel.asm	/^f0102492:	5f                   	pop    %edi$/;"	l
f0102493	obj/kern/kernel.asm	/^f0102493:	5d                   	pop    %ebp$/;"	l
f0102494	obj/kern/kernel.asm	/^f0102494:	c3                   	ret    $/;"	l
f0102495	obj/kern/kernel.asm	/^f0102495 <envid2env>:$/;"	l
f0102495	obj/kern/kernel.asm	/^f0102495:	55                   	push   %ebp$/;"	l
f0102496	obj/kern/kernel.asm	/^f0102496:	89 e5                	mov    %esp,%ebp$/;"	l
f0102498	obj/kern/kernel.asm	/^f0102498:	56                   	push   %esi$/;"	l
f0102499	obj/kern/kernel.asm	/^f0102499:	53                   	push   %ebx$/;"	l
f010249a	obj/kern/kernel.asm	/^f010249a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010249d	obj/kern/kernel.asm	/^f010249d:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f01024a0	obj/kern/kernel.asm	/^f01024a0:	85 c0                	test   %eax,%eax$/;"	l
f01024a2	obj/kern/kernel.asm	/^f01024a2:	74 2e                	je     f01024d2 <envid2env+0x3d>$/;"	l
f01024a4	obj/kern/kernel.asm	/^f01024a4:	89 c3                	mov    %eax,%ebx$/;"	l
f01024a6	obj/kern/kernel.asm	/^f01024a6:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f01024ac	obj/kern/kernel.asm	/^f01024ac:	c1 e3 07             	shl    $0x7,%ebx$/;"	l
f01024af	obj/kern/kernel.asm	/^f01024af:	03 1d 48 02 24 f0    	add    0xf0240248,%ebx$/;"	l
f01024b5	obj/kern/kernel.asm	/^f01024b5:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f01024b9	obj/kern/kernel.asm	/^f01024b9:	74 31                	je     f01024ec <envid2env+0x57>$/;"	l
f01024bb	obj/kern/kernel.asm	/^f01024bb:	39 43 48             	cmp    %eax,0x48(%ebx)$/;"	l
f01024be	obj/kern/kernel.asm	/^f01024be:	75 2c                	jne    f01024ec <envid2env+0x57>$/;"	l
f01024c0	obj/kern/kernel.asm	/^f01024c0:	84 d2                	test   %dl,%dl$/;"	l
f01024c2	obj/kern/kernel.asm	/^f01024c2:	75 38                	jne    f01024fc <envid2env+0x67>$/;"	l
f01024c4	obj/kern/kernel.asm	/^f01024c4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01024c7	obj/kern/kernel.asm	/^f01024c7:	89 18                	mov    %ebx,(%eax)$/;"	l
f01024c9	obj/kern/kernel.asm	/^f01024c9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01024ce	obj/kern/kernel.asm	/^f01024ce:	5b                   	pop    %ebx$/;"	l
f01024cf	obj/kern/kernel.asm	/^f01024cf:	5e                   	pop    %esi$/;"	l
f01024d0	obj/kern/kernel.asm	/^f01024d0:	5d                   	pop    %ebp$/;"	l
f01024d1	obj/kern/kernel.asm	/^f01024d1:	c3                   	ret    $/;"	l
f01024d2	obj/kern/kernel.asm	/^f01024d2:	e8 78 27 00 00       	call   f0104c4f <cpunum>$/;"	l
f01024d7	obj/kern/kernel.asm	/^f01024d7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01024da	obj/kern/kernel.asm	/^f01024da:	8b 80 28 10 24 f0    	mov    -0xfdbefd8(%eax),%eax$/;"	l
f01024e0	obj/kern/kernel.asm	/^f01024e0:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01024e3	obj/kern/kernel.asm	/^f01024e3:	89 01                	mov    %eax,(%ecx)$/;"	l
f01024e5	obj/kern/kernel.asm	/^f01024e5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01024ea	obj/kern/kernel.asm	/^f01024ea:	eb e2                	jmp    f01024ce <envid2env+0x39>$/;"	l
f01024ec	obj/kern/kernel.asm	/^f01024ec:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01024ef	obj/kern/kernel.asm	/^f01024ef:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01024f5	obj/kern/kernel.asm	/^f01024f5:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01024fa	obj/kern/kernel.asm	/^f01024fa:	eb d2                	jmp    f01024ce <envid2env+0x39>$/;"	l
f01024fc	obj/kern/kernel.asm	/^f01024fc:	e8 4e 27 00 00       	call   f0104c4f <cpunum>$/;"	l
f0102501	obj/kern/kernel.asm	/^f0102501:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102504	obj/kern/kernel.asm	/^f0102504:	39 98 28 10 24 f0    	cmp    %ebx,-0xfdbefd8(%eax)$/;"	l
f010250a	obj/kern/kernel.asm	/^f010250a:	74 b8                	je     f01024c4 <envid2env+0x2f>$/;"	l
f010250c	obj/kern/kernel.asm	/^f010250c:	8b 73 4c             	mov    0x4c(%ebx),%esi$/;"	l
f010250f	obj/kern/kernel.asm	/^f010250f:	e8 3b 27 00 00       	call   f0104c4f <cpunum>$/;"	l
f0102514	obj/kern/kernel.asm	/^f0102514:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102517	obj/kern/kernel.asm	/^f0102517:	8b 80 28 10 24 f0    	mov    -0xfdbefd8(%eax),%eax$/;"	l
f010251d	obj/kern/kernel.asm	/^f010251d:	3b 70 48             	cmp    0x48(%eax),%esi$/;"	l
f0102520	obj/kern/kernel.asm	/^f0102520:	74 a2                	je     f01024c4 <envid2env+0x2f>$/;"	l
f0102522	obj/kern/kernel.asm	/^f0102522:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102525	obj/kern/kernel.asm	/^f0102525:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010252b	obj/kern/kernel.asm	/^f010252b:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0102530	obj/kern/kernel.asm	/^f0102530:	eb 9c                	jmp    f01024ce <envid2env+0x39>$/;"	l
f0102532	obj/kern/kernel.asm	/^f0102532 <env_init_percpu>:$/;"	l
f0102532	obj/kern/kernel.asm	/^f0102532:	55                   	push   %ebp$/;"	l
f0102533	obj/kern/kernel.asm	/^f0102533:	89 e5                	mov    %esp,%ebp$/;"	l
f0102535	obj/kern/kernel.asm	/^f0102535:	b8 00 f3 11 f0       	mov    $0xf011f300,%eax$/;"	l
f010253a	obj/kern/kernel.asm	/^f010253a:	0f 01 10             	lgdtl  (%eax)$/;"	l
f010253d	obj/kern/kernel.asm	/^f010253d:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f0102542	obj/kern/kernel.asm	/^f0102542:	8e e8                	mov    %eax,%gs$/;"	l
f0102544	obj/kern/kernel.asm	/^f0102544:	8e e0                	mov    %eax,%fs$/;"	l
f0102546	obj/kern/kernel.asm	/^f0102546:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f010254b	obj/kern/kernel.asm	/^f010254b:	8e c0                	mov    %eax,%es$/;"	l
f010254d	obj/kern/kernel.asm	/^f010254d:	8e d8                	mov    %eax,%ds$/;"	l
f010254f	obj/kern/kernel.asm	/^f010254f:	8e d0                	mov    %eax,%ss$/;"	l
f0102551	obj/kern/kernel.asm	/^f0102551:	ea 58 25 10 f0 08 00 	ljmp   $0x8,$0xf0102558$/;"	l
f0102558	obj/kern/kernel.asm	/^f0102558:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010255d	obj/kern/kernel.asm	/^f010255d:	0f 00 d0             	lldt   %ax$/;"	l
f0102560	obj/kern/kernel.asm	/^f0102560:	5d                   	pop    %ebp$/;"	l
f0102561	obj/kern/kernel.asm	/^f0102561:	c3                   	ret    $/;"	l
f0102562	obj/kern/kernel.asm	/^f0102562 <env_init>:$/;"	l
f0102562	obj/kern/kernel.asm	/^f0102562:	55                   	push   %ebp$/;"	l
f0102563	obj/kern/kernel.asm	/^f0102563:	89 e5                	mov    %esp,%ebp$/;"	l
f0102565	obj/kern/kernel.asm	/^f0102565:	8b 15 48 02 24 f0    	mov    0xf0240248,%edx$/;"	l
f010256b	obj/kern/kernel.asm	/^f010256b:	8d 82 80 00 00 00    	lea    0x80(%edx),%eax$/;"	l
f0102571	obj/kern/kernel.asm	/^f0102571:	81 c2 80 00 02 00    	add    $0x20080,%edx$/;"	l
f0102577	obj/kern/kernel.asm	/^f0102577:	89 40 c4             	mov    %eax,-0x3c(%eax)$/;"	l
f010257a	obj/kern/kernel.asm	/^f010257a:	c7 40 c8 00 00 00 00 	movl   $0x0,-0x38(%eax)$/;"	l
f0102581	obj/kern/kernel.asm	/^f0102581:	c7 40 d4 00 00 00 00 	movl   $0x0,-0x2c(%eax)$/;"	l
f0102588	obj/kern/kernel.asm	/^f0102588:	c7 40 fc 00 00 00 00 	movl   $0x0,-0x4(%eax)$/;"	l
f010258f	obj/kern/kernel.asm	/^f010258f:	83 e8 80             	sub    $0xffffff80,%eax$/;"	l
f0102592	obj/kern/kernel.asm	/^f0102592:	39 d0                	cmp    %edx,%eax$/;"	l
f0102594	obj/kern/kernel.asm	/^f0102594:	75 e1                	jne    f0102577 <env_init+0x15>$/;"	l
f0102596	obj/kern/kernel.asm	/^f0102596:	a1 48 02 24 f0       	mov    0xf0240248,%eax$/;"	l
f010259b	obj/kern/kernel.asm	/^f010259b:	a3 4c 02 24 f0       	mov    %eax,0xf024024c$/;"	l
f01025a0	obj/kern/kernel.asm	/^f01025a0:	c7 80 c4 ff 01 00 00 	movl   $0x0,0x1ffc4(%eax)$/;"	l
f01025a7	obj/kern/kernel.asm	/^f01025a7:	00 00 00 $/;"	l
f01025aa	obj/kern/kernel.asm	/^f01025aa:	e8 83 ff ff ff       	call   f0102532 <env_init_percpu>$/;"	l
f01025af	obj/kern/kernel.asm	/^f01025af:	5d                   	pop    %ebp$/;"	l
f01025b0	obj/kern/kernel.asm	/^f01025b0:	c3                   	ret    $/;"	l
f01025b1	obj/kern/kernel.asm	/^f01025b1 <env_alloc>:$/;"	l
f01025b1	obj/kern/kernel.asm	/^f01025b1:	55                   	push   %ebp$/;"	l
f01025b2	obj/kern/kernel.asm	/^f01025b2:	89 e5                	mov    %esp,%ebp$/;"	l
f01025b4	obj/kern/kernel.asm	/^f01025b4:	53                   	push   %ebx$/;"	l
f01025b5	obj/kern/kernel.asm	/^f01025b5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01025b8	obj/kern/kernel.asm	/^f01025b8:	8b 1d 4c 02 24 f0    	mov    0xf024024c,%ebx$/;"	l
f01025be	obj/kern/kernel.asm	/^f01025be:	85 db                	test   %ebx,%ebx$/;"	l
f01025c0	obj/kern/kernel.asm	/^f01025c0:	0f 84 67 01 00 00    	je     f010272d <env_alloc+0x17c>$/;"	l
f01025c6	obj/kern/kernel.asm	/^f01025c6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01025c9	obj/kern/kernel.asm	/^f01025c9:	6a 01                	push   $0x1$/;"	l
f01025cb	obj/kern/kernel.asm	/^f01025cb:	e8 cf e6 ff ff       	call   f0100c9f <page_alloc>$/;"	l
f01025d0	obj/kern/kernel.asm	/^f01025d0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01025d3	obj/kern/kernel.asm	/^f01025d3:	85 c0                	test   %eax,%eax$/;"	l
f01025d5	obj/kern/kernel.asm	/^f01025d5:	0f 84 59 01 00 00    	je     f0102734 <env_alloc+0x183>$/;"	l
f01025db	obj/kern/kernel.asm	/^f01025db:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f01025e0	obj/kern/kernel.asm	/^f01025e0:	2b 05 10 0f 24 f0    	sub    0xf0240f10,%eax$/;"	l
f01025e6	obj/kern/kernel.asm	/^f01025e6:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01025e9	obj/kern/kernel.asm	/^f01025e9:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01025ec	obj/kern/kernel.asm	/^f01025ec:	89 c2                	mov    %eax,%edx$/;"	l
f01025ee	obj/kern/kernel.asm	/^f01025ee:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01025f1	obj/kern/kernel.asm	/^f01025f1:	3b 15 08 0f 24 f0    	cmp    0xf0240f08,%edx$/;"	l
f01025f7	obj/kern/kernel.asm	/^f01025f7:	0f 83 09 01 00 00    	jae    f0102706 <env_alloc+0x155>$/;"	l
f01025fd	obj/kern/kernel.asm	/^f01025fd:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102602	obj/kern/kernel.asm	/^f0102602:	89 43 60             	mov    %eax,0x60(%ebx)$/;"	l
f0102605	obj/kern/kernel.asm	/^f0102605:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102608	obj/kern/kernel.asm	/^f0102608:	68 00 10 00 00       	push   $0x1000$/;"	l
f010260d	obj/kern/kernel.asm	/^f010260d:	ff 35 0c 0f 24 f0    	pushl  0xf0240f0c$/;"	l
f0102613	obj/kern/kernel.asm	/^f0102613:	50                   	push   %eax$/;"	l
f0102614	obj/kern/kernel.asm	/^f0102614:	e8 c7 20 00 00       	call   f01046e0 <memcpy>$/;"	l
f0102619	obj/kern/kernel.asm	/^f0102619:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f010261c	obj/kern/kernel.asm	/^f010261c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010261f	obj/kern/kernel.asm	/^f010261f:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102624	obj/kern/kernel.asm	/^f0102624:	0f 86 ee 00 00 00    	jbe    f0102718 <env_alloc+0x167>$/;"	l
f010262a	obj/kern/kernel.asm	/^f010262a:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0102630	obj/kern/kernel.asm	/^f0102630:	83 ca 05             	or     $0x5,%edx$/;"	l
f0102633	obj/kern/kernel.asm	/^f0102633:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0102639	obj/kern/kernel.asm	/^f0102639:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f010263c	obj/kern/kernel.asm	/^f010263c:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f0102641	obj/kern/kernel.asm	/^f0102641:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0102646	obj/kern/kernel.asm	/^f0102646:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010264b	obj/kern/kernel.asm	/^f010264b:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f010264e	obj/kern/kernel.asm	/^f010264e:	89 da                	mov    %ebx,%edx$/;"	l
f0102650	obj/kern/kernel.asm	/^f0102650:	2b 15 48 02 24 f0    	sub    0xf0240248,%edx$/;"	l
f0102656	obj/kern/kernel.asm	/^f0102656:	c1 fa 07             	sar    $0x7,%edx$/;"	l
f0102659	obj/kern/kernel.asm	/^f0102659:	09 d0                	or     %edx,%eax$/;"	l
f010265b	obj/kern/kernel.asm	/^f010265b:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f010265e	obj/kern/kernel.asm	/^f010265e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102661	obj/kern/kernel.asm	/^f0102661:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f0102664	obj/kern/kernel.asm	/^f0102664:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f010266b	obj/kern/kernel.asm	/^f010266b:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f0102672	obj/kern/kernel.asm	/^f0102672:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f0102679	obj/kern/kernel.asm	/^f0102679:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010267c	obj/kern/kernel.asm	/^f010267c:	6a 44                	push   $0x44$/;"	l
f010267e	obj/kern/kernel.asm	/^f010267e:	6a 00                	push   $0x0$/;"	l
f0102680	obj/kern/kernel.asm	/^f0102680:	53                   	push   %ebx$/;"	l
f0102681	obj/kern/kernel.asm	/^f0102681:	e8 a5 1f 00 00       	call   f010462b <memset>$/;"	l
f0102686	obj/kern/kernel.asm	/^f0102686:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f010268c	obj/kern/kernel.asm	/^f010268c:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f0102692	obj/kern/kernel.asm	/^f0102692:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f0102698	obj/kern/kernel.asm	/^f0102698:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f010269f	obj/kern/kernel.asm	/^f010269f:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f01026a5	obj/kern/kernel.asm	/^f01026a5:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f01026ac	obj/kern/kernel.asm	/^f01026ac:	c6 43 68 00          	movb   $0x0,0x68(%ebx)$/;"	l
f01026b0	obj/kern/kernel.asm	/^f01026b0:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f01026b3	obj/kern/kernel.asm	/^f01026b3:	a3 4c 02 24 f0       	mov    %eax,0xf024024c$/;"	l
f01026b8	obj/kern/kernel.asm	/^f01026b8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01026bb	obj/kern/kernel.asm	/^f01026bb:	89 18                	mov    %ebx,(%eax)$/;"	l
f01026bd	obj/kern/kernel.asm	/^f01026bd:	8b 5b 48             	mov    0x48(%ebx),%ebx$/;"	l
f01026c0	obj/kern/kernel.asm	/^f01026c0:	e8 8a 25 00 00       	call   f0104c4f <cpunum>$/;"	l
f01026c5	obj/kern/kernel.asm	/^f01026c5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01026c8	obj/kern/kernel.asm	/^f01026c8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01026cb	obj/kern/kernel.asm	/^f01026cb:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01026d0	obj/kern/kernel.asm	/^f01026d0:	83 b8 28 10 24 f0 00 	cmpl   $0x0,-0xfdbefd8(%eax)$/;"	l
f01026d7	obj/kern/kernel.asm	/^f01026d7:	74 11                	je     f01026ea <env_alloc+0x139>$/;"	l
f01026d9	obj/kern/kernel.asm	/^f01026d9:	e8 71 25 00 00       	call   f0104c4f <cpunum>$/;"	l
f01026de	obj/kern/kernel.asm	/^f01026de:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01026e1	obj/kern/kernel.asm	/^f01026e1:	8b 80 28 10 24 f0    	mov    -0xfdbefd8(%eax),%eax$/;"	l
f01026e7	obj/kern/kernel.asm	/^f01026e7:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f01026ea	obj/kern/kernel.asm	/^f01026ea:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01026ed	obj/kern/kernel.asm	/^f01026ed:	53                   	push   %ebx$/;"	l
f01026ee	obj/kern/kernel.asm	/^f01026ee:	52                   	push   %edx$/;"	l
f01026ef	obj/kern/kernel.asm	/^f01026ef:	68 23 62 10 f0       	push   $0xf0106223$/;"	l
f01026f4	obj/kern/kernel.asm	/^f01026f4:	e8 8c 06 00 00       	call   f0102d85 <cprintf>$/;"	l
f01026f9	obj/kern/kernel.asm	/^f01026f9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01026fc	obj/kern/kernel.asm	/^f01026fc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102701	obj/kern/kernel.asm	/^f0102701:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0102704	obj/kern/kernel.asm	/^f0102704:	c9                   	leave  $/;"	l
f0102705	obj/kern/kernel.asm	/^f0102705:	c3                   	ret    $/;"	l
f0102706	obj/kern/kernel.asm	/^f0102706:	50                   	push   %eax$/;"	l
f0102707	obj/kern/kernel.asm	/^f0102707:	68 c4 52 10 f0       	push   $0xf01052c4$/;"	l
f010270c	obj/kern/kernel.asm	/^f010270c:	6a 58                	push   $0x58$/;"	l
f010270e	obj/kern/kernel.asm	/^f010270e:	68 5d 5e 10 f0       	push   $0xf0105e5d$/;"	l
f0102713	obj/kern/kernel.asm	/^f0102713:	e8 28 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102718	obj/kern/kernel.asm	/^f0102718:	50                   	push   %eax$/;"	l
f0102719	obj/kern/kernel.asm	/^f0102719:	68 e8 52 10 f0       	push   $0xf01052e8$/;"	l
f010271e	obj/kern/kernel.asm	/^f010271e:	68 cf 00 00 00       	push   $0xcf$/;"	l
f0102723	obj/kern/kernel.asm	/^f0102723:	68 18 62 10 f0       	push   $0xf0106218$/;"	l
f0102728	obj/kern/kernel.asm	/^f0102728:	e8 13 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f010272d	obj/kern/kernel.asm	/^f010272d:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f0102732	obj/kern/kernel.asm	/^f0102732:	eb cd                	jmp    f0102701 <env_alloc+0x150>$/;"	l
f0102734	obj/kern/kernel.asm	/^f0102734:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0102739	obj/kern/kernel.asm	/^f0102739:	eb c6                	jmp    f0102701 <env_alloc+0x150>$/;"	l
f010273b	obj/kern/kernel.asm	/^f010273b <env_create>:$/;"	l
f010273b	obj/kern/kernel.asm	/^f010273b:	55                   	push   %ebp$/;"	l
f010273c	obj/kern/kernel.asm	/^f010273c:	89 e5                	mov    %esp,%ebp$/;"	l
f010273e	obj/kern/kernel.asm	/^f010273e:	57                   	push   %edi$/;"	l
f010273f	obj/kern/kernel.asm	/^f010273f:	56                   	push   %esi$/;"	l
f0102740	obj/kern/kernel.asm	/^f0102740:	53                   	push   %ebx$/;"	l
f0102741	obj/kern/kernel.asm	/^f0102741:	83 ec 34             	sub    $0x34,%esp$/;"	l
f0102744	obj/kern/kernel.asm	/^f0102744:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0102747	obj/kern/kernel.asm	/^f0102747:	6a 00                	push   $0x0$/;"	l
f0102749	obj/kern/kernel.asm	/^f0102749:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010274c	obj/kern/kernel.asm	/^f010274c:	50                   	push   %eax$/;"	l
f010274d	obj/kern/kernel.asm	/^f010274d:	e8 5f fe ff ff       	call   f01025b1 <env_alloc>$/;"	l
f0102752	obj/kern/kernel.asm	/^f0102752:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102755	obj/kern/kernel.asm	/^f0102755:	83 f8 fb             	cmp    $0xfffffffb,%eax$/;"	l
f0102758	obj/kern/kernel.asm	/^f0102758:	74 38                	je     f0102792 <env_create+0x57>$/;"	l
f010275a	obj/kern/kernel.asm	/^f010275a:	83 f8 fc             	cmp    $0xfffffffc,%eax$/;"	l
f010275d	obj/kern/kernel.asm	/^f010275d:	74 4a                	je     f01027a9 <env_create+0x6e>$/;"	l
f010275f	obj/kern/kernel.asm	/^f010275f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0102762	obj/kern/kernel.asm	/^f0102762:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102765	obj/kern/kernel.asm	/^f0102765:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%edi)$/;"	l
f010276b	obj/kern/kernel.asm	/^f010276b:	75 53                	jne    f01027c0 <env_create+0x85>$/;"	l
f010276d	obj/kern/kernel.asm	/^f010276d:	89 fb                	mov    %edi,%ebx$/;"	l
f010276f	obj/kern/kernel.asm	/^f010276f:	03 5f 1c             	add    0x1c(%edi),%ebx$/;"	l
f0102772	obj/kern/kernel.asm	/^f0102772:	0f b7 77 2c          	movzwl 0x2c(%edi),%esi$/;"	l
f0102776	obj/kern/kernel.asm	/^f0102776:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f0102779	obj/kern/kernel.asm	/^f0102779:	01 de                	add    %ebx,%esi$/;"	l
f010277b	obj/kern/kernel.asm	/^f010277b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010277e	obj/kern/kernel.asm	/^f010277e:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0102781	obj/kern/kernel.asm	/^f0102781:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102786	obj/kern/kernel.asm	/^f0102786:	76 4f                	jbe    f01027d7 <env_create+0x9c>$/;"	l
f0102788	obj/kern/kernel.asm	/^f0102788:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010278d	obj/kern/kernel.asm	/^f010278d:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0102790	obj/kern/kernel.asm	/^f0102790:	eb 5d                	jmp    f01027ef <env_create+0xb4>$/;"	l
f0102792	obj/kern/kernel.asm	/^f0102792:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102795	obj/kern/kernel.asm	/^f0102795:	68 94 61 10 f0       	push   $0xf0106194$/;"	l
f010279a	obj/kern/kernel.asm	/^f010279a:	68 ae 01 00 00       	push   $0x1ae$/;"	l
f010279f	obj/kern/kernel.asm	/^f010279f:	68 18 62 10 f0       	push   $0xf0106218$/;"	l
f01027a4	obj/kern/kernel.asm	/^f01027a4:	e8 97 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027a9	obj/kern/kernel.asm	/^f01027a9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01027ac	obj/kern/kernel.asm	/^f01027ac:	68 bc 61 10 f0       	push   $0xf01061bc$/;"	l
f01027b1	obj/kern/kernel.asm	/^f01027b1:	68 b1 01 00 00       	push   $0x1b1$/;"	l
f01027b6	obj/kern/kernel.asm	/^f01027b6:	68 18 62 10 f0       	push   $0xf0106218$/;"	l
f01027bb	obj/kern/kernel.asm	/^f01027bb:	e8 80 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027c0	obj/kern/kernel.asm	/^f01027c0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01027c3	obj/kern/kernel.asm	/^f01027c3:	68 ec 61 10 f0       	push   $0xf01061ec$/;"	l
f01027c8	obj/kern/kernel.asm	/^f01027c8:	68 79 01 00 00       	push   $0x179$/;"	l
f01027cd	obj/kern/kernel.asm	/^f01027cd:	68 18 62 10 f0       	push   $0xf0106218$/;"	l
f01027d2	obj/kern/kernel.asm	/^f01027d2:	e8 69 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027d7	obj/kern/kernel.asm	/^f01027d7:	50                   	push   %eax$/;"	l
f01027d8	obj/kern/kernel.asm	/^f01027d8:	68 e8 52 10 f0       	push   $0xf01052e8$/;"	l
f01027dd	obj/kern/kernel.asm	/^f01027dd:	68 83 01 00 00       	push   $0x183$/;"	l
f01027e2	obj/kern/kernel.asm	/^f01027e2:	68 18 62 10 f0       	push   $0xf0106218$/;"	l
f01027e7	obj/kern/kernel.asm	/^f01027e7:	e8 54 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027ec	obj/kern/kernel.asm	/^f01027ec:	83 c3 20             	add    $0x20,%ebx$/;"	l
f01027ef	obj/kern/kernel.asm	/^f01027ef:	39 de                	cmp    %ebx,%esi$/;"	l
f01027f1	obj/kern/kernel.asm	/^f01027f1:	76 59                	jbe    f010284c <env_create+0x111>$/;"	l
f01027f3	obj/kern/kernel.asm	/^f01027f3:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f01027f6	obj/kern/kernel.asm	/^f01027f6:	75 f4                	jne    f01027ec <env_create+0xb1>$/;"	l
f01027f8	obj/kern/kernel.asm	/^f01027f8:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f01027fb	obj/kern/kernel.asm	/^f01027fb:	3b 4b 10             	cmp    0x10(%ebx),%ecx$/;"	l
f01027fe	obj/kern/kernel.asm	/^f01027fe:	72 ec                	jb     f01027ec <env_create+0xb1>$/;"	l
f0102800	obj/kern/kernel.asm	/^f0102800:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f0102803	obj/kern/kernel.asm	/^f0102803:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102806	obj/kern/kernel.asm	/^f0102806:	e8 04 fc ff ff       	call   f010240f <region_alloc>$/;"	l
f010280b	obj/kern/kernel.asm	/^f010280b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010280e	obj/kern/kernel.asm	/^f010280e:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f0102811	obj/kern/kernel.asm	/^f0102811:	89 f8                	mov    %edi,%eax$/;"	l
f0102813	obj/kern/kernel.asm	/^f0102813:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f0102816	obj/kern/kernel.asm	/^f0102816:	50                   	push   %eax$/;"	l
f0102817	obj/kern/kernel.asm	/^f0102817:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f010281a	obj/kern/kernel.asm	/^f010281a:	e8 c1 1e 00 00       	call   f01046e0 <memcpy>$/;"	l
f010281f	obj/kern/kernel.asm	/^f010281f:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0102822	obj/kern/kernel.asm	/^f0102822:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102825	obj/kern/kernel.asm	/^f0102825:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f0102828	obj/kern/kernel.asm	/^f0102828:	29 c1                	sub    %eax,%ecx$/;"	l
f010282a	obj/kern/kernel.asm	/^f010282a:	51                   	push   %ecx$/;"	l
f010282b	obj/kern/kernel.asm	/^f010282b:	6a 00                	push   $0x0$/;"	l
f010282d	obj/kern/kernel.asm	/^f010282d:	03 43 08             	add    0x8(%ebx),%eax$/;"	l
f0102830	obj/kern/kernel.asm	/^f0102830:	50                   	push   %eax$/;"	l
f0102831	obj/kern/kernel.asm	/^f0102831:	e8 f5 1d 00 00       	call   f010462b <memset>$/;"	l
f0102836	obj/kern/kernel.asm	/^f0102836:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0102839	obj/kern/kernel.asm	/^f0102839:	03 43 08             	add    0x8(%ebx),%eax$/;"	l
f010283c	obj/kern/kernel.asm	/^f010283c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010283f	obj/kern/kernel.asm	/^f010283f:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0102842	obj/kern/kernel.asm	/^f0102842:	39 42 7c             	cmp    %eax,0x7c(%edx)$/;"	l
f0102845	obj/kern/kernel.asm	/^f0102845:	73 a5                	jae    f01027ec <env_create+0xb1>$/;"	l
f0102847	obj/kern/kernel.asm	/^f0102847:	89 42 7c             	mov    %eax,0x7c(%edx)$/;"	l
f010284a	obj/kern/kernel.asm	/^f010284a:	eb a0                	jmp    f01027ec <env_create+0xb1>$/;"	l
f010284c	obj/kern/kernel.asm	/^f010284c:	a1 0c 0f 24 f0       	mov    0xf0240f0c,%eax$/;"	l
f0102851	obj/kern/kernel.asm	/^f0102851:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102856	obj/kern/kernel.asm	/^f0102856:	76 33                	jbe    f010288b <env_create+0x150>$/;"	l
f0102858	obj/kern/kernel.asm	/^f0102858:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010285d	obj/kern/kernel.asm	/^f010285d:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0102860	obj/kern/kernel.asm	/^f0102860:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
f0102863	obj/kern/kernel.asm	/^f0102863:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0102866	obj/kern/kernel.asm	/^f0102866:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f0102869	obj/kern/kernel.asm	/^f0102869:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f010286e	obj/kern/kernel.asm	/^f010286e:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f0102873	obj/kern/kernel.asm	/^f0102873:	89 f8                	mov    %edi,%eax$/;"	l
f0102875	obj/kern/kernel.asm	/^f0102875:	e8 95 fb ff ff       	call   f010240f <region_alloc>$/;"	l
f010287a	obj/kern/kernel.asm	/^f010287a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010287d	obj/kern/kernel.asm	/^f010287d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0102880	obj/kern/kernel.asm	/^f0102880:	89 50 50             	mov    %edx,0x50(%eax)$/;"	l
f0102883	obj/kern/kernel.asm	/^f0102883:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102886	obj/kern/kernel.asm	/^f0102886:	5b                   	pop    %ebx$/;"	l
f0102887	obj/kern/kernel.asm	/^f0102887:	5e                   	pop    %esi$/;"	l
f0102888	obj/kern/kernel.asm	/^f0102888:	5f                   	pop    %edi$/;"	l
f0102889	obj/kern/kernel.asm	/^f0102889:	5d                   	pop    %ebp$/;"	l
f010288a	obj/kern/kernel.asm	/^f010288a:	c3                   	ret    $/;"	l
f010288b	obj/kern/kernel.asm	/^f010288b:	50                   	push   %eax$/;"	l
f010288c	obj/kern/kernel.asm	/^f010288c:	68 e8 52 10 f0       	push   $0xf01052e8$/;"	l
f0102891	obj/kern/kernel.asm	/^f0102891:	68 92 01 00 00       	push   $0x192$/;"	l
f0102896	obj/kern/kernel.asm	/^f0102896:	68 18 62 10 f0       	push   $0xf0106218$/;"	l
f010289b	obj/kern/kernel.asm	/^f010289b:	e8 a0 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028a0	obj/kern/kernel.asm	/^f01028a0 <env_free>:$/;"	l
f01028a0	obj/kern/kernel.asm	/^f01028a0:	55                   	push   %ebp$/;"	l
f01028a1	obj/kern/kernel.asm	/^f01028a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01028a3	obj/kern/kernel.asm	/^f01028a3:	57                   	push   %edi$/;"	l
f01028a4	obj/kern/kernel.asm	/^f01028a4:	56                   	push   %esi$/;"	l
f01028a5	obj/kern/kernel.asm	/^f01028a5:	53                   	push   %ebx$/;"	l
f01028a6	obj/kern/kernel.asm	/^f01028a6:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01028a9	obj/kern/kernel.asm	/^f01028a9:	e8 a1 23 00 00       	call   f0104c4f <cpunum>$/;"	l
f01028ae	obj/kern/kernel.asm	/^f01028ae:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01028b1	obj/kern/kernel.asm	/^f01028b1:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01028b4	obj/kern/kernel.asm	/^f01028b4:	39 90 28 10 24 f0    	cmp    %edx,-0xfdbefd8(%eax)$/;"	l
f01028ba	obj/kern/kernel.asm	/^f01028ba:	75 14                	jne    f01028d0 <env_free+0x30>$/;"	l
f01028bc	obj/kern/kernel.asm	/^f01028bc:	a1 0c 0f 24 f0       	mov    0xf0240f0c,%eax$/;"	l
f01028c1	obj/kern/kernel.asm	/^f01028c1:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01028c6	obj/kern/kernel.asm	/^f01028c6:	76 56                	jbe    f010291e <env_free+0x7e>$/;"	l
f01028c8	obj/kern/kernel.asm	/^f01028c8:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01028cd	obj/kern/kernel.asm	/^f01028cd:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01028d0	obj/kern/kernel.asm	/^f01028d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01028d3	obj/kern/kernel.asm	/^f01028d3:	8b 58 48             	mov    0x48(%eax),%ebx$/;"	l
f01028d6	obj/kern/kernel.asm	/^f01028d6:	e8 74 23 00 00       	call   f0104c4f <cpunum>$/;"	l
f01028db	obj/kern/kernel.asm	/^f01028db:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01028de	obj/kern/kernel.asm	/^f01028de:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01028e3	obj/kern/kernel.asm	/^f01028e3:	83 b8 28 10 24 f0 00 	cmpl   $0x0,-0xfdbefd8(%eax)$/;"	l
f01028ea	obj/kern/kernel.asm	/^f01028ea:	74 11                	je     f01028fd <env_free+0x5d>$/;"	l
f01028ec	obj/kern/kernel.asm	/^f01028ec:	e8 5e 23 00 00       	call   f0104c4f <cpunum>$/;"	l
f01028f1	obj/kern/kernel.asm	/^f01028f1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01028f4	obj/kern/kernel.asm	/^f01028f4:	8b 80 28 10 24 f0    	mov    -0xfdbefd8(%eax),%eax$/;"	l
f01028fa	obj/kern/kernel.asm	/^f01028fa:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f01028fd	obj/kern/kernel.asm	/^f01028fd:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102900	obj/kern/kernel.asm	/^f0102900:	53                   	push   %ebx$/;"	l
f0102901	obj/kern/kernel.asm	/^f0102901:	52                   	push   %edx$/;"	l
f0102902	obj/kern/kernel.asm	/^f0102902:	68 38 62 10 f0       	push   $0xf0106238$/;"	l
f0102907	obj/kern/kernel.asm	/^f0102907:	e8 79 04 00 00       	call   f0102d85 <cprintf>$/;"	l
f010290c	obj/kern/kernel.asm	/^f010290c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010290f	obj/kern/kernel.asm	/^f010290f:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
f0102916	obj/kern/kernel.asm	/^f0102916:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0102919	obj/kern/kernel.asm	/^f0102919:	e9 8f 00 00 00       	jmp    f01029ad <env_free+0x10d>$/;"	l
f010291e	obj/kern/kernel.asm	/^f010291e:	50                   	push   %eax$/;"	l
f010291f	obj/kern/kernel.asm	/^f010291f:	68 e8 52 10 f0       	push   $0xf01052e8$/;"	l
f0102924	obj/kern/kernel.asm	/^f0102924:	68 ca 01 00 00       	push   $0x1ca$/;"	l
f0102929	obj/kern/kernel.asm	/^f0102929:	68 18 62 10 f0       	push   $0xf0106218$/;"	l
f010292e	obj/kern/kernel.asm	/^f010292e:	e8 0d d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102933	obj/kern/kernel.asm	/^f0102933:	50                   	push   %eax$/;"	l
f0102934	obj/kern/kernel.asm	/^f0102934:	68 c4 52 10 f0       	push   $0xf01052c4$/;"	l
f0102939	obj/kern/kernel.asm	/^f0102939:	68 d9 01 00 00       	push   $0x1d9$/;"	l
f010293e	obj/kern/kernel.asm	/^f010293e:	68 18 62 10 f0       	push   $0xf0106218$/;"	l
f0102943	obj/kern/kernel.asm	/^f0102943:	e8 f8 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102948	obj/kern/kernel.asm	/^f0102948:	83 c3 04             	add    $0x4,%ebx$/;"	l
f010294b	obj/kern/kernel.asm	/^f010294b:	39 f3                	cmp    %esi,%ebx$/;"	l
f010294d	obj/kern/kernel.asm	/^f010294d:	74 21                	je     f0102970 <env_free+0xd0>$/;"	l
f010294f	obj/kern/kernel.asm	/^f010294f:	f6 03 01             	testb  $0x1,(%ebx)$/;"	l
f0102952	obj/kern/kernel.asm	/^f0102952:	74 f4                	je     f0102948 <env_free+0xa8>$/;"	l
f0102954	obj/kern/kernel.asm	/^f0102954:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102957	obj/kern/kernel.asm	/^f0102957:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010295a	obj/kern/kernel.asm	/^f010295a:	01 d8                	add    %ebx,%eax$/;"	l
f010295c	obj/kern/kernel.asm	/^f010295c:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f010295f	obj/kern/kernel.asm	/^f010295f:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f0102962	obj/kern/kernel.asm	/^f0102962:	50                   	push   %eax$/;"	l
f0102963	obj/kern/kernel.asm	/^f0102963:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f0102966	obj/kern/kernel.asm	/^f0102966:	e8 92 e5 ff ff       	call   f0100efd <page_remove>$/;"	l
f010296b	obj/kern/kernel.asm	/^f010296b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010296e	obj/kern/kernel.asm	/^f010296e:	eb d8                	jmp    f0102948 <env_free+0xa8>$/;"	l
f0102970	obj/kern/kernel.asm	/^f0102970:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0102973	obj/kern/kernel.asm	/^f0102973:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0102976	obj/kern/kernel.asm	/^f0102976:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f010297d	obj/kern/kernel.asm	/^f010297d:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0102980	obj/kern/kernel.asm	/^f0102980:	3b 05 08 0f 24 f0    	cmp    0xf0240f08,%eax$/;"	l
f0102986	obj/kern/kernel.asm	/^f0102986:	73 6a                	jae    f01029f2 <env_free+0x152>$/;"	l
f0102988	obj/kern/kernel.asm	/^f0102988:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010298b	obj/kern/kernel.asm	/^f010298b:	a1 10 0f 24 f0       	mov    0xf0240f10,%eax$/;"	l
f0102990	obj/kern/kernel.asm	/^f0102990:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0102993	obj/kern/kernel.asm	/^f0102993:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f0102996	obj/kern/kernel.asm	/^f0102996:	50                   	push   %eax$/;"	l
f0102997	obj/kern/kernel.asm	/^f0102997:	e8 c7 e3 ff ff       	call   f0100d63 <page_decref>$/;"	l
f010299c	obj/kern/kernel.asm	/^f010299c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010299f	obj/kern/kernel.asm	/^f010299f:	83 45 dc 04          	addl   $0x4,-0x24(%ebp)$/;"	l
f01029a3	obj/kern/kernel.asm	/^f01029a3:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01029a6	obj/kern/kernel.asm	/^f01029a6:	3d ec 0e 00 00       	cmp    $0xeec,%eax$/;"	l
f01029ab	obj/kern/kernel.asm	/^f01029ab:	74 59                	je     f0102a06 <env_free+0x166>$/;"	l
f01029ad	obj/kern/kernel.asm	/^f01029ad:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f01029b0	obj/kern/kernel.asm	/^f01029b0:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01029b3	obj/kern/kernel.asm	/^f01029b3:	8b 04 10             	mov    (%eax,%edx,1),%eax$/;"	l
f01029b6	obj/kern/kernel.asm	/^f01029b6:	a8 01                	test   $0x1,%al$/;"	l
f01029b8	obj/kern/kernel.asm	/^f01029b8:	74 e5                	je     f010299f <env_free+0xff>$/;"	l
f01029ba	obj/kern/kernel.asm	/^f01029ba:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01029bf	obj/kern/kernel.asm	/^f01029bf:	89 c2                	mov    %eax,%edx$/;"	l
f01029c1	obj/kern/kernel.asm	/^f01029c1:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01029c4	obj/kern/kernel.asm	/^f01029c4:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
f01029c7	obj/kern/kernel.asm	/^f01029c7:	39 15 08 0f 24 f0    	cmp    %edx,0xf0240f08$/;"	l
f01029cd	obj/kern/kernel.asm	/^f01029cd:	0f 86 60 ff ff ff    	jbe    f0102933 <env_free+0x93>$/;"	l
f01029d3	obj/kern/kernel.asm	/^f01029d3:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f01029d9	obj/kern/kernel.asm	/^f01029d9:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01029dc	obj/kern/kernel.asm	/^f01029dc:	c1 e2 14             	shl    $0x14,%edx$/;"	l
f01029df	obj/kern/kernel.asm	/^f01029df:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01029e2	obj/kern/kernel.asm	/^f01029e2:	8d b0 00 10 00 f0    	lea    -0xffff000(%eax),%esi$/;"	l
f01029e8	obj/kern/kernel.asm	/^f01029e8:	f7 d8                	neg    %eax$/;"	l
f01029ea	obj/kern/kernel.asm	/^f01029ea:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01029ed	obj/kern/kernel.asm	/^f01029ed:	e9 5d ff ff ff       	jmp    f010294f <env_free+0xaf>$/;"	l
f01029f2	obj/kern/kernel.asm	/^f01029f2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01029f5	obj/kern/kernel.asm	/^f01029f5:	68 6c 58 10 f0       	push   $0xf010586c$/;"	l
f01029fa	obj/kern/kernel.asm	/^f01029fa:	6a 51                	push   $0x51$/;"	l
f01029fc	obj/kern/kernel.asm	/^f01029fc:	68 5d 5e 10 f0       	push   $0xf0105e5d$/;"	l
f0102a01	obj/kern/kernel.asm	/^f0102a01:	e8 3a d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a06	obj/kern/kernel.asm	/^f0102a06:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102a09	obj/kern/kernel.asm	/^f0102a09:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0102a0c	obj/kern/kernel.asm	/^f0102a0c:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102a11	obj/kern/kernel.asm	/^f0102a11:	76 52                	jbe    f0102a65 <env_free+0x1c5>$/;"	l
f0102a13	obj/kern/kernel.asm	/^f0102a13:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0102a16	obj/kern/kernel.asm	/^f0102a16:	c7 42 60 00 00 00 00 	movl   $0x0,0x60(%edx)$/;"	l
f0102a1d	obj/kern/kernel.asm	/^f0102a1d:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102a22	obj/kern/kernel.asm	/^f0102a22:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102a25	obj/kern/kernel.asm	/^f0102a25:	3b 05 08 0f 24 f0    	cmp    0xf0240f08,%eax$/;"	l
f0102a2b	obj/kern/kernel.asm	/^f0102a2b:	73 4d                	jae    f0102a7a <env_free+0x1da>$/;"	l
f0102a2d	obj/kern/kernel.asm	/^f0102a2d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102a30	obj/kern/kernel.asm	/^f0102a30:	8b 15 10 0f 24 f0    	mov    0xf0240f10,%edx$/;"	l
f0102a36	obj/kern/kernel.asm	/^f0102a36:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0102a39	obj/kern/kernel.asm	/^f0102a39:	50                   	push   %eax$/;"	l
f0102a3a	obj/kern/kernel.asm	/^f0102a3a:	e8 24 e3 ff ff       	call   f0100d63 <page_decref>$/;"	l
f0102a3f	obj/kern/kernel.asm	/^f0102a3f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102a42	obj/kern/kernel.asm	/^f0102a42:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%eax)$/;"	l
f0102a49	obj/kern/kernel.asm	/^f0102a49:	a1 4c 02 24 f0       	mov    0xf024024c,%eax$/;"	l
f0102a4e	obj/kern/kernel.asm	/^f0102a4e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0102a51	obj/kern/kernel.asm	/^f0102a51:	89 42 44             	mov    %eax,0x44(%edx)$/;"	l
f0102a54	obj/kern/kernel.asm	/^f0102a54:	89 15 4c 02 24 f0    	mov    %edx,0xf024024c$/;"	l
f0102a5a	obj/kern/kernel.asm	/^f0102a5a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102a5d	obj/kern/kernel.asm	/^f0102a5d:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102a60	obj/kern/kernel.asm	/^f0102a60:	5b                   	pop    %ebx$/;"	l
f0102a61	obj/kern/kernel.asm	/^f0102a61:	5e                   	pop    %esi$/;"	l
f0102a62	obj/kern/kernel.asm	/^f0102a62:	5f                   	pop    %edi$/;"	l
f0102a63	obj/kern/kernel.asm	/^f0102a63:	5d                   	pop    %ebp$/;"	l
f0102a64	obj/kern/kernel.asm	/^f0102a64:	c3                   	ret    $/;"	l
f0102a65	obj/kern/kernel.asm	/^f0102a65:	50                   	push   %eax$/;"	l
f0102a66	obj/kern/kernel.asm	/^f0102a66:	68 e8 52 10 f0       	push   $0xf01052e8$/;"	l
f0102a6b	obj/kern/kernel.asm	/^f0102a6b:	68 e7 01 00 00       	push   $0x1e7$/;"	l
f0102a70	obj/kern/kernel.asm	/^f0102a70:	68 18 62 10 f0       	push   $0xf0106218$/;"	l
f0102a75	obj/kern/kernel.asm	/^f0102a75:	e8 c6 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a7a	obj/kern/kernel.asm	/^f0102a7a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102a7d	obj/kern/kernel.asm	/^f0102a7d:	68 6c 58 10 f0       	push   $0xf010586c$/;"	l
f0102a82	obj/kern/kernel.asm	/^f0102a82:	6a 51                	push   $0x51$/;"	l
f0102a84	obj/kern/kernel.asm	/^f0102a84:	68 5d 5e 10 f0       	push   $0xf0105e5d$/;"	l
f0102a89	obj/kern/kernel.asm	/^f0102a89:	e8 b2 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a8e	obj/kern/kernel.asm	/^f0102a8e <env_destroy>:$/;"	l
f0102a8e	obj/kern/kernel.asm	/^f0102a8e:	55                   	push   %ebp$/;"	l
f0102a8f	obj/kern/kernel.asm	/^f0102a8f:	89 e5                	mov    %esp,%ebp$/;"	l
f0102a91	obj/kern/kernel.asm	/^f0102a91:	53                   	push   %ebx$/;"	l
f0102a92	obj/kern/kernel.asm	/^f0102a92:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102a95	obj/kern/kernel.asm	/^f0102a95:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0102a98	obj/kern/kernel.asm	/^f0102a98:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f0102a9c	obj/kern/kernel.asm	/^f0102a9c:	74 21                	je     f0102abf <env_destroy+0x31>$/;"	l
f0102a9e	obj/kern/kernel.asm	/^f0102a9e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102aa1	obj/kern/kernel.asm	/^f0102aa1:	53                   	push   %ebx$/;"	l
f0102aa2	obj/kern/kernel.asm	/^f0102aa2:	e8 f9 fd ff ff       	call   f01028a0 <env_free>$/;"	l
f0102aa7	obj/kern/kernel.asm	/^f0102aa7:	e8 a3 21 00 00       	call   f0104c4f <cpunum>$/;"	l
f0102aac	obj/kern/kernel.asm	/^f0102aac:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102aaf	obj/kern/kernel.asm	/^f0102aaf:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102ab2	obj/kern/kernel.asm	/^f0102ab2:	39 98 28 10 24 f0    	cmp    %ebx,-0xfdbefd8(%eax)$/;"	l
f0102ab8	obj/kern/kernel.asm	/^f0102ab8:	74 1e                	je     f0102ad8 <env_destroy+0x4a>$/;"	l
f0102aba	obj/kern/kernel.asm	/^f0102aba:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0102abd	obj/kern/kernel.asm	/^f0102abd:	c9                   	leave  $/;"	l
f0102abe	obj/kern/kernel.asm	/^f0102abe:	c3                   	ret    $/;"	l
f0102abf	obj/kern/kernel.asm	/^f0102abf:	e8 8b 21 00 00       	call   f0104c4f <cpunum>$/;"	l
f0102ac4	obj/kern/kernel.asm	/^f0102ac4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102ac7	obj/kern/kernel.asm	/^f0102ac7:	39 98 28 10 24 f0    	cmp    %ebx,-0xfdbefd8(%eax)$/;"	l
f0102acd	obj/kern/kernel.asm	/^f0102acd:	74 cf                	je     f0102a9e <env_destroy+0x10>$/;"	l
f0102acf	obj/kern/kernel.asm	/^f0102acf:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f0102ad6	obj/kern/kernel.asm	/^f0102ad6:	eb e2                	jmp    f0102aba <env_destroy+0x2c>$/;"	l
f0102ad8	obj/kern/kernel.asm	/^f0102ad8:	e8 72 21 00 00       	call   f0104c4f <cpunum>$/;"	l
f0102add	obj/kern/kernel.asm	/^f0102add:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102ae0	obj/kern/kernel.asm	/^f0102ae0:	c7 80 28 10 24 f0 00 	movl   $0x0,-0xfdbefd8(%eax)$/;"	l
f0102ae7	obj/kern/kernel.asm	/^f0102ae7:	00 00 00 $/;"	l
f0102aea	obj/kern/kernel.asm	/^f0102aea:	e8 f7 0a 00 00       	call   f01035e6 <sched_yield>$/;"	l
f0102aef	obj/kern/kernel.asm	/^f0102aef <env_pop_tf>:$/;"	l
f0102aef	obj/kern/kernel.asm	/^f0102aef:	55                   	push   %ebp$/;"	l
f0102af0	obj/kern/kernel.asm	/^f0102af0:	89 e5                	mov    %esp,%ebp$/;"	l
f0102af2	obj/kern/kernel.asm	/^f0102af2:	53                   	push   %ebx$/;"	l
f0102af3	obj/kern/kernel.asm	/^f0102af3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102af6	obj/kern/kernel.asm	/^f0102af6:	e8 54 21 00 00       	call   f0104c4f <cpunum>$/;"	l
f0102afb	obj/kern/kernel.asm	/^f0102afb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102afe	obj/kern/kernel.asm	/^f0102afe:	8b 98 28 10 24 f0    	mov    -0xfdbefd8(%eax),%ebx$/;"	l
f0102b04	obj/kern/kernel.asm	/^f0102b04:	e8 46 21 00 00       	call   f0104c4f <cpunum>$/;"	l
f0102b09	obj/kern/kernel.asm	/^f0102b09:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f0102b0c	obj/kern/kernel.asm	/^f0102b0c:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0102b0f	obj/kern/kernel.asm	/^f0102b0f:	61                   	popa   $/;"	l
f0102b10	obj/kern/kernel.asm	/^f0102b10:	07                   	pop    %es$/;"	l
f0102b11	obj/kern/kernel.asm	/^f0102b11:	1f                   	pop    %ds$/;"	l
f0102b12	obj/kern/kernel.asm	/^f0102b12:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102b15	obj/kern/kernel.asm	/^f0102b15:	cf                   	iret   $/;"	l
f0102b16	obj/kern/kernel.asm	/^f0102b16:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102b19	obj/kern/kernel.asm	/^f0102b19:	68 4e 62 10 f0       	push   $0xf010624e$/;"	l
f0102b1e	obj/kern/kernel.asm	/^f0102b1e:	68 1e 02 00 00       	push   $0x21e$/;"	l
f0102b23	obj/kern/kernel.asm	/^f0102b23:	68 18 62 10 f0       	push   $0xf0106218$/;"	l
f0102b28	obj/kern/kernel.asm	/^f0102b28:	e8 13 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b2d	obj/kern/kernel.asm	/^f0102b2d <env_run>:$/;"	l
f0102b2d	obj/kern/kernel.asm	/^f0102b2d:	55                   	push   %ebp$/;"	l
f0102b2e	obj/kern/kernel.asm	/^f0102b2e:	89 e5                	mov    %esp,%ebp$/;"	l
f0102b30	obj/kern/kernel.asm	/^f0102b30:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102b33	obj/kern/kernel.asm	/^f0102b33:	e8 17 21 00 00       	call   f0104c4f <cpunum>$/;"	l
f0102b38	obj/kern/kernel.asm	/^f0102b38:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102b3b	obj/kern/kernel.asm	/^f0102b3b:	83 b8 28 10 24 f0 00 	cmpl   $0x0,-0xfdbefd8(%eax)$/;"	l
f0102b42	obj/kern/kernel.asm	/^f0102b42:	74 14                	je     f0102b58 <env_run+0x2b>$/;"	l
f0102b44	obj/kern/kernel.asm	/^f0102b44:	e8 06 21 00 00       	call   f0104c4f <cpunum>$/;"	l
f0102b49	obj/kern/kernel.asm	/^f0102b49:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102b4c	obj/kern/kernel.asm	/^f0102b4c:	8b 80 28 10 24 f0    	mov    -0xfdbefd8(%eax),%eax$/;"	l
f0102b52	obj/kern/kernel.asm	/^f0102b52:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0102b56	obj/kern/kernel.asm	/^f0102b56:	74 65                	je     f0102bbd <env_run+0x90>$/;"	l
f0102b58	obj/kern/kernel.asm	/^f0102b58:	e8 f2 20 00 00       	call   f0104c4f <cpunum>$/;"	l
f0102b5d	obj/kern/kernel.asm	/^f0102b5d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102b60	obj/kern/kernel.asm	/^f0102b60:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0102b63	obj/kern/kernel.asm	/^f0102b63:	89 90 28 10 24 f0    	mov    %edx,-0xfdbefd8(%eax)$/;"	l
f0102b69	obj/kern/kernel.asm	/^f0102b69:	e8 e1 20 00 00       	call   f0104c4f <cpunum>$/;"	l
f0102b6e	obj/kern/kernel.asm	/^f0102b6e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102b71	obj/kern/kernel.asm	/^f0102b71:	8b 80 28 10 24 f0    	mov    -0xfdbefd8(%eax),%eax$/;"	l
f0102b77	obj/kern/kernel.asm	/^f0102b77:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f0102b7e	obj/kern/kernel.asm	/^f0102b7e:	e8 cc 20 00 00       	call   f0104c4f <cpunum>$/;"	l
f0102b83	obj/kern/kernel.asm	/^f0102b83:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102b86	obj/kern/kernel.asm	/^f0102b86:	8b 80 28 10 24 f0    	mov    -0xfdbefd8(%eax),%eax$/;"	l
f0102b8c	obj/kern/kernel.asm	/^f0102b8c:	83 40 58 01          	addl   $0x1,0x58(%eax)$/;"	l
f0102b90	obj/kern/kernel.asm	/^f0102b90:	e8 ba 20 00 00       	call   f0104c4f <cpunum>$/;"	l
f0102b95	obj/kern/kernel.asm	/^f0102b95:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102b98	obj/kern/kernel.asm	/^f0102b98:	8b 80 28 10 24 f0    	mov    -0xfdbefd8(%eax),%eax$/;"	l
f0102b9e	obj/kern/kernel.asm	/^f0102b9e:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0102ba1	obj/kern/kernel.asm	/^f0102ba1:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102ba6	obj/kern/kernel.asm	/^f0102ba6:	77 2c                	ja     f0102bd4 <env_run+0xa7>$/;"	l
f0102ba8	obj/kern/kernel.asm	/^f0102ba8:	50                   	push   %eax$/;"	l
f0102ba9	obj/kern/kernel.asm	/^f0102ba9:	68 e8 52 10 f0       	push   $0xf01052e8$/;"	l
f0102bae	obj/kern/kernel.asm	/^f0102bae:	68 44 02 00 00       	push   $0x244$/;"	l
f0102bb3	obj/kern/kernel.asm	/^f0102bb3:	68 18 62 10 f0       	push   $0xf0106218$/;"	l
f0102bb8	obj/kern/kernel.asm	/^f0102bb8:	e8 83 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bbd	obj/kern/kernel.asm	/^f0102bbd:	e8 8d 20 00 00       	call   f0104c4f <cpunum>$/;"	l
f0102bc2	obj/kern/kernel.asm	/^f0102bc2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102bc5	obj/kern/kernel.asm	/^f0102bc5:	8b 80 28 10 24 f0    	mov    -0xfdbefd8(%eax),%eax$/;"	l
f0102bcb	obj/kern/kernel.asm	/^f0102bcb:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0102bd2	obj/kern/kernel.asm	/^f0102bd2:	eb 84                	jmp    f0102b58 <env_run+0x2b>$/;"	l
f0102bd4	obj/kern/kernel.asm	/^f0102bd4:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102bd9	obj/kern/kernel.asm	/^f0102bd9:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0102bdc	obj/kern/kernel.asm	/^f0102bdc:	e8 6e 20 00 00       	call   f0104c4f <cpunum>$/;"	l
f0102be1	obj/kern/kernel.asm	/^f0102be1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102be4	obj/kern/kernel.asm	/^f0102be4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102be7	obj/kern/kernel.asm	/^f0102be7:	ff b0 28 10 24 f0    	pushl  -0xfdbefd8(%eax)$/;"	l
f0102bed	obj/kern/kernel.asm	/^f0102bed:	e8 fd fe ff ff       	call   f0102aef <env_pop_tf>$/;"	l
f0102bf2	obj/kern/kernel.asm	/^f0102bf2 <mc146818_read>:$/;"	l
f0102bf2	obj/kern/kernel.asm	/^f0102bf2:	55                   	push   %ebp$/;"	l
f0102bf3	obj/kern/kernel.asm	/^f0102bf3:	89 e5                	mov    %esp,%ebp$/;"	l
f0102bf5	obj/kern/kernel.asm	/^f0102bf5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102bf8	obj/kern/kernel.asm	/^f0102bf8:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0102bfd	obj/kern/kernel.asm	/^f0102bfd:	ee                   	out    %al,(%dx)$/;"	l
f0102bfe	obj/kern/kernel.asm	/^f0102bfe:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0102c03	obj/kern/kernel.asm	/^f0102c03:	ec                   	in     (%dx),%al$/;"	l
f0102c04	obj/kern/kernel.asm	/^f0102c04:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0102c07	obj/kern/kernel.asm	/^f0102c07:	5d                   	pop    %ebp$/;"	l
f0102c08	obj/kern/kernel.asm	/^f0102c08:	c3                   	ret    $/;"	l
f0102c09	obj/kern/kernel.asm	/^f0102c09 <mc146818_write>:$/;"	l
f0102c09	obj/kern/kernel.asm	/^f0102c09:	55                   	push   %ebp$/;"	l
f0102c0a	obj/kern/kernel.asm	/^f0102c0a:	89 e5                	mov    %esp,%ebp$/;"	l
f0102c0c	obj/kern/kernel.asm	/^f0102c0c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102c0f	obj/kern/kernel.asm	/^f0102c0f:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0102c14	obj/kern/kernel.asm	/^f0102c14:	ee                   	out    %al,(%dx)$/;"	l
f0102c15	obj/kern/kernel.asm	/^f0102c15:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102c18	obj/kern/kernel.asm	/^f0102c18:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0102c1d	obj/kern/kernel.asm	/^f0102c1d:	ee                   	out    %al,(%dx)$/;"	l
f0102c1e	obj/kern/kernel.asm	/^f0102c1e:	5d                   	pop    %ebp$/;"	l
f0102c1f	obj/kern/kernel.asm	/^f0102c1f:	c3                   	ret    $/;"	l
f0102c20	obj/kern/kernel.asm	/^f0102c20 <irq_setmask_8259A>:$/;"	l
f0102c20	obj/kern/kernel.asm	/^f0102c20:	55                   	push   %ebp$/;"	l
f0102c21	obj/kern/kernel.asm	/^f0102c21:	89 e5                	mov    %esp,%ebp$/;"	l
f0102c23	obj/kern/kernel.asm	/^f0102c23:	56                   	push   %esi$/;"	l
f0102c24	obj/kern/kernel.asm	/^f0102c24:	53                   	push   %ebx$/;"	l
f0102c25	obj/kern/kernel.asm	/^f0102c25:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102c28	obj/kern/kernel.asm	/^f0102c28:	66 a3 88 f3 11 f0    	mov    %ax,0xf011f388$/;"	l
f0102c2e	obj/kern/kernel.asm	/^f0102c2e:	80 3d 50 02 24 f0 00 	cmpb   $0x0,0xf0240250$/;"	l
f0102c35	obj/kern/kernel.asm	/^f0102c35:	75 07                	jne    f0102c3e <irq_setmask_8259A+0x1e>$/;"	l
f0102c37	obj/kern/kernel.asm	/^f0102c37:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0102c3a	obj/kern/kernel.asm	/^f0102c3a:	5b                   	pop    %ebx$/;"	l
f0102c3b	obj/kern/kernel.asm	/^f0102c3b:	5e                   	pop    %esi$/;"	l
f0102c3c	obj/kern/kernel.asm	/^f0102c3c:	5d                   	pop    %ebp$/;"	l
f0102c3d	obj/kern/kernel.asm	/^f0102c3d:	c3                   	ret    $/;"	l
f0102c3e	obj/kern/kernel.asm	/^f0102c3e:	89 c6                	mov    %eax,%esi$/;"	l
f0102c40	obj/kern/kernel.asm	/^f0102c40:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0102c45	obj/kern/kernel.asm	/^f0102c45:	ee                   	out    %al,(%dx)$/;"	l
f0102c46	obj/kern/kernel.asm	/^f0102c46:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0102c4a	obj/kern/kernel.asm	/^f0102c4a:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f0102c4f	obj/kern/kernel.asm	/^f0102c4f:	ee                   	out    %al,(%dx)$/;"	l
f0102c50	obj/kern/kernel.asm	/^f0102c50:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102c53	obj/kern/kernel.asm	/^f0102c53:	68 5a 62 10 f0       	push   $0xf010625a$/;"	l
f0102c58	obj/kern/kernel.asm	/^f0102c58:	e8 28 01 00 00       	call   f0102d85 <cprintf>$/;"	l
f0102c5d	obj/kern/kernel.asm	/^f0102c5d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c60	obj/kern/kernel.asm	/^f0102c60:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102c65	obj/kern/kernel.asm	/^f0102c65:	0f b7 f6             	movzwl %si,%esi$/;"	l
f0102c68	obj/kern/kernel.asm	/^f0102c68:	f7 d6                	not    %esi$/;"	l
f0102c6a	obj/kern/kernel.asm	/^f0102c6a:	eb 08                	jmp    f0102c74 <irq_setmask_8259A+0x54>$/;"	l
f0102c6c	obj/kern/kernel.asm	/^f0102c6c:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0102c6f	obj/kern/kernel.asm	/^f0102c6f:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0102c72	obj/kern/kernel.asm	/^f0102c72:	74 18                	je     f0102c8c <irq_setmask_8259A+0x6c>$/;"	l
f0102c74	obj/kern/kernel.asm	/^f0102c74:	0f a3 de             	bt     %ebx,%esi$/;"	l
f0102c77	obj/kern/kernel.asm	/^f0102c77:	73 f3                	jae    f0102c6c <irq_setmask_8259A+0x4c>$/;"	l
f0102c79	obj/kern/kernel.asm	/^f0102c79:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102c7c	obj/kern/kernel.asm	/^f0102c7c:	53                   	push   %ebx$/;"	l
f0102c7d	obj/kern/kernel.asm	/^f0102c7d:	68 57 67 10 f0       	push   $0xf0106757$/;"	l
f0102c82	obj/kern/kernel.asm	/^f0102c82:	e8 fe 00 00 00       	call   f0102d85 <cprintf>$/;"	l
f0102c87	obj/kern/kernel.asm	/^f0102c87:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c8a	obj/kern/kernel.asm	/^f0102c8a:	eb e0                	jmp    f0102c6c <irq_setmask_8259A+0x4c>$/;"	l
f0102c8c	obj/kern/kernel.asm	/^f0102c8c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102c8f	obj/kern/kernel.asm	/^f0102c8f:	68 a1 5e 10 f0       	push   $0xf0105ea1$/;"	l
f0102c94	obj/kern/kernel.asm	/^f0102c94:	e8 ec 00 00 00       	call   f0102d85 <cprintf>$/;"	l
f0102c99	obj/kern/kernel.asm	/^f0102c99:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c9c	obj/kern/kernel.asm	/^f0102c9c:	eb 99                	jmp    f0102c37 <irq_setmask_8259A+0x17>$/;"	l
f0102c9e	obj/kern/kernel.asm	/^f0102c9e <pic_init>:$/;"	l
f0102c9e	obj/kern/kernel.asm	/^f0102c9e:	55                   	push   %ebp$/;"	l
f0102c9f	obj/kern/kernel.asm	/^f0102c9f:	89 e5                	mov    %esp,%ebp$/;"	l
f0102ca1	obj/kern/kernel.asm	/^f0102ca1:	57                   	push   %edi$/;"	l
f0102ca2	obj/kern/kernel.asm	/^f0102ca2:	56                   	push   %esi$/;"	l
f0102ca3	obj/kern/kernel.asm	/^f0102ca3:	53                   	push   %ebx$/;"	l
f0102ca4	obj/kern/kernel.asm	/^f0102ca4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102ca7	obj/kern/kernel.asm	/^f0102ca7:	c6 05 50 02 24 f0 01 	movb   $0x1,0xf0240250$/;"	l
f0102cae	obj/kern/kernel.asm	/^f0102cae:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0102cb3	obj/kern/kernel.asm	/^f0102cb3:	bb 21 00 00 00       	mov    $0x21,%ebx$/;"	l
f0102cb8	obj/kern/kernel.asm	/^f0102cb8:	89 da                	mov    %ebx,%edx$/;"	l
f0102cba	obj/kern/kernel.asm	/^f0102cba:	ee                   	out    %al,(%dx)$/;"	l
f0102cbb	obj/kern/kernel.asm	/^f0102cbb:	b9 a1 00 00 00       	mov    $0xa1,%ecx$/;"	l
f0102cc0	obj/kern/kernel.asm	/^f0102cc0:	89 ca                	mov    %ecx,%edx$/;"	l
f0102cc2	obj/kern/kernel.asm	/^f0102cc2:	ee                   	out    %al,(%dx)$/;"	l
f0102cc3	obj/kern/kernel.asm	/^f0102cc3:	bf 11 00 00 00       	mov    $0x11,%edi$/;"	l
f0102cc8	obj/kern/kernel.asm	/^f0102cc8:	be 20 00 00 00       	mov    $0x20,%esi$/;"	l
f0102ccd	obj/kern/kernel.asm	/^f0102ccd:	89 f8                	mov    %edi,%eax$/;"	l
f0102ccf	obj/kern/kernel.asm	/^f0102ccf:	89 f2                	mov    %esi,%edx$/;"	l
f0102cd1	obj/kern/kernel.asm	/^f0102cd1:	ee                   	out    %al,(%dx)$/;"	l
f0102cd2	obj/kern/kernel.asm	/^f0102cd2:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0102cd7	obj/kern/kernel.asm	/^f0102cd7:	89 da                	mov    %ebx,%edx$/;"	l
f0102cd9	obj/kern/kernel.asm	/^f0102cd9:	ee                   	out    %al,(%dx)$/;"	l
f0102cda	obj/kern/kernel.asm	/^f0102cda:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f0102cdf	obj/kern/kernel.asm	/^f0102cdf:	ee                   	out    %al,(%dx)$/;"	l
f0102ce0	obj/kern/kernel.asm	/^f0102ce0:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0102ce5	obj/kern/kernel.asm	/^f0102ce5:	ee                   	out    %al,(%dx)$/;"	l
f0102ce6	obj/kern/kernel.asm	/^f0102ce6:	bb a0 00 00 00       	mov    $0xa0,%ebx$/;"	l
f0102ceb	obj/kern/kernel.asm	/^f0102ceb:	89 f8                	mov    %edi,%eax$/;"	l
f0102ced	obj/kern/kernel.asm	/^f0102ced:	89 da                	mov    %ebx,%edx$/;"	l
f0102cef	obj/kern/kernel.asm	/^f0102cef:	ee                   	out    %al,(%dx)$/;"	l
f0102cf0	obj/kern/kernel.asm	/^f0102cf0:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f0102cf5	obj/kern/kernel.asm	/^f0102cf5:	89 ca                	mov    %ecx,%edx$/;"	l
f0102cf7	obj/kern/kernel.asm	/^f0102cf7:	ee                   	out    %al,(%dx)$/;"	l
f0102cf8	obj/kern/kernel.asm	/^f0102cf8:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0102cfd	obj/kern/kernel.asm	/^f0102cfd:	ee                   	out    %al,(%dx)$/;"	l
f0102cfe	obj/kern/kernel.asm	/^f0102cfe:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0102d03	obj/kern/kernel.asm	/^f0102d03:	ee                   	out    %al,(%dx)$/;"	l
f0102d04	obj/kern/kernel.asm	/^f0102d04:	bf 68 00 00 00       	mov    $0x68,%edi$/;"	l
f0102d09	obj/kern/kernel.asm	/^f0102d09:	89 f8                	mov    %edi,%eax$/;"	l
f0102d0b	obj/kern/kernel.asm	/^f0102d0b:	89 f2                	mov    %esi,%edx$/;"	l
f0102d0d	obj/kern/kernel.asm	/^f0102d0d:	ee                   	out    %al,(%dx)$/;"	l
f0102d0e	obj/kern/kernel.asm	/^f0102d0e:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0102d13	obj/kern/kernel.asm	/^f0102d13:	89 c8                	mov    %ecx,%eax$/;"	l
f0102d15	obj/kern/kernel.asm	/^f0102d15:	ee                   	out    %al,(%dx)$/;"	l
f0102d16	obj/kern/kernel.asm	/^f0102d16:	89 f8                	mov    %edi,%eax$/;"	l
f0102d18	obj/kern/kernel.asm	/^f0102d18:	89 da                	mov    %ebx,%edx$/;"	l
f0102d1a	obj/kern/kernel.asm	/^f0102d1a:	ee                   	out    %al,(%dx)$/;"	l
f0102d1b	obj/kern/kernel.asm	/^f0102d1b:	89 c8                	mov    %ecx,%eax$/;"	l
f0102d1d	obj/kern/kernel.asm	/^f0102d1d:	ee                   	out    %al,(%dx)$/;"	l
f0102d1e	obj/kern/kernel.asm	/^f0102d1e:	0f b7 05 88 f3 11 f0 	movzwl 0xf011f388,%eax$/;"	l
f0102d25	obj/kern/kernel.asm	/^f0102d25:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f0102d29	obj/kern/kernel.asm	/^f0102d29:	74 0f                	je     f0102d3a <pic_init+0x9c>$/;"	l
f0102d2b	obj/kern/kernel.asm	/^f0102d2b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102d2e	obj/kern/kernel.asm	/^f0102d2e:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0102d31	obj/kern/kernel.asm	/^f0102d31:	50                   	push   %eax$/;"	l
f0102d32	obj/kern/kernel.asm	/^f0102d32:	e8 e9 fe ff ff       	call   f0102c20 <irq_setmask_8259A>$/;"	l
f0102d37	obj/kern/kernel.asm	/^f0102d37:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d3a	obj/kern/kernel.asm	/^f0102d3a:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102d3d	obj/kern/kernel.asm	/^f0102d3d:	5b                   	pop    %ebx$/;"	l
f0102d3e	obj/kern/kernel.asm	/^f0102d3e:	5e                   	pop    %esi$/;"	l
f0102d3f	obj/kern/kernel.asm	/^f0102d3f:	5f                   	pop    %edi$/;"	l
f0102d40	obj/kern/kernel.asm	/^f0102d40:	5d                   	pop    %ebp$/;"	l
f0102d41	obj/kern/kernel.asm	/^f0102d41:	c3                   	ret    $/;"	l
f0102d42	obj/kern/kernel.asm	/^f0102d42 <putch>:$/;"	l
f0102d42	obj/kern/kernel.asm	/^f0102d42:	55                   	push   %ebp$/;"	l
f0102d43	obj/kern/kernel.asm	/^f0102d43:	89 e5                	mov    %esp,%ebp$/;"	l
f0102d45	obj/kern/kernel.asm	/^f0102d45:	53                   	push   %ebx$/;"	l
f0102d46	obj/kern/kernel.asm	/^f0102d46:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0102d49	obj/kern/kernel.asm	/^f0102d49:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0102d4c	obj/kern/kernel.asm	/^f0102d4c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0102d4f	obj/kern/kernel.asm	/^f0102d4f:	e8 06 da ff ff       	call   f010075a <cputchar>$/;"	l
f0102d54	obj/kern/kernel.asm	/^f0102d54:	83 03 01             	addl   $0x1,(%ebx)$/;"	l
f0102d57	obj/kern/kernel.asm	/^f0102d57:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d5a	obj/kern/kernel.asm	/^f0102d5a:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0102d5d	obj/kern/kernel.asm	/^f0102d5d:	c9                   	leave  $/;"	l
f0102d5e	obj/kern/kernel.asm	/^f0102d5e:	c3                   	ret    $/;"	l
f0102d5f	obj/kern/kernel.asm	/^f0102d5f <vcprintf>:$/;"	l
f0102d5f	obj/kern/kernel.asm	/^f0102d5f:	55                   	push   %ebp$/;"	l
f0102d60	obj/kern/kernel.asm	/^f0102d60:	89 e5                	mov    %esp,%ebp$/;"	l
f0102d62	obj/kern/kernel.asm	/^f0102d62:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0102d65	obj/kern/kernel.asm	/^f0102d65:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0102d6c	obj/kern/kernel.asm	/^f0102d6c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0102d6f	obj/kern/kernel.asm	/^f0102d6f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0102d72	obj/kern/kernel.asm	/^f0102d72:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0102d75	obj/kern/kernel.asm	/^f0102d75:	50                   	push   %eax$/;"	l
f0102d76	obj/kern/kernel.asm	/^f0102d76:	68 42 2d 10 f0       	push   $0xf0102d42$/;"	l
f0102d7b	obj/kern/kernel.asm	/^f0102d7b:	e8 49 10 00 00       	call   f0103dc9 <vprintfmt>$/;"	l
f0102d80	obj/kern/kernel.asm	/^f0102d80:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102d83	obj/kern/kernel.asm	/^f0102d83:	c9                   	leave  $/;"	l
f0102d84	obj/kern/kernel.asm	/^f0102d84:	c3                   	ret    $/;"	l
f0102d85	obj/kern/kernel.asm	/^f0102d85 <cprintf>:$/;"	l
f0102d85	obj/kern/kernel.asm	/^f0102d85:	55                   	push   %ebp$/;"	l
f0102d86	obj/kern/kernel.asm	/^f0102d86:	89 e5                	mov    %esp,%ebp$/;"	l
f0102d88	obj/kern/kernel.asm	/^f0102d88:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0102d8b	obj/kern/kernel.asm	/^f0102d8b:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0102d8e	obj/kern/kernel.asm	/^f0102d8e:	50                   	push   %eax$/;"	l
f0102d8f	obj/kern/kernel.asm	/^f0102d8f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0102d92	obj/kern/kernel.asm	/^f0102d92:	e8 c8 ff ff ff       	call   f0102d5f <vcprintf>$/;"	l
f0102d97	obj/kern/kernel.asm	/^f0102d97:	c9                   	leave  $/;"	l
f0102d98	obj/kern/kernel.asm	/^f0102d98:	c3                   	ret    $/;"	l
f0102d99	obj/kern/kernel.asm	/^f0102d99 <load_idt>:$/;"	l
f0102d99	obj/kern/kernel.asm	/^f0102d99:	55                   	push   %ebp$/;"	l
f0102d9a	obj/kern/kernel.asm	/^f0102d9a:	89 e5                	mov    %esp,%ebp$/;"	l
f0102d9c	obj/kern/kernel.asm	/^f0102d9c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102d9f	obj/kern/kernel.asm	/^f0102d9f:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0102da2	obj/kern/kernel.asm	/^f0102da2:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0102da5	obj/kern/kernel.asm	/^f0102da5:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0102da8	obj/kern/kernel.asm	/^f0102da8:	74 41                	je     f0102deb <load_idt+0x52>$/;"	l
f0102daa	obj/kern/kernel.asm	/^f0102daa:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0102dad	obj/kern/kernel.asm	/^f0102dad:	74 3c                	je     f0102deb <load_idt+0x52>$/;"	l
f0102daf	obj/kern/kernel.asm	/^f0102daf:	66 89 14 c5 60 02 24 	mov    %dx,-0xfdbfda0(,%eax,8)$/;"	l
f0102db6	obj/kern/kernel.asm	/^f0102db6:	f0 $/;"	l
f0102db7	obj/kern/kernel.asm	/^f0102db7:	66 c7 04 c5 62 02 24 	movw   $0x8,-0xfdbfd9e(,%eax,8)$/;"	l
f0102dbe	obj/kern/kernel.asm	/^f0102dbe:	f0 08 00 $/;"	l
f0102dc1	obj/kern/kernel.asm	/^f0102dc1:	c6 04 c5 64 02 24 f0 	movb   $0x0,-0xfdbfd9c(,%eax,8)$/;"	l
f0102dc8	obj/kern/kernel.asm	/^f0102dc8:	00 $/;"	l
f0102dc9	obj/kern/kernel.asm	/^f0102dc9:	84 c9                	test   %cl,%cl$/;"	l
f0102dcb	obj/kern/kernel.asm	/^f0102dcb:	0f 95 c1             	setne  %cl$/;"	l
f0102dce	obj/kern/kernel.asm	/^f0102dce:	83 c1 0e             	add    $0xe,%ecx$/;"	l
f0102dd1	obj/kern/kernel.asm	/^f0102dd1:	83 e1 0f             	and    $0xf,%ecx$/;"	l
f0102dd4	obj/kern/kernel.asm	/^f0102dd4:	83 c9 80             	or     $0xffffff80,%ecx$/;"	l
f0102dd7	obj/kern/kernel.asm	/^f0102dd7:	88 0c c5 65 02 24 f0 	mov    %cl,-0xfdbfd9b(,%eax,8)$/;"	l
f0102dde	obj/kern/kernel.asm	/^f0102dde:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0102de1	obj/kern/kernel.asm	/^f0102de1:	66 89 14 c5 66 02 24 	mov    %dx,-0xfdbfd9a(,%eax,8)$/;"	l
f0102de8	obj/kern/kernel.asm	/^f0102de8:	f0 $/;"	l
f0102de9	obj/kern/kernel.asm	/^f0102de9:	eb 3a                	jmp    f0102e25 <load_idt+0x8c>$/;"	l
f0102deb	obj/kern/kernel.asm	/^f0102deb:	66 89 14 c5 60 02 24 	mov    %dx,-0xfdbfda0(,%eax,8)$/;"	l
f0102df2	obj/kern/kernel.asm	/^f0102df2:	f0 $/;"	l
f0102df3	obj/kern/kernel.asm	/^f0102df3:	66 c7 04 c5 62 02 24 	movw   $0x8,-0xfdbfd9e(,%eax,8)$/;"	l
f0102dfa	obj/kern/kernel.asm	/^f0102dfa:	f0 08 00 $/;"	l
f0102dfd	obj/kern/kernel.asm	/^f0102dfd:	c6 04 c5 64 02 24 f0 	movb   $0x0,-0xfdbfd9c(,%eax,8)$/;"	l
f0102e04	obj/kern/kernel.asm	/^f0102e04:	00 $/;"	l
f0102e05	obj/kern/kernel.asm	/^f0102e05:	84 c9                	test   %cl,%cl$/;"	l
f0102e07	obj/kern/kernel.asm	/^f0102e07:	0f 95 c1             	setne  %cl$/;"	l
f0102e0a	obj/kern/kernel.asm	/^f0102e0a:	83 c1 0e             	add    $0xe,%ecx$/;"	l
f0102e0d	obj/kern/kernel.asm	/^f0102e0d:	83 e1 0f             	and    $0xf,%ecx$/;"	l
f0102e10	obj/kern/kernel.asm	/^f0102e10:	83 c9 e0             	or     $0xffffffe0,%ecx$/;"	l
f0102e13	obj/kern/kernel.asm	/^f0102e13:	88 0c c5 65 02 24 f0 	mov    %cl,-0xfdbfd9b(,%eax,8)$/;"	l
f0102e1a	obj/kern/kernel.asm	/^f0102e1a:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0102e1d	obj/kern/kernel.asm	/^f0102e1d:	66 89 14 c5 66 02 24 	mov    %dx,-0xfdbfd9a(,%eax,8)$/;"	l
f0102e24	obj/kern/kernel.asm	/^f0102e24:	f0 $/;"	l
f0102e25	obj/kern/kernel.asm	/^f0102e25:	5d                   	pop    %ebp$/;"	l
f0102e26	obj/kern/kernel.asm	/^f0102e26:	c3                   	ret    $/;"	l
f0102e27	obj/kern/kernel.asm	/^f0102e27 <trap_init_percpu>:$/;"	l
f0102e27	obj/kern/kernel.asm	/^f0102e27:	55                   	push   %ebp$/;"	l
f0102e28	obj/kern/kernel.asm	/^f0102e28:	89 e5                	mov    %esp,%ebp$/;"	l
f0102e2a	obj/kern/kernel.asm	/^f0102e2a:	b8 80 0a 24 f0       	mov    $0xf0240a80,%eax$/;"	l
f0102e2f	obj/kern/kernel.asm	/^f0102e2f:	c7 05 84 0a 24 f0 00 	movl   $0xf0000000,0xf0240a84$/;"	l
f0102e36	obj/kern/kernel.asm	/^f0102e36:	00 00 f0 $/;"	l
f0102e39	obj/kern/kernel.asm	/^f0102e39:	66 c7 05 88 0a 24 f0 	movw   $0x10,0xf0240a88$/;"	l
f0102e40	obj/kern/kernel.asm	/^f0102e40:	10 00 $/;"	l
f0102e42	obj/kern/kernel.asm	/^f0102e42:	66 c7 05 e6 0a 24 f0 	movw   $0x68,0xf0240ae6$/;"	l
f0102e49	obj/kern/kernel.asm	/^f0102e49:	68 00 $/;"	l
f0102e4b	obj/kern/kernel.asm	/^f0102e4b:	66 c7 05 48 f3 11 f0 	movw   $0x67,0xf011f348$/;"	l
f0102e52	obj/kern/kernel.asm	/^f0102e52:	67 00 $/;"	l
f0102e54	obj/kern/kernel.asm	/^f0102e54:	66 a3 4a f3 11 f0    	mov    %ax,0xf011f34a$/;"	l
f0102e5a	obj/kern/kernel.asm	/^f0102e5a:	89 c2                	mov    %eax,%edx$/;"	l
f0102e5c	obj/kern/kernel.asm	/^f0102e5c:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0102e5f	obj/kern/kernel.asm	/^f0102e5f:	88 15 4c f3 11 f0    	mov    %dl,0xf011f34c$/;"	l
f0102e65	obj/kern/kernel.asm	/^f0102e65:	c6 05 4e f3 11 f0 40 	movb   $0x40,0xf011f34e$/;"	l
f0102e6c	obj/kern/kernel.asm	/^f0102e6c:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0102e6f	obj/kern/kernel.asm	/^f0102e6f:	a2 4f f3 11 f0       	mov    %al,0xf011f34f$/;"	l
f0102e74	obj/kern/kernel.asm	/^f0102e74:	c6 05 4d f3 11 f0 89 	movb   $0x89,0xf011f34d$/;"	l
f0102e7b	obj/kern/kernel.asm	/^f0102e7b:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f0102e80	obj/kern/kernel.asm	/^f0102e80:	0f 00 d8             	ltr    %ax$/;"	l
f0102e83	obj/kern/kernel.asm	/^f0102e83:	b8 8c f3 11 f0       	mov    $0xf011f38c,%eax$/;"	l
f0102e88	obj/kern/kernel.asm	/^f0102e88:	0f 01 18             	lidtl  (%eax)$/;"	l
f0102e8b	obj/kern/kernel.asm	/^f0102e8b:	5d                   	pop    %ebp$/;"	l
f0102e8c	obj/kern/kernel.asm	/^f0102e8c:	c3                   	ret    $/;"	l
f0102e8d	obj/kern/kernel.asm	/^f0102e8d <trap_init>:$/;"	l
f0102e8d	obj/kern/kernel.asm	/^f0102e8d:	55                   	push   %ebp$/;"	l
f0102e8e	obj/kern/kernel.asm	/^f0102e8e:	89 e5                	mov    %esp,%ebp$/;"	l
f0102e90	obj/kern/kernel.asm	/^f0102e90:	68 8e 34 10 f0       	push   $0xf010348e$/;"	l
f0102e95	obj/kern/kernel.asm	/^f0102e95:	6a 01                	push   $0x1$/;"	l
f0102e97	obj/kern/kernel.asm	/^f0102e97:	6a 00                	push   $0x0$/;"	l
f0102e99	obj/kern/kernel.asm	/^f0102e99:	e8 fb fe ff ff       	call   f0102d99 <load_idt>$/;"	l
f0102e9e	obj/kern/kernel.asm	/^f0102e9e:	68 94 34 10 f0       	push   $0xf0103494$/;"	l
f0102ea3	obj/kern/kernel.asm	/^f0102ea3:	6a 01                	push   $0x1$/;"	l
f0102ea5	obj/kern/kernel.asm	/^f0102ea5:	6a 01                	push   $0x1$/;"	l
f0102ea7	obj/kern/kernel.asm	/^f0102ea7:	e8 ed fe ff ff       	call   f0102d99 <load_idt>$/;"	l
f0102eac	obj/kern/kernel.asm	/^f0102eac:	68 9a 34 10 f0       	push   $0xf010349a$/;"	l
f0102eb1	obj/kern/kernel.asm	/^f0102eb1:	6a 00                	push   $0x0$/;"	l
f0102eb3	obj/kern/kernel.asm	/^f0102eb3:	6a 02                	push   $0x2$/;"	l
f0102eb5	obj/kern/kernel.asm	/^f0102eb5:	e8 df fe ff ff       	call   f0102d99 <load_idt>$/;"	l
f0102eba	obj/kern/kernel.asm	/^f0102eba:	83 c4 24             	add    $0x24,%esp$/;"	l
f0102ebd	obj/kern/kernel.asm	/^f0102ebd:	68 a0 34 10 f0       	push   $0xf01034a0$/;"	l
f0102ec2	obj/kern/kernel.asm	/^f0102ec2:	6a 01                	push   $0x1$/;"	l
f0102ec4	obj/kern/kernel.asm	/^f0102ec4:	6a 03                	push   $0x3$/;"	l
f0102ec6	obj/kern/kernel.asm	/^f0102ec6:	e8 ce fe ff ff       	call   f0102d99 <load_idt>$/;"	l
f0102ecb	obj/kern/kernel.asm	/^f0102ecb:	68 a6 34 10 f0       	push   $0xf01034a6$/;"	l
f0102ed0	obj/kern/kernel.asm	/^f0102ed0:	6a 01                	push   $0x1$/;"	l
f0102ed2	obj/kern/kernel.asm	/^f0102ed2:	6a 04                	push   $0x4$/;"	l
f0102ed4	obj/kern/kernel.asm	/^f0102ed4:	e8 c0 fe ff ff       	call   f0102d99 <load_idt>$/;"	l
f0102ed9	obj/kern/kernel.asm	/^f0102ed9:	68 ac 34 10 f0       	push   $0xf01034ac$/;"	l
f0102ede	obj/kern/kernel.asm	/^f0102ede:	6a 01                	push   $0x1$/;"	l
f0102ee0	obj/kern/kernel.asm	/^f0102ee0:	6a 05                	push   $0x5$/;"	l
f0102ee2	obj/kern/kernel.asm	/^f0102ee2:	e8 b2 fe ff ff       	call   f0102d99 <load_idt>$/;"	l
f0102ee7	obj/kern/kernel.asm	/^f0102ee7:	83 c4 24             	add    $0x24,%esp$/;"	l
f0102eea	obj/kern/kernel.asm	/^f0102eea:	68 b2 34 10 f0       	push   $0xf01034b2$/;"	l
f0102eef	obj/kern/kernel.asm	/^f0102eef:	6a 00                	push   $0x0$/;"	l
f0102ef1	obj/kern/kernel.asm	/^f0102ef1:	6a 06                	push   $0x6$/;"	l
f0102ef3	obj/kern/kernel.asm	/^f0102ef3:	e8 a1 fe ff ff       	call   f0102d99 <load_idt>$/;"	l
f0102ef8	obj/kern/kernel.asm	/^f0102ef8:	68 b8 34 10 f0       	push   $0xf01034b8$/;"	l
f0102efd	obj/kern/kernel.asm	/^f0102efd:	6a 00                	push   $0x0$/;"	l
f0102eff	obj/kern/kernel.asm	/^f0102eff:	6a 07                	push   $0x7$/;"	l
f0102f01	obj/kern/kernel.asm	/^f0102f01:	e8 93 fe ff ff       	call   f0102d99 <load_idt>$/;"	l
f0102f06	obj/kern/kernel.asm	/^f0102f06:	68 be 34 10 f0       	push   $0xf01034be$/;"	l
f0102f0b	obj/kern/kernel.asm	/^f0102f0b:	6a 00                	push   $0x0$/;"	l
f0102f0d	obj/kern/kernel.asm	/^f0102f0d:	6a 08                	push   $0x8$/;"	l
f0102f0f	obj/kern/kernel.asm	/^f0102f0f:	e8 85 fe ff ff       	call   f0102d99 <load_idt>$/;"	l
f0102f14	obj/kern/kernel.asm	/^f0102f14:	83 c4 24             	add    $0x24,%esp$/;"	l
f0102f17	obj/kern/kernel.asm	/^f0102f17:	68 c2 34 10 f0       	push   $0xf01034c2$/;"	l
f0102f1c	obj/kern/kernel.asm	/^f0102f1c:	6a 00                	push   $0x0$/;"	l
f0102f1e	obj/kern/kernel.asm	/^f0102f1e:	6a 0a                	push   $0xa$/;"	l
f0102f20	obj/kern/kernel.asm	/^f0102f20:	e8 74 fe ff ff       	call   f0102d99 <load_idt>$/;"	l
f0102f25	obj/kern/kernel.asm	/^f0102f25:	68 c6 34 10 f0       	push   $0xf01034c6$/;"	l
f0102f2a	obj/kern/kernel.asm	/^f0102f2a:	6a 00                	push   $0x0$/;"	l
f0102f2c	obj/kern/kernel.asm	/^f0102f2c:	6a 0b                	push   $0xb$/;"	l
f0102f2e	obj/kern/kernel.asm	/^f0102f2e:	e8 66 fe ff ff       	call   f0102d99 <load_idt>$/;"	l
f0102f33	obj/kern/kernel.asm	/^f0102f33:	68 ca 34 10 f0       	push   $0xf01034ca$/;"	l
f0102f38	obj/kern/kernel.asm	/^f0102f38:	6a 01                	push   $0x1$/;"	l
f0102f3a	obj/kern/kernel.asm	/^f0102f3a:	6a 0c                	push   $0xc$/;"	l
f0102f3c	obj/kern/kernel.asm	/^f0102f3c:	e8 58 fe ff ff       	call   f0102d99 <load_idt>$/;"	l
f0102f41	obj/kern/kernel.asm	/^f0102f41:	83 c4 24             	add    $0x24,%esp$/;"	l
f0102f44	obj/kern/kernel.asm	/^f0102f44:	68 ce 34 10 f0       	push   $0xf01034ce$/;"	l
f0102f49	obj/kern/kernel.asm	/^f0102f49:	6a 00                	push   $0x0$/;"	l
f0102f4b	obj/kern/kernel.asm	/^f0102f4b:	6a 0d                	push   $0xd$/;"	l
f0102f4d	obj/kern/kernel.asm	/^f0102f4d:	e8 47 fe ff ff       	call   f0102d99 <load_idt>$/;"	l
f0102f52	obj/kern/kernel.asm	/^f0102f52:	68 d2 34 10 f0       	push   $0xf01034d2$/;"	l
f0102f57	obj/kern/kernel.asm	/^f0102f57:	6a 01                	push   $0x1$/;"	l
f0102f59	obj/kern/kernel.asm	/^f0102f59:	6a 0e                	push   $0xe$/;"	l
f0102f5b	obj/kern/kernel.asm	/^f0102f5b:	e8 39 fe ff ff       	call   f0102d99 <load_idt>$/;"	l
f0102f60	obj/kern/kernel.asm	/^f0102f60:	68 d6 34 10 f0       	push   $0xf01034d6$/;"	l
f0102f65	obj/kern/kernel.asm	/^f0102f65:	6a 00                	push   $0x0$/;"	l
f0102f67	obj/kern/kernel.asm	/^f0102f67:	6a 10                	push   $0x10$/;"	l
f0102f69	obj/kern/kernel.asm	/^f0102f69:	e8 2b fe ff ff       	call   f0102d99 <load_idt>$/;"	l
f0102f6e	obj/kern/kernel.asm	/^f0102f6e:	83 c4 24             	add    $0x24,%esp$/;"	l
f0102f71	obj/kern/kernel.asm	/^f0102f71:	68 dc 34 10 f0       	push   $0xf01034dc$/;"	l
f0102f76	obj/kern/kernel.asm	/^f0102f76:	6a 01                	push   $0x1$/;"	l
f0102f78	obj/kern/kernel.asm	/^f0102f78:	6a 11                	push   $0x11$/;"	l
f0102f7a	obj/kern/kernel.asm	/^f0102f7a:	e8 1a fe ff ff       	call   f0102d99 <load_idt>$/;"	l
f0102f7f	obj/kern/kernel.asm	/^f0102f7f:	68 e0 34 10 f0       	push   $0xf01034e0$/;"	l
f0102f84	obj/kern/kernel.asm	/^f0102f84:	6a 01                	push   $0x1$/;"	l
f0102f86	obj/kern/kernel.asm	/^f0102f86:	6a 12                	push   $0x12$/;"	l
f0102f88	obj/kern/kernel.asm	/^f0102f88:	e8 0c fe ff ff       	call   f0102d99 <load_idt>$/;"	l
f0102f8d	obj/kern/kernel.asm	/^f0102f8d:	68 c6 34 10 f0       	push   $0xf01034c6$/;"	l
f0102f92	obj/kern/kernel.asm	/^f0102f92:	6a 00                	push   $0x0$/;"	l
f0102f94	obj/kern/kernel.asm	/^f0102f94:	6a 13                	push   $0x13$/;"	l
f0102f96	obj/kern/kernel.asm	/^f0102f96:	e8 fe fd ff ff       	call   f0102d99 <load_idt>$/;"	l
f0102f9b	obj/kern/kernel.asm	/^f0102f9b:	83 c4 24             	add    $0x24,%esp$/;"	l
f0102f9e	obj/kern/kernel.asm	/^f0102f9e:	68 ec 34 10 f0       	push   $0xf01034ec$/;"	l
f0102fa3	obj/kern/kernel.asm	/^f0102fa3:	6a 01                	push   $0x1$/;"	l
f0102fa5	obj/kern/kernel.asm	/^f0102fa5:	6a 30                	push   $0x30$/;"	l
f0102fa7	obj/kern/kernel.asm	/^f0102fa7:	e8 ed fd ff ff       	call   f0102d99 <load_idt>$/;"	l
f0102fac	obj/kern/kernel.asm	/^f0102fac:	e8 76 fe ff ff       	call   f0102e27 <trap_init_percpu>$/;"	l
f0102fb1	obj/kern/kernel.asm	/^f0102fb1:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102fb4	obj/kern/kernel.asm	/^f0102fb4:	c9                   	leave  $/;"	l
f0102fb5	obj/kern/kernel.asm	/^f0102fb5:	c3                   	ret    $/;"	l
f0102fb6	obj/kern/kernel.asm	/^f0102fb6 <print_regs>:$/;"	l
f0102fb6	obj/kern/kernel.asm	/^f0102fb6:	55                   	push   %ebp$/;"	l
f0102fb7	obj/kern/kernel.asm	/^f0102fb7:	89 e5                	mov    %esp,%ebp$/;"	l
f0102fb9	obj/kern/kernel.asm	/^f0102fb9:	53                   	push   %ebx$/;"	l
f0102fba	obj/kern/kernel.asm	/^f0102fba:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102fbd	obj/kern/kernel.asm	/^f0102fbd:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0102fc0	obj/kern/kernel.asm	/^f0102fc0:	ff 33                	pushl  (%ebx)$/;"	l
f0102fc2	obj/kern/kernel.asm	/^f0102fc2:	68 6e 62 10 f0       	push   $0xf010626e$/;"	l
f0102fc7	obj/kern/kernel.asm	/^f0102fc7:	e8 b9 fd ff ff       	call   f0102d85 <cprintf>$/;"	l
f0102fcc	obj/kern/kernel.asm	/^f0102fcc:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102fcf	obj/kern/kernel.asm	/^f0102fcf:	ff 73 04             	pushl  0x4(%ebx)$/;"	l
f0102fd2	obj/kern/kernel.asm	/^f0102fd2:	68 7d 62 10 f0       	push   $0xf010627d$/;"	l
f0102fd7	obj/kern/kernel.asm	/^f0102fd7:	e8 a9 fd ff ff       	call   f0102d85 <cprintf>$/;"	l
f0102fdc	obj/kern/kernel.asm	/^f0102fdc:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102fdf	obj/kern/kernel.asm	/^f0102fdf:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0102fe2	obj/kern/kernel.asm	/^f0102fe2:	68 8c 62 10 f0       	push   $0xf010628c$/;"	l
f0102fe7	obj/kern/kernel.asm	/^f0102fe7:	e8 99 fd ff ff       	call   f0102d85 <cprintf>$/;"	l
f0102fec	obj/kern/kernel.asm	/^f0102fec:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102fef	obj/kern/kernel.asm	/^f0102fef:	ff 73 0c             	pushl  0xc(%ebx)$/;"	l
f0102ff2	obj/kern/kernel.asm	/^f0102ff2:	68 9b 62 10 f0       	push   $0xf010629b$/;"	l
f0102ff7	obj/kern/kernel.asm	/^f0102ff7:	e8 89 fd ff ff       	call   f0102d85 <cprintf>$/;"	l
f0102ffc	obj/kern/kernel.asm	/^f0102ffc:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102fff	obj/kern/kernel.asm	/^f0102fff:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f0103002	obj/kern/kernel.asm	/^f0103002:	68 aa 62 10 f0       	push   $0xf01062aa$/;"	l
f0103007	obj/kern/kernel.asm	/^f0103007:	e8 79 fd ff ff       	call   f0102d85 <cprintf>$/;"	l
f010300c	obj/kern/kernel.asm	/^f010300c:	83 c4 08             	add    $0x8,%esp$/;"	l
f010300f	obj/kern/kernel.asm	/^f010300f:	ff 73 14             	pushl  0x14(%ebx)$/;"	l
f0103012	obj/kern/kernel.asm	/^f0103012:	68 b9 62 10 f0       	push   $0xf01062b9$/;"	l
f0103017	obj/kern/kernel.asm	/^f0103017:	e8 69 fd ff ff       	call   f0102d85 <cprintf>$/;"	l
f010301c	obj/kern/kernel.asm	/^f010301c:	83 c4 08             	add    $0x8,%esp$/;"	l
f010301f	obj/kern/kernel.asm	/^f010301f:	ff 73 18             	pushl  0x18(%ebx)$/;"	l
f0103022	obj/kern/kernel.asm	/^f0103022:	68 c8 62 10 f0       	push   $0xf01062c8$/;"	l
f0103027	obj/kern/kernel.asm	/^f0103027:	e8 59 fd ff ff       	call   f0102d85 <cprintf>$/;"	l
f010302c	obj/kern/kernel.asm	/^f010302c:	83 c4 08             	add    $0x8,%esp$/;"	l
f010302f	obj/kern/kernel.asm	/^f010302f:	ff 73 1c             	pushl  0x1c(%ebx)$/;"	l
f0103032	obj/kern/kernel.asm	/^f0103032:	68 d7 62 10 f0       	push   $0xf01062d7$/;"	l
f0103037	obj/kern/kernel.asm	/^f0103037:	e8 49 fd ff ff       	call   f0102d85 <cprintf>$/;"	l
f010303c	obj/kern/kernel.asm	/^f010303c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010303f	obj/kern/kernel.asm	/^f010303f:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103042	obj/kern/kernel.asm	/^f0103042:	c9                   	leave  $/;"	l
f0103043	obj/kern/kernel.asm	/^f0103043:	c3                   	ret    $/;"	l
f0103044	obj/kern/kernel.asm	/^f0103044 <print_trapframe>:$/;"	l
f0103044	obj/kern/kernel.asm	/^f0103044:	55                   	push   %ebp$/;"	l
f0103045	obj/kern/kernel.asm	/^f0103045:	89 e5                	mov    %esp,%ebp$/;"	l
f0103047	obj/kern/kernel.asm	/^f0103047:	56                   	push   %esi$/;"	l
f0103048	obj/kern/kernel.asm	/^f0103048:	53                   	push   %ebx$/;"	l
f0103049	obj/kern/kernel.asm	/^f0103049:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010304c	obj/kern/kernel.asm	/^f010304c:	e8 fe 1b 00 00       	call   f0104c4f <cpunum>$/;"	l
f0103051	obj/kern/kernel.asm	/^f0103051:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103054	obj/kern/kernel.asm	/^f0103054:	50                   	push   %eax$/;"	l
f0103055	obj/kern/kernel.asm	/^f0103055:	53                   	push   %ebx$/;"	l
f0103056	obj/kern/kernel.asm	/^f0103056:	68 3b 63 10 f0       	push   $0xf010633b$/;"	l
f010305b	obj/kern/kernel.asm	/^f010305b:	e8 25 fd ff ff       	call   f0102d85 <cprintf>$/;"	l
f0103060	obj/kern/kernel.asm	/^f0103060:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103063	obj/kern/kernel.asm	/^f0103063:	e8 4e ff ff ff       	call   f0102fb6 <print_regs>$/;"	l
f0103068	obj/kern/kernel.asm	/^f0103068:	83 c4 08             	add    $0x8,%esp$/;"	l
f010306b	obj/kern/kernel.asm	/^f010306b:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f010306f	obj/kern/kernel.asm	/^f010306f:	50                   	push   %eax$/;"	l
f0103070	obj/kern/kernel.asm	/^f0103070:	68 59 63 10 f0       	push   $0xf0106359$/;"	l
f0103075	obj/kern/kernel.asm	/^f0103075:	e8 0b fd ff ff       	call   f0102d85 <cprintf>$/;"	l
f010307a	obj/kern/kernel.asm	/^f010307a:	83 c4 08             	add    $0x8,%esp$/;"	l
f010307d	obj/kern/kernel.asm	/^f010307d:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f0103081	obj/kern/kernel.asm	/^f0103081:	50                   	push   %eax$/;"	l
f0103082	obj/kern/kernel.asm	/^f0103082:	68 6c 63 10 f0       	push   $0xf010636c$/;"	l
f0103087	obj/kern/kernel.asm	/^f0103087:	e8 f9 fc ff ff       	call   f0102d85 <cprintf>$/;"	l
f010308c	obj/kern/kernel.asm	/^f010308c:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f010308f	obj/kern/kernel.asm	/^f010308f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103092	obj/kern/kernel.asm	/^f0103092:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0103095	obj/kern/kernel.asm	/^f0103095:	76 1f                	jbe    f01030b6 <print_trapframe+0x72>$/;"	l
f0103097	obj/kern/kernel.asm	/^f0103097:	ba e6 62 10 f0       	mov    $0xf01062e6,%edx$/;"	l
f010309c	obj/kern/kernel.asm	/^f010309c:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f010309f	obj/kern/kernel.asm	/^f010309f:	74 1c                	je     f01030bd <print_trapframe+0x79>$/;"	l
f01030a1	obj/kern/kernel.asm	/^f01030a1:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f01030a4	obj/kern/kernel.asm	/^f01030a4:	83 fa 10             	cmp    $0x10,%edx$/;"	l
f01030a7	obj/kern/kernel.asm	/^f01030a7:	ba f2 62 10 f0       	mov    $0xf01062f2,%edx$/;"	l
f01030ac	obj/kern/kernel.asm	/^f01030ac:	b9 05 63 10 f0       	mov    $0xf0106305,%ecx$/;"	l
f01030b1	obj/kern/kernel.asm	/^f01030b1:	0f 43 d1             	cmovae %ecx,%edx$/;"	l
f01030b4	obj/kern/kernel.asm	/^f01030b4:	eb 07                	jmp    f01030bd <print_trapframe+0x79>$/;"	l
f01030b6	obj/kern/kernel.asm	/^f01030b6:	8b 14 85 00 66 10 f0 	mov    -0xfef9a00(,%eax,4),%edx$/;"	l
f01030bd	obj/kern/kernel.asm	/^f01030bd:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01030c0	obj/kern/kernel.asm	/^f01030c0:	52                   	push   %edx$/;"	l
f01030c1	obj/kern/kernel.asm	/^f01030c1:	50                   	push   %eax$/;"	l
f01030c2	obj/kern/kernel.asm	/^f01030c2:	68 7f 63 10 f0       	push   $0xf010637f$/;"	l
f01030c7	obj/kern/kernel.asm	/^f01030c7:	e8 b9 fc ff ff       	call   f0102d85 <cprintf>$/;"	l
f01030cc	obj/kern/kernel.asm	/^f01030cc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01030cf	obj/kern/kernel.asm	/^f01030cf:	39 1d 60 0a 24 f0    	cmp    %ebx,0xf0240a60$/;"	l
f01030d5	obj/kern/kernel.asm	/^f01030d5:	0f 84 a6 00 00 00    	je     f0103181 <print_trapframe+0x13d>$/;"	l
f01030db	obj/kern/kernel.asm	/^f01030db:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01030de	obj/kern/kernel.asm	/^f01030de:	ff 73 2c             	pushl  0x2c(%ebx)$/;"	l
f01030e1	obj/kern/kernel.asm	/^f01030e1:	68 a0 63 10 f0       	push   $0xf01063a0$/;"	l
f01030e6	obj/kern/kernel.asm	/^f01030e6:	e8 9a fc ff ff       	call   f0102d85 <cprintf>$/;"	l
f01030eb	obj/kern/kernel.asm	/^f01030eb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01030ee	obj/kern/kernel.asm	/^f01030ee:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f01030f2	obj/kern/kernel.asm	/^f01030f2:	0f 85 ac 00 00 00    	jne    f01031a4 <print_trapframe+0x160>$/;"	l
f01030f8	obj/kern/kernel.asm	/^f01030f8:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f01030fb	obj/kern/kernel.asm	/^f01030fb:	89 c2                	mov    %eax,%edx$/;"	l
f01030fd	obj/kern/kernel.asm	/^f01030fd:	83 e2 01             	and    $0x1,%edx$/;"	l
f0103100	obj/kern/kernel.asm	/^f0103100:	b9 14 63 10 f0       	mov    $0xf0106314,%ecx$/;"	l
f0103105	obj/kern/kernel.asm	/^f0103105:	ba 1f 63 10 f0       	mov    $0xf010631f,%edx$/;"	l
f010310a	obj/kern/kernel.asm	/^f010310a:	0f 44 ca             	cmove  %edx,%ecx$/;"	l
f010310d	obj/kern/kernel.asm	/^f010310d:	89 c2                	mov    %eax,%edx$/;"	l
f010310f	obj/kern/kernel.asm	/^f010310f:	83 e2 02             	and    $0x2,%edx$/;"	l
f0103112	obj/kern/kernel.asm	/^f0103112:	be 2b 63 10 f0       	mov    $0xf010632b,%esi$/;"	l
f0103117	obj/kern/kernel.asm	/^f0103117:	ba 31 63 10 f0       	mov    $0xf0106331,%edx$/;"	l
f010311c	obj/kern/kernel.asm	/^f010311c:	0f 45 d6             	cmovne %esi,%edx$/;"	l
f010311f	obj/kern/kernel.asm	/^f010311f:	83 e0 04             	and    $0x4,%eax$/;"	l
f0103122	obj/kern/kernel.asm	/^f0103122:	b8 36 63 10 f0       	mov    $0xf0106336,%eax$/;"	l
f0103127	obj/kern/kernel.asm	/^f0103127:	be 6b 64 10 f0       	mov    $0xf010646b,%esi$/;"	l
f010312c	obj/kern/kernel.asm	/^f010312c:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f010312f	obj/kern/kernel.asm	/^f010312f:	51                   	push   %ecx$/;"	l
f0103130	obj/kern/kernel.asm	/^f0103130:	52                   	push   %edx$/;"	l
f0103131	obj/kern/kernel.asm	/^f0103131:	50                   	push   %eax$/;"	l
f0103132	obj/kern/kernel.asm	/^f0103132:	68 ae 63 10 f0       	push   $0xf01063ae$/;"	l
f0103137	obj/kern/kernel.asm	/^f0103137:	e8 49 fc ff ff       	call   f0102d85 <cprintf>$/;"	l
f010313c	obj/kern/kernel.asm	/^f010313c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010313f	obj/kern/kernel.asm	/^f010313f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103142	obj/kern/kernel.asm	/^f0103142:	ff 73 30             	pushl  0x30(%ebx)$/;"	l
f0103145	obj/kern/kernel.asm	/^f0103145:	68 bd 63 10 f0       	push   $0xf01063bd$/;"	l
f010314a	obj/kern/kernel.asm	/^f010314a:	e8 36 fc ff ff       	call   f0102d85 <cprintf>$/;"	l
f010314f	obj/kern/kernel.asm	/^f010314f:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103152	obj/kern/kernel.asm	/^f0103152:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f0103156	obj/kern/kernel.asm	/^f0103156:	50                   	push   %eax$/;"	l
f0103157	obj/kern/kernel.asm	/^f0103157:	68 cc 63 10 f0       	push   $0xf01063cc$/;"	l
f010315c	obj/kern/kernel.asm	/^f010315c:	e8 24 fc ff ff       	call   f0102d85 <cprintf>$/;"	l
f0103161	obj/kern/kernel.asm	/^f0103161:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103164	obj/kern/kernel.asm	/^f0103164:	ff 73 38             	pushl  0x38(%ebx)$/;"	l
f0103167	obj/kern/kernel.asm	/^f0103167:	68 df 63 10 f0       	push   $0xf01063df$/;"	l
f010316c	obj/kern/kernel.asm	/^f010316c:	e8 14 fc ff ff       	call   f0102d85 <cprintf>$/;"	l
f0103171	obj/kern/kernel.asm	/^f0103171:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103174	obj/kern/kernel.asm	/^f0103174:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0103178	obj/kern/kernel.asm	/^f0103178:	75 3c                	jne    f01031b6 <print_trapframe+0x172>$/;"	l
f010317a	obj/kern/kernel.asm	/^f010317a:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010317d	obj/kern/kernel.asm	/^f010317d:	5b                   	pop    %ebx$/;"	l
f010317e	obj/kern/kernel.asm	/^f010317e:	5e                   	pop    %esi$/;"	l
f010317f	obj/kern/kernel.asm	/^f010317f:	5d                   	pop    %ebp$/;"	l
f0103180	obj/kern/kernel.asm	/^f0103180:	c3                   	ret    $/;"	l
f0103181	obj/kern/kernel.asm	/^f0103181:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0103185	obj/kern/kernel.asm	/^f0103185:	0f 85 50 ff ff ff    	jne    f01030db <print_trapframe+0x97>$/;"	l
f010318b	obj/kern/kernel.asm	/^f010318b:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f010318e	obj/kern/kernel.asm	/^f010318e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103191	obj/kern/kernel.asm	/^f0103191:	50                   	push   %eax$/;"	l
f0103192	obj/kern/kernel.asm	/^f0103192:	68 91 63 10 f0       	push   $0xf0106391$/;"	l
f0103197	obj/kern/kernel.asm	/^f0103197:	e8 e9 fb ff ff       	call   f0102d85 <cprintf>$/;"	l
f010319c	obj/kern/kernel.asm	/^f010319c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010319f	obj/kern/kernel.asm	/^f010319f:	e9 37 ff ff ff       	jmp    f01030db <print_trapframe+0x97>$/;"	l
f01031a4	obj/kern/kernel.asm	/^f01031a4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01031a7	obj/kern/kernel.asm	/^f01031a7:	68 a1 5e 10 f0       	push   $0xf0105ea1$/;"	l
f01031ac	obj/kern/kernel.asm	/^f01031ac:	e8 d4 fb ff ff       	call   f0102d85 <cprintf>$/;"	l
f01031b1	obj/kern/kernel.asm	/^f01031b1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01031b4	obj/kern/kernel.asm	/^f01031b4:	eb 89                	jmp    f010313f <print_trapframe+0xfb>$/;"	l
f01031b6	obj/kern/kernel.asm	/^f01031b6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01031b9	obj/kern/kernel.asm	/^f01031b9:	ff 73 3c             	pushl  0x3c(%ebx)$/;"	l
f01031bc	obj/kern/kernel.asm	/^f01031bc:	68 ee 63 10 f0       	push   $0xf01063ee$/;"	l
f01031c1	obj/kern/kernel.asm	/^f01031c1:	e8 bf fb ff ff       	call   f0102d85 <cprintf>$/;"	l
f01031c6	obj/kern/kernel.asm	/^f01031c6:	83 c4 08             	add    $0x8,%esp$/;"	l
f01031c9	obj/kern/kernel.asm	/^f01031c9:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f01031cd	obj/kern/kernel.asm	/^f01031cd:	50                   	push   %eax$/;"	l
f01031ce	obj/kern/kernel.asm	/^f01031ce:	68 fd 63 10 f0       	push   $0xf01063fd$/;"	l
f01031d3	obj/kern/kernel.asm	/^f01031d3:	e8 ad fb ff ff       	call   f0102d85 <cprintf>$/;"	l
f01031d8	obj/kern/kernel.asm	/^f01031d8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01031db	obj/kern/kernel.asm	/^f01031db:	eb 9d                	jmp    f010317a <print_trapframe+0x136>$/;"	l
f01031dd	obj/kern/kernel.asm	/^f01031dd <page_fault_handler>:$/;"	l
f01031dd	obj/kern/kernel.asm	/^f01031dd:	55                   	push   %ebp$/;"	l
f01031de	obj/kern/kernel.asm	/^f01031de:	89 e5                	mov    %esp,%ebp$/;"	l
f01031e0	obj/kern/kernel.asm	/^f01031e0:	57                   	push   %edi$/;"	l
f01031e1	obj/kern/kernel.asm	/^f01031e1:	56                   	push   %esi$/;"	l
f01031e2	obj/kern/kernel.asm	/^f01031e2:	53                   	push   %ebx$/;"	l
f01031e3	obj/kern/kernel.asm	/^f01031e3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01031e6	obj/kern/kernel.asm	/^f01031e6:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01031e9	obj/kern/kernel.asm	/^f01031e9:	0f 20 d6             	mov    %cr2,%esi$/;"	l
f01031ec	obj/kern/kernel.asm	/^f01031ec:	8b 7b 30             	mov    0x30(%ebx),%edi$/;"	l
f01031ef	obj/kern/kernel.asm	/^f01031ef:	e8 5b 1a 00 00       	call   f0104c4f <cpunum>$/;"	l
f01031f4	obj/kern/kernel.asm	/^f01031f4:	57                   	push   %edi$/;"	l
f01031f5	obj/kern/kernel.asm	/^f01031f5:	56                   	push   %esi$/;"	l
f01031f6	obj/kern/kernel.asm	/^f01031f6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01031f9	obj/kern/kernel.asm	/^f01031f9:	8b 80 28 10 24 f0    	mov    -0xfdbefd8(%eax),%eax$/;"	l
f01031ff	obj/kern/kernel.asm	/^f01031ff:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f0103202	obj/kern/kernel.asm	/^f0103202:	68 b8 65 10 f0       	push   $0xf01065b8$/;"	l
f0103207	obj/kern/kernel.asm	/^f0103207:	e8 79 fb ff ff       	call   f0102d85 <cprintf>$/;"	l
f010320c	obj/kern/kernel.asm	/^f010320c:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010320f	obj/kern/kernel.asm	/^f010320f:	e8 30 fe ff ff       	call   f0103044 <print_trapframe>$/;"	l
f0103214	obj/kern/kernel.asm	/^f0103214:	e8 36 1a 00 00       	call   f0104c4f <cpunum>$/;"	l
f0103219	obj/kern/kernel.asm	/^f0103219:	83 c4 04             	add    $0x4,%esp$/;"	l
f010321c	obj/kern/kernel.asm	/^f010321c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010321f	obj/kern/kernel.asm	/^f010321f:	ff b0 28 10 24 f0    	pushl  -0xfdbefd8(%eax)$/;"	l
f0103225	obj/kern/kernel.asm	/^f0103225:	e8 64 f8 ff ff       	call   f0102a8e <env_destroy>$/;"	l
f010322a	obj/kern/kernel.asm	/^f010322a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010322d	obj/kern/kernel.asm	/^f010322d:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103230	obj/kern/kernel.asm	/^f0103230:	5b                   	pop    %ebx$/;"	l
f0103231	obj/kern/kernel.asm	/^f0103231:	5e                   	pop    %esi$/;"	l
f0103232	obj/kern/kernel.asm	/^f0103232:	5f                   	pop    %edi$/;"	l
f0103233	obj/kern/kernel.asm	/^f0103233:	5d                   	pop    %ebp$/;"	l
f0103234	obj/kern/kernel.asm	/^f0103234:	c3                   	ret    $/;"	l
f0103235	obj/kern/kernel.asm	/^f0103235 <trap>:$/;"	l
f0103235	obj/kern/kernel.asm	/^f0103235:	55                   	push   %ebp$/;"	l
f0103236	obj/kern/kernel.asm	/^f0103236:	89 e5                	mov    %esp,%ebp$/;"	l
f0103238	obj/kern/kernel.asm	/^f0103238:	57                   	push   %edi$/;"	l
f0103239	obj/kern/kernel.asm	/^f0103239:	56                   	push   %esi$/;"	l
f010323a	obj/kern/kernel.asm	/^f010323a:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010323d	obj/kern/kernel.asm	/^f010323d:	fc                   	cld    $/;"	l
f010323e	obj/kern/kernel.asm	/^f010323e:	83 3d 00 0f 24 f0 00 	cmpl   $0x0,0xf0240f00$/;"	l
f0103245	obj/kern/kernel.asm	/^f0103245:	74 01                	je     f0103248 <trap+0x13>$/;"	l
f0103247	obj/kern/kernel.asm	/^f0103247:	f4                   	hlt    $/;"	l
f0103248	obj/kern/kernel.asm	/^f0103248:	e8 02 1a 00 00       	call   f0104c4f <cpunum>$/;"	l
f010324d	obj/kern/kernel.asm	/^f010324d:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0103250	obj/kern/kernel.asm	/^f0103250:	83 c2 04             	add    $0x4,%edx$/;"	l
f0103253	obj/kern/kernel.asm	/^f0103253:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0103258	obj/kern/kernel.asm	/^f0103258:	f0 87 82 20 10 24 f0 	lock xchg %eax,-0xfdbefe0(%edx)$/;"	l
f010325f	obj/kern/kernel.asm	/^f010325f:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0103262	obj/kern/kernel.asm	/^f0103262:	0f 84 b2 00 00 00    	je     f010331a <trap+0xe5>$/;"	l
f0103268	obj/kern/kernel.asm	/^f0103268:	9c                   	pushf  $/;"	l
f0103269	obj/kern/kernel.asm	/^f0103269:	58                   	pop    %eax$/;"	l
f010326a	obj/kern/kernel.asm	/^f010326a:	f6 c4 02             	test   $0x2,%ah$/;"	l
f010326d	obj/kern/kernel.asm	/^f010326d:	0f 85 bc 00 00 00    	jne    f010332f <trap+0xfa>$/;"	l
f0103273	obj/kern/kernel.asm	/^f0103273:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0103277	obj/kern/kernel.asm	/^f0103277:	83 e0 03             	and    $0x3,%eax$/;"	l
f010327a	obj/kern/kernel.asm	/^f010327a:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f010327e	obj/kern/kernel.asm	/^f010327e:	0f 84 c4 00 00 00    	je     f0103348 <trap+0x113>$/;"	l
f0103284	obj/kern/kernel.asm	/^f0103284:	89 35 60 0a 24 f0    	mov    %esi,0xf0240a60$/;"	l
f010328a	obj/kern/kernel.asm	/^f010328a:	83 7e 28 0e          	cmpl   $0xe,0x28(%esi)$/;"	l
f010328e	obj/kern/kernel.asm	/^f010328e:	0f 84 49 01 00 00    	je     f01033dd <trap+0x1a8>$/;"	l
f0103294	obj/kern/kernel.asm	/^f0103294:	83 7e 28 03          	cmpl   $0x3,0x28(%esi)$/;"	l
f0103298	obj/kern/kernel.asm	/^f0103298:	0f 84 50 01 00 00    	je     f01033ee <trap+0x1b9>$/;"	l
f010329e	obj/kern/kernel.asm	/^f010329e:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f01032a1	obj/kern/kernel.asm	/^f01032a1:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f01032a4	obj/kern/kernel.asm	/^f01032a4:	0f 84 55 01 00 00    	je     f01033ff <trap+0x1ca>$/;"	l
f01032aa	obj/kern/kernel.asm	/^f01032aa:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f01032ad	obj/kern/kernel.asm	/^f01032ad:	0f 84 70 01 00 00    	je     f0103423 <trap+0x1ee>$/;"	l
f01032b3	obj/kern/kernel.asm	/^f01032b3:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f01032b6	obj/kern/kernel.asm	/^f01032b6:	0f 84 88 01 00 00    	je     f0103444 <trap+0x20f>$/;"	l
f01032bc	obj/kern/kernel.asm	/^f01032bc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01032bf	obj/kern/kernel.asm	/^f01032bf:	56                   	push   %esi$/;"	l
f01032c0	obj/kern/kernel.asm	/^f01032c0:	e8 7f fd ff ff       	call   f0103044 <print_trapframe>$/;"	l
f01032c5	obj/kern/kernel.asm	/^f01032c5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01032c8	obj/kern/kernel.asm	/^f01032c8:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f01032cd	obj/kern/kernel.asm	/^f01032cd:	0f 84 8e 01 00 00    	je     f0103461 <trap+0x22c>$/;"	l
f01032d3	obj/kern/kernel.asm	/^f01032d3:	e8 77 19 00 00       	call   f0104c4f <cpunum>$/;"	l
f01032d8	obj/kern/kernel.asm	/^f01032d8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01032db	obj/kern/kernel.asm	/^f01032db:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01032de	obj/kern/kernel.asm	/^f01032de:	ff b0 28 10 24 f0    	pushl  -0xfdbefd8(%eax)$/;"	l
f01032e4	obj/kern/kernel.asm	/^f01032e4:	e8 a5 f7 ff ff       	call   f0102a8e <env_destroy>$/;"	l
f01032e9	obj/kern/kernel.asm	/^f01032e9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01032ec	obj/kern/kernel.asm	/^f01032ec:	e8 5e 19 00 00       	call   f0104c4f <cpunum>$/;"	l
f01032f1	obj/kern/kernel.asm	/^f01032f1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01032f4	obj/kern/kernel.asm	/^f01032f4:	83 b8 28 10 24 f0 00 	cmpl   $0x0,-0xfdbefd8(%eax)$/;"	l
f01032fb	obj/kern/kernel.asm	/^f01032fb:	74 18                	je     f0103315 <trap+0xe0>$/;"	l
f01032fd	obj/kern/kernel.asm	/^f01032fd:	e8 4d 19 00 00       	call   f0104c4f <cpunum>$/;"	l
f0103302	obj/kern/kernel.asm	/^f0103302:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103305	obj/kern/kernel.asm	/^f0103305:	8b 80 28 10 24 f0    	mov    -0xfdbefd8(%eax),%eax$/;"	l
f010330b	obj/kern/kernel.asm	/^f010330b:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f010330f	obj/kern/kernel.asm	/^f010330f:	0f 84 63 01 00 00    	je     f0103478 <trap+0x243>$/;"	l
f0103315	obj/kern/kernel.asm	/^f0103315:	e8 cc 02 00 00       	call   f01035e6 <sched_yield>$/;"	l
f010331a	obj/kern/kernel.asm	/^f010331a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010331d	obj/kern/kernel.asm	/^f010331d:	68 a0 f3 11 f0       	push   $0xf011f3a0$/;"	l
f0103322	obj/kern/kernel.asm	/^f0103322:	e8 98 1b 00 00       	call   f0104ebf <spin_lock>$/;"	l
f0103327	obj/kern/kernel.asm	/^f0103327:	83 c4 10             	add    $0x10,%esp$/;"	l
f010332a	obj/kern/kernel.asm	/^f010332a:	e9 39 ff ff ff       	jmp    f0103268 <trap+0x33>$/;"	l
f010332f	obj/kern/kernel.asm	/^f010332f:	68 10 64 10 f0       	push   $0xf0106410$/;"	l
f0103334	obj/kern/kernel.asm	/^f0103334:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f0103339	obj/kern/kernel.asm	/^f0103339:	68 36 01 00 00       	push   $0x136$/;"	l
f010333e	obj/kern/kernel.asm	/^f010333e:	68 29 64 10 f0       	push   $0xf0106429$/;"	l
f0103343	obj/kern/kernel.asm	/^f0103343:	e8 f8 cc ff ff       	call   f0100040 <_panic>$/;"	l
f0103348	obj/kern/kernel.asm	/^f0103348:	e8 02 19 00 00       	call   f0104c4f <cpunum>$/;"	l
f010334d	obj/kern/kernel.asm	/^f010334d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103350	obj/kern/kernel.asm	/^f0103350:	83 b8 28 10 24 f0 00 	cmpl   $0x0,-0xfdbefd8(%eax)$/;"	l
f0103357	obj/kern/kernel.asm	/^f0103357:	74 3e                	je     f0103397 <trap+0x162>$/;"	l
f0103359	obj/kern/kernel.asm	/^f0103359:	e8 f1 18 00 00       	call   f0104c4f <cpunum>$/;"	l
f010335e	obj/kern/kernel.asm	/^f010335e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103361	obj/kern/kernel.asm	/^f0103361:	8b 80 28 10 24 f0    	mov    -0xfdbefd8(%eax),%eax$/;"	l
f0103367	obj/kern/kernel.asm	/^f0103367:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f010336b	obj/kern/kernel.asm	/^f010336b:	74 43                	je     f01033b0 <trap+0x17b>$/;"	l
f010336d	obj/kern/kernel.asm	/^f010336d:	e8 dd 18 00 00       	call   f0104c4f <cpunum>$/;"	l
f0103372	obj/kern/kernel.asm	/^f0103372:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103375	obj/kern/kernel.asm	/^f0103375:	8b 80 28 10 24 f0    	mov    -0xfdbefd8(%eax),%eax$/;"	l
f010337b	obj/kern/kernel.asm	/^f010337b:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0103380	obj/kern/kernel.asm	/^f0103380:	89 c7                	mov    %eax,%edi$/;"	l
f0103382	obj/kern/kernel.asm	/^f0103382:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0103384	obj/kern/kernel.asm	/^f0103384:	e8 c6 18 00 00       	call   f0104c4f <cpunum>$/;"	l
f0103389	obj/kern/kernel.asm	/^f0103389:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010338c	obj/kern/kernel.asm	/^f010338c:	8b b0 28 10 24 f0    	mov    -0xfdbefd8(%eax),%esi$/;"	l
f0103392	obj/kern/kernel.asm	/^f0103392:	e9 ed fe ff ff       	jmp    f0103284 <trap+0x4f>$/;"	l
f0103397	obj/kern/kernel.asm	/^f0103397:	68 35 64 10 f0       	push   $0xf0106435$/;"	l
f010339c	obj/kern/kernel.asm	/^f010339c:	68 af 5e 10 f0       	push   $0xf0105eaf$/;"	l
f01033a1	obj/kern/kernel.asm	/^f01033a1:	68 3d 01 00 00       	push   $0x13d$/;"	l
f01033a6	obj/kern/kernel.asm	/^f01033a6:	68 29 64 10 f0       	push   $0xf0106429$/;"	l
f01033ab	obj/kern/kernel.asm	/^f01033ab:	e8 90 cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033b0	obj/kern/kernel.asm	/^f01033b0:	e8 9a 18 00 00       	call   f0104c4f <cpunum>$/;"	l
f01033b5	obj/kern/kernel.asm	/^f01033b5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01033b8	obj/kern/kernel.asm	/^f01033b8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01033bb	obj/kern/kernel.asm	/^f01033bb:	ff b0 28 10 24 f0    	pushl  -0xfdbefd8(%eax)$/;"	l
f01033c1	obj/kern/kernel.asm	/^f01033c1:	e8 da f4 ff ff       	call   f01028a0 <env_free>$/;"	l
f01033c6	obj/kern/kernel.asm	/^f01033c6:	e8 84 18 00 00       	call   f0104c4f <cpunum>$/;"	l
f01033cb	obj/kern/kernel.asm	/^f01033cb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01033ce	obj/kern/kernel.asm	/^f01033ce:	c7 80 28 10 24 f0 00 	movl   $0x0,-0xfdbefd8(%eax)$/;"	l
f01033d5	obj/kern/kernel.asm	/^f01033d5:	00 00 00 $/;"	l
f01033d8	obj/kern/kernel.asm	/^f01033d8:	e8 09 02 00 00       	call   f01035e6 <sched_yield>$/;"	l
f01033dd	obj/kern/kernel.asm	/^f01033dd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01033e0	obj/kern/kernel.asm	/^f01033e0:	56                   	push   %esi$/;"	l
f01033e1	obj/kern/kernel.asm	/^f01033e1:	e8 f7 fd ff ff       	call   f01031dd <page_fault_handler>$/;"	l
f01033e6	obj/kern/kernel.asm	/^f01033e6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01033e9	obj/kern/kernel.asm	/^f01033e9:	e9 a6 fe ff ff       	jmp    f0103294 <trap+0x5f>$/;"	l
f01033ee	obj/kern/kernel.asm	/^f01033ee:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01033f1	obj/kern/kernel.asm	/^f01033f1:	56                   	push   %esi$/;"	l
f01033f2	obj/kern/kernel.asm	/^f01033f2:	e8 3d d5 ff ff       	call   f0100934 <monitor>$/;"	l
f01033f7	obj/kern/kernel.asm	/^f01033f7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01033fa	obj/kern/kernel.asm	/^f01033fa:	e9 9f fe ff ff       	jmp    f010329e <trap+0x69>$/;"	l
f01033ff	obj/kern/kernel.asm	/^f01033ff:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103402	obj/kern/kernel.asm	/^f0103402:	ff 76 04             	pushl  0x4(%esi)$/;"	l
f0103405	obj/kern/kernel.asm	/^f0103405:	ff 36                	pushl  (%esi)$/;"	l
f0103407	obj/kern/kernel.asm	/^f0103407:	ff 76 10             	pushl  0x10(%esi)$/;"	l
f010340a	obj/kern/kernel.asm	/^f010340a:	ff 76 18             	pushl  0x18(%esi)$/;"	l
f010340d	obj/kern/kernel.asm	/^f010340d:	ff 76 14             	pushl  0x14(%esi)$/;"	l
f0103410	obj/kern/kernel.asm	/^f0103410:	ff 76 1c             	pushl  0x1c(%esi)$/;"	l
f0103413	obj/kern/kernel.asm	/^f0103413:	e8 db 01 00 00       	call   f01035f3 <syscall>$/;"	l
f0103418	obj/kern/kernel.asm	/^f0103418:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f010341b	obj/kern/kernel.asm	/^f010341b:	83 c4 20             	add    $0x20,%esp$/;"	l
f010341e	obj/kern/kernel.asm	/^f010341e:	e9 c9 fe ff ff       	jmp    f01032ec <trap+0xb7>$/;"	l
f0103423	obj/kern/kernel.asm	/^f0103423:	f6 46 34 08          	testb  $0x8,0x34(%esi)$/;"	l
f0103427	obj/kern/kernel.asm	/^f0103427:	0f 84 8f fe ff ff    	je     f01032bc <trap+0x87>$/;"	l
f010342d	obj/kern/kernel.asm	/^f010342d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103430	obj/kern/kernel.asm	/^f0103430:	68 dc 65 10 f0       	push   $0xf01065dc$/;"	l
f0103435	obj/kern/kernel.asm	/^f0103435:	68 09 01 00 00       	push   $0x109$/;"	l
f010343a	obj/kern/kernel.asm	/^f010343a:	68 29 64 10 f0       	push   $0xf0106429$/;"	l
f010343f	obj/kern/kernel.asm	/^f010343f:	e8 fc cb ff ff       	call   f0100040 <_panic>$/;"	l
f0103444	obj/kern/kernel.asm	/^f0103444:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103447	obj/kern/kernel.asm	/^f0103447:	68 3c 64 10 f0       	push   $0xf010643c$/;"	l
f010344c	obj/kern/kernel.asm	/^f010344c:	e8 34 f9 ff ff       	call   f0102d85 <cprintf>$/;"	l
f0103451	obj/kern/kernel.asm	/^f0103451:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0103454	obj/kern/kernel.asm	/^f0103454:	e8 eb fb ff ff       	call   f0103044 <print_trapframe>$/;"	l
f0103459	obj/kern/kernel.asm	/^f0103459:	83 c4 10             	add    $0x10,%esp$/;"	l
f010345c	obj/kern/kernel.asm	/^f010345c:	e9 8b fe ff ff       	jmp    f01032ec <trap+0xb7>$/;"	l
f0103461	obj/kern/kernel.asm	/^f0103461:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103464	obj/kern/kernel.asm	/^f0103464:	68 59 64 10 f0       	push   $0xf0106459$/;"	l
f0103469	obj/kern/kernel.asm	/^f0103469:	68 1c 01 00 00       	push   $0x11c$/;"	l
f010346e	obj/kern/kernel.asm	/^f010346e:	68 29 64 10 f0       	push   $0xf0106429$/;"	l
f0103473	obj/kern/kernel.asm	/^f0103473:	e8 c8 cb ff ff       	call   f0100040 <_panic>$/;"	l
f0103478	obj/kern/kernel.asm	/^f0103478:	e8 d2 17 00 00       	call   f0104c4f <cpunum>$/;"	l
f010347d	obj/kern/kernel.asm	/^f010347d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103480	obj/kern/kernel.asm	/^f0103480:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103483	obj/kern/kernel.asm	/^f0103483:	ff b0 28 10 24 f0    	pushl  -0xfdbefd8(%eax)$/;"	l
f0103489	obj/kern/kernel.asm	/^f0103489:	e8 9f f6 ff ff       	call   f0102b2d <env_run>$/;"	l
f010348e	obj/kern/kernel.asm	/^f010348e <DIVIDE>:$/;"	l
f010348e	obj/kern/kernel.asm	/^f010348e:	6a 00                	push   $0x0$/;"	l
f0103490	obj/kern/kernel.asm	/^f0103490:	6a 00                	push   $0x0$/;"	l
f0103492	obj/kern/kernel.asm	/^f0103492:	eb 67                	jmp    f01034fb <_alltraps>$/;"	l
f0103494	obj/kern/kernel.asm	/^f0103494 <DEBUG>:$/;"	l
f0103494	obj/kern/kernel.asm	/^f0103494:	6a 00                	push   $0x0$/;"	l
f0103496	obj/kern/kernel.asm	/^f0103496:	6a 01                	push   $0x1$/;"	l
f0103498	obj/kern/kernel.asm	/^f0103498:	eb 61                	jmp    f01034fb <_alltraps>$/;"	l
f010349a	obj/kern/kernel.asm	/^f010349a <NMI>:$/;"	l
f010349a	obj/kern/kernel.asm	/^f010349a:	6a 00                	push   $0x0$/;"	l
f010349c	obj/kern/kernel.asm	/^f010349c:	6a 02                	push   $0x2$/;"	l
f010349e	obj/kern/kernel.asm	/^f010349e:	eb 5b                	jmp    f01034fb <_alltraps>$/;"	l
f01034a0	obj/kern/kernel.asm	/^f01034a0 <BRKPT>:$/;"	l
f01034a0	obj/kern/kernel.asm	/^f01034a0:	6a 00                	push   $0x0$/;"	l
f01034a2	obj/kern/kernel.asm	/^f01034a2:	6a 03                	push   $0x3$/;"	l
f01034a4	obj/kern/kernel.asm	/^f01034a4:	eb 55                	jmp    f01034fb <_alltraps>$/;"	l
f01034a6	obj/kern/kernel.asm	/^f01034a6 <OFLOW>:$/;"	l
f01034a6	obj/kern/kernel.asm	/^f01034a6:	6a 00                	push   $0x0$/;"	l
f01034a8	obj/kern/kernel.asm	/^f01034a8:	6a 04                	push   $0x4$/;"	l
f01034aa	obj/kern/kernel.asm	/^f01034aa:	eb 4f                	jmp    f01034fb <_alltraps>$/;"	l
f01034ac	obj/kern/kernel.asm	/^f01034ac <BOUND>:$/;"	l
f01034ac	obj/kern/kernel.asm	/^f01034ac:	6a 00                	push   $0x0$/;"	l
f01034ae	obj/kern/kernel.asm	/^f01034ae:	6a 05                	push   $0x5$/;"	l
f01034b0	obj/kern/kernel.asm	/^f01034b0:	eb 49                	jmp    f01034fb <_alltraps>$/;"	l
f01034b2	obj/kern/kernel.asm	/^f01034b2 <ILLOP>:$/;"	l
f01034b2	obj/kern/kernel.asm	/^f01034b2:	6a 00                	push   $0x0$/;"	l
f01034b4	obj/kern/kernel.asm	/^f01034b4:	6a 06                	push   $0x6$/;"	l
f01034b6	obj/kern/kernel.asm	/^f01034b6:	eb 43                	jmp    f01034fb <_alltraps>$/;"	l
f01034b8	obj/kern/kernel.asm	/^f01034b8 <DEVICE>:$/;"	l
f01034b8	obj/kern/kernel.asm	/^f01034b8:	6a 00                	push   $0x0$/;"	l
f01034ba	obj/kern/kernel.asm	/^f01034ba:	6a 07                	push   $0x7$/;"	l
f01034bc	obj/kern/kernel.asm	/^f01034bc:	eb 3d                	jmp    f01034fb <_alltraps>$/;"	l
f01034be	obj/kern/kernel.asm	/^f01034be <DBLFLT>:$/;"	l
f01034be	obj/kern/kernel.asm	/^f01034be:	6a 08                	push   $0x8$/;"	l
f01034c0	obj/kern/kernel.asm	/^f01034c0:	eb 39                	jmp    f01034fb <_alltraps>$/;"	l
f01034c2	obj/kern/kernel.asm	/^f01034c2 <TSS>:$/;"	l
f01034c2	obj/kern/kernel.asm	/^f01034c2:	6a 0a                	push   $0xa$/;"	l
f01034c4	obj/kern/kernel.asm	/^f01034c4:	eb 35                	jmp    f01034fb <_alltraps>$/;"	l
f01034c6	obj/kern/kernel.asm	/^f01034c6 <SEGNP>:$/;"	l
f01034c6	obj/kern/kernel.asm	/^f01034c6:	6a 0b                	push   $0xb$/;"	l
f01034c8	obj/kern/kernel.asm	/^f01034c8:	eb 31                	jmp    f01034fb <_alltraps>$/;"	l
f01034ca	obj/kern/kernel.asm	/^f01034ca <STACK>:$/;"	l
f01034ca	obj/kern/kernel.asm	/^f01034ca:	6a 0c                	push   $0xc$/;"	l
f01034cc	obj/kern/kernel.asm	/^f01034cc:	eb 2d                	jmp    f01034fb <_alltraps>$/;"	l
f01034ce	obj/kern/kernel.asm	/^f01034ce <GPFLT>:$/;"	l
f01034ce	obj/kern/kernel.asm	/^f01034ce:	6a 0d                	push   $0xd$/;"	l
f01034d0	obj/kern/kernel.asm	/^f01034d0:	eb 29                	jmp    f01034fb <_alltraps>$/;"	l
f01034d2	obj/kern/kernel.asm	/^f01034d2 <PGFLT>:$/;"	l
f01034d2	obj/kern/kernel.asm	/^f01034d2:	6a 0e                	push   $0xe$/;"	l
f01034d4	obj/kern/kernel.asm	/^f01034d4:	eb 25                	jmp    f01034fb <_alltraps>$/;"	l
f01034d6	obj/kern/kernel.asm	/^f01034d6 <FPERR>:$/;"	l
f01034d6	obj/kern/kernel.asm	/^f01034d6:	6a 00                	push   $0x0$/;"	l
f01034d8	obj/kern/kernel.asm	/^f01034d8:	6a 10                	push   $0x10$/;"	l
f01034da	obj/kern/kernel.asm	/^f01034da:	eb 1f                	jmp    f01034fb <_alltraps>$/;"	l
f01034dc	obj/kern/kernel.asm	/^f01034dc <ALIGN>:$/;"	l
f01034dc	obj/kern/kernel.asm	/^f01034dc:	6a 11                	push   $0x11$/;"	l
f01034de	obj/kern/kernel.asm	/^f01034de:	eb 1b                	jmp    f01034fb <_alltraps>$/;"	l
f01034e0	obj/kern/kernel.asm	/^f01034e0 <MCHK>:$/;"	l
f01034e0	obj/kern/kernel.asm	/^f01034e0:	6a 00                	push   $0x0$/;"	l
f01034e2	obj/kern/kernel.asm	/^f01034e2:	6a 12                	push   $0x12$/;"	l
f01034e4	obj/kern/kernel.asm	/^f01034e4:	eb 15                	jmp    f01034fb <_alltraps>$/;"	l
f01034e6	obj/kern/kernel.asm	/^f01034e6 <SIMDERR>:$/;"	l
f01034e6	obj/kern/kernel.asm	/^f01034e6:	6a 00                	push   $0x0$/;"	l
f01034e8	obj/kern/kernel.asm	/^f01034e8:	6a 13                	push   $0x13$/;"	l
f01034ea	obj/kern/kernel.asm	/^f01034ea:	eb 0f                	jmp    f01034fb <_alltraps>$/;"	l
f01034ec	obj/kern/kernel.asm	/^f01034ec <SYSCALL>:$/;"	l
f01034ec	obj/kern/kernel.asm	/^f01034ec:	6a 00                	push   $0x0$/;"	l
f01034ee	obj/kern/kernel.asm	/^f01034ee:	6a 30                	push   $0x30$/;"	l
f01034f0	obj/kern/kernel.asm	/^f01034f0:	eb 09                	jmp    f01034fb <_alltraps>$/;"	l
f01034f2	obj/kern/kernel.asm	/^f01034f2 <DEFAULT>:$/;"	l
f01034f2	obj/kern/kernel.asm	/^f01034f2:	6a 00                	push   $0x0$/;"	l
f01034f4	obj/kern/kernel.asm	/^f01034f4:	68 f4 01 00 00       	push   $0x1f4$/;"	l
f01034f9	obj/kern/kernel.asm	/^f01034f9:	eb 00                	jmp    f01034fb <_alltraps>$/;"	l
f01034fb	obj/kern/kernel.asm	/^f01034fb <_alltraps>:$/;"	l
f01034fb	obj/kern/kernel.asm	/^f01034fb:	66 6a 00             	pushw  $0x0$/;"	l
f01034fe	obj/kern/kernel.asm	/^f01034fe:	66 1e                	pushw  %ds$/;"	l
f0103500	obj/kern/kernel.asm	/^f0103500:	66 6a 00             	pushw  $0x0$/;"	l
f0103503	obj/kern/kernel.asm	/^f0103503:	66 06                	pushw  %es$/;"	l
f0103505	obj/kern/kernel.asm	/^f0103505:	60                   	pusha  $/;"	l
f0103506	obj/kern/kernel.asm	/^f0103506:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f010350b	obj/kern/kernel.asm	/^f010350b:	8e c0                	mov    %eax,%es$/;"	l
f010350d	obj/kern/kernel.asm	/^f010350d:	8e d8                	mov    %eax,%ds$/;"	l
f010350f	obj/kern/kernel.asm	/^f010350f:	54                   	push   %esp$/;"	l
f0103510	obj/kern/kernel.asm	/^f0103510:	e8 20 fd ff ff       	call   f0103235 <trap>$/;"	l
f0103515	obj/kern/kernel.asm	/^f0103515 <sched_halt>:$/;"	l
f0103515	obj/kern/kernel.asm	/^f0103515:	55                   	push   %ebp$/;"	l
f0103516	obj/kern/kernel.asm	/^f0103516:	89 e5                	mov    %esp,%ebp$/;"	l
f0103518	obj/kern/kernel.asm	/^f0103518:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010351b	obj/kern/kernel.asm	/^f010351b:	a1 48 02 24 f0       	mov    0xf0240248,%eax$/;"	l
f0103520	obj/kern/kernel.asm	/^f0103520:	83 c0 54             	add    $0x54,%eax$/;"	l
f0103523	obj/kern/kernel.asm	/^f0103523:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0103528	obj/kern/kernel.asm	/^f0103528:	8b 10                	mov    (%eax),%edx$/;"	l
f010352a	obj/kern/kernel.asm	/^f010352a:	83 ea 01             	sub    $0x1,%edx$/;"	l
f010352d	obj/kern/kernel.asm	/^f010352d:	83 fa 02             	cmp    $0x2,%edx$/;"	l
f0103530	obj/kern/kernel.asm	/^f0103530:	76 2d                	jbe    f010355f <sched_halt+0x4a>$/;"	l
f0103532	obj/kern/kernel.asm	/^f0103532:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0103535	obj/kern/kernel.asm	/^f0103535:	83 e8 80             	sub    $0xffffff80,%eax$/;"	l
f0103538	obj/kern/kernel.asm	/^f0103538:	81 f9 00 04 00 00    	cmp    $0x400,%ecx$/;"	l
f010353e	obj/kern/kernel.asm	/^f010353e:	75 e8                	jne    f0103528 <sched_halt+0x13>$/;"	l
f0103540	obj/kern/kernel.asm	/^f0103540:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103543	obj/kern/kernel.asm	/^f0103543:	68 50 66 10 f0       	push   $0xf0106650$/;"	l
f0103548	obj/kern/kernel.asm	/^f0103548:	e8 38 f8 ff ff       	call   f0102d85 <cprintf>$/;"	l
f010354d	obj/kern/kernel.asm	/^f010354d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103550	obj/kern/kernel.asm	/^f0103550:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103553	obj/kern/kernel.asm	/^f0103553:	6a 00                	push   $0x0$/;"	l
f0103555	obj/kern/kernel.asm	/^f0103555:	e8 da d3 ff ff       	call   f0100934 <monitor>$/;"	l
f010355a	obj/kern/kernel.asm	/^f010355a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010355d	obj/kern/kernel.asm	/^f010355d:	eb f1                	jmp    f0103550 <sched_halt+0x3b>$/;"	l
f010355f	obj/kern/kernel.asm	/^f010355f:	81 f9 00 04 00 00    	cmp    $0x400,%ecx$/;"	l
f0103565	obj/kern/kernel.asm	/^f0103565:	74 d9                	je     f0103540 <sched_halt+0x2b>$/;"	l
f0103567	obj/kern/kernel.asm	/^f0103567:	e8 e3 16 00 00       	call   f0104c4f <cpunum>$/;"	l
f010356c	obj/kern/kernel.asm	/^f010356c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010356f	obj/kern/kernel.asm	/^f010356f:	c7 80 28 10 24 f0 00 	movl   $0x0,-0xfdbefd8(%eax)$/;"	l
f0103576	obj/kern/kernel.asm	/^f0103576:	00 00 00 $/;"	l
f0103579	obj/kern/kernel.asm	/^f0103579:	a1 0c 0f 24 f0       	mov    0xf0240f0c,%eax$/;"	l
f010357e	obj/kern/kernel.asm	/^f010357e:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103583	obj/kern/kernel.asm	/^f0103583:	76 4f                	jbe    f01035d4 <sched_halt+0xbf>$/;"	l
f0103585	obj/kern/kernel.asm	/^f0103585:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010358a	obj/kern/kernel.asm	/^f010358a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010358d	obj/kern/kernel.asm	/^f010358d:	e8 bd 16 00 00       	call   f0104c4f <cpunum>$/;"	l
f0103592	obj/kern/kernel.asm	/^f0103592:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0103595	obj/kern/kernel.asm	/^f0103595:	83 c2 04             	add    $0x4,%edx$/;"	l
f0103598	obj/kern/kernel.asm	/^f0103598:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f010359d	obj/kern/kernel.asm	/^f010359d:	f0 87 82 20 10 24 f0 	lock xchg %eax,-0xfdbefe0(%edx)$/;"	l
f01035a4	obj/kern/kernel.asm	/^f01035a4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01035a7	obj/kern/kernel.asm	/^f01035a7:	68 a0 f3 11 f0       	push   $0xf011f3a0$/;"	l
f01035ac	obj/kern/kernel.asm	/^f01035ac:	e8 ab 19 00 00       	call   f0104f5c <spin_unlock>$/;"	l
f01035b1	obj/kern/kernel.asm	/^f01035b1:	f3 90                	pause  $/;"	l
f01035b3	obj/kern/kernel.asm	/^f01035b3:	e8 97 16 00 00       	call   f0104c4f <cpunum>$/;"	l
f01035b8	obj/kern/kernel.asm	/^f01035b8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01035bb	obj/kern/kernel.asm	/^f01035bb:	8b 80 30 10 24 f0    	mov    -0xfdbefd0(%eax),%eax$/;"	l
f01035c1	obj/kern/kernel.asm	/^f01035c1:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f01035c6	obj/kern/kernel.asm	/^f01035c6:	89 c4                	mov    %eax,%esp$/;"	l
f01035c8	obj/kern/kernel.asm	/^f01035c8:	6a 00                	push   $0x0$/;"	l
f01035ca	obj/kern/kernel.asm	/^f01035ca:	6a 00                	push   $0x0$/;"	l
f01035cc	obj/kern/kernel.asm	/^f01035cc:	f4                   	hlt    $/;"	l
f01035cd	obj/kern/kernel.asm	/^f01035cd:	eb fd                	jmp    f01035cc <sched_halt+0xb7>$/;"	l
f01035cf	obj/kern/kernel.asm	/^f01035cf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01035d2	obj/kern/kernel.asm	/^f01035d2:	c9                   	leave  $/;"	l
f01035d3	obj/kern/kernel.asm	/^f01035d3:	c3                   	ret    $/;"	l
f01035d4	obj/kern/kernel.asm	/^f01035d4:	50                   	push   %eax$/;"	l
f01035d5	obj/kern/kernel.asm	/^f01035d5:	68 e8 52 10 f0       	push   $0xf01052e8$/;"	l
f01035da	obj/kern/kernel.asm	/^f01035da:	6a 3d                	push   $0x3d$/;"	l
f01035dc	obj/kern/kernel.asm	/^f01035dc:	68 79 66 10 f0       	push   $0xf0106679$/;"	l
f01035e1	obj/kern/kernel.asm	/^f01035e1:	e8 5a ca ff ff       	call   f0100040 <_panic>$/;"	l
f01035e6	obj/kern/kernel.asm	/^f01035e6 <sched_yield>:$/;"	l
f01035e6	obj/kern/kernel.asm	/^f01035e6:	55                   	push   %ebp$/;"	l
f01035e7	obj/kern/kernel.asm	/^f01035e7:	89 e5                	mov    %esp,%ebp$/;"	l
f01035e9	obj/kern/kernel.asm	/^f01035e9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01035ec	obj/kern/kernel.asm	/^f01035ec:	e8 24 ff ff ff       	call   f0103515 <sched_halt>$/;"	l
f01035f1	obj/kern/kernel.asm	/^f01035f1:	c9                   	leave  $/;"	l
f01035f2	obj/kern/kernel.asm	/^f01035f2:	c3                   	ret    $/;"	l
f01035f3	obj/kern/kernel.asm	/^f01035f3 <syscall>:$/;"	l
f01035f3	obj/kern/kernel.asm	/^f01035f3:	55                   	push   %ebp$/;"	l
f01035f4	obj/kern/kernel.asm	/^f01035f4:	89 e5                	mov    %esp,%ebp$/;"	l
f01035f6	obj/kern/kernel.asm	/^f01035f6:	57                   	push   %edi$/;"	l
f01035f7	obj/kern/kernel.asm	/^f01035f7:	56                   	push   %esi$/;"	l
f01035f8	obj/kern/kernel.asm	/^f01035f8:	53                   	push   %ebx$/;"	l
f01035f9	obj/kern/kernel.asm	/^f01035f9:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01035fc	obj/kern/kernel.asm	/^f01035fc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01035ff	obj/kern/kernel.asm	/^f01035ff:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0103602	obj/kern/kernel.asm	/^f0103602:	0f 87 4d 02 00 00    	ja     f0103855 <syscall+0x262>$/;"	l
f0103608	obj/kern/kernel.asm	/^f0103608:	ff 24 85 f4 66 10 f0 	jmp    *-0xfef990c(,%eax,4)$/;"	l
f010360f	obj/kern/kernel.asm	/^f010360f:	e8 3b 16 00 00       	call   f0104c4f <cpunum>$/;"	l
f0103614	obj/kern/kernel.asm	/^f0103614:	6a 04                	push   $0x4$/;"	l
f0103616	obj/kern/kernel.asm	/^f0103616:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0103619	obj/kern/kernel.asm	/^f0103619:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010361c	obj/kern/kernel.asm	/^f010361c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010361f	obj/kern/kernel.asm	/^f010361f:	ff b0 28 10 24 f0    	pushl  -0xfdbefd8(%eax)$/;"	l
f0103625	obj/kern/kernel.asm	/^f0103625:	e8 99 ed ff ff       	call   f01023c3 <user_mem_assert>$/;"	l
f010362a	obj/kern/kernel.asm	/^f010362a:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010362d	obj/kern/kernel.asm	/^f010362d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0103630	obj/kern/kernel.asm	/^f0103630:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0103633	obj/kern/kernel.asm	/^f0103633:	68 86 66 10 f0       	push   $0xf0106686$/;"	l
f0103638	obj/kern/kernel.asm	/^f0103638:	e8 48 f7 ff ff       	call   f0102d85 <cprintf>$/;"	l
f010363d	obj/kern/kernel.asm	/^f010363d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0103640	obj/kern/kernel.asm	/^f0103640:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103643	obj/kern/kernel.asm	/^f0103643:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103646	obj/kern/kernel.asm	/^f0103646:	5b                   	pop    %ebx$/;"	l
f0103647	obj/kern/kernel.asm	/^f0103647:	5e                   	pop    %esi$/;"	l
f0103648	obj/kern/kernel.asm	/^f0103648:	5f                   	pop    %edi$/;"	l
f0103649	obj/kern/kernel.asm	/^f0103649:	5d                   	pop    %ebp$/;"	l
f010364a	obj/kern/kernel.asm	/^f010364a:	c3                   	ret    $/;"	l
f010364b	obj/kern/kernel.asm	/^f010364b:	e8 96 cf ff ff       	call   f01005e6 <cons_getc>$/;"	l
f0103650	obj/kern/kernel.asm	/^f0103650:	eb f1                	jmp    f0103643 <syscall+0x50>$/;"	l
f0103652	obj/kern/kernel.asm	/^f0103652:	e8 f8 15 00 00       	call   f0104c4f <cpunum>$/;"	l
f0103657	obj/kern/kernel.asm	/^f0103657:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010365a	obj/kern/kernel.asm	/^f010365a:	8b 80 28 10 24 f0    	mov    -0xfdbefd8(%eax),%eax$/;"	l
f0103660	obj/kern/kernel.asm	/^f0103660:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0103663	obj/kern/kernel.asm	/^f0103663:	eb de                	jmp    f0103643 <syscall+0x50>$/;"	l
f0103665	obj/kern/kernel.asm	/^f0103665:	e8 e5 15 00 00       	call   f0104c4f <cpunum>$/;"	l
f010366a	obj/kern/kernel.asm	/^f010366a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010366d	obj/kern/kernel.asm	/^f010366d:	6a 01                	push   $0x1$/;"	l
f010366f	obj/kern/kernel.asm	/^f010366f:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0103672	obj/kern/kernel.asm	/^f0103672:	52                   	push   %edx$/;"	l
f0103673	obj/kern/kernel.asm	/^f0103673:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103676	obj/kern/kernel.asm	/^f0103676:	8b 80 28 10 24 f0    	mov    -0xfdbefd8(%eax),%eax$/;"	l
f010367c	obj/kern/kernel.asm	/^f010367c:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f010367f	obj/kern/kernel.asm	/^f010367f:	e8 11 ee ff ff       	call   f0102495 <envid2env>$/;"	l
f0103684	obj/kern/kernel.asm	/^f0103684:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103687	obj/kern/kernel.asm	/^f0103687:	85 c0                	test   %eax,%eax$/;"	l
f0103689	obj/kern/kernel.asm	/^f0103689:	78 b8                	js     f0103643 <syscall+0x50>$/;"	l
f010368b	obj/kern/kernel.asm	/^f010368b:	e8 bf 15 00 00       	call   f0104c4f <cpunum>$/;"	l
f0103690	obj/kern/kernel.asm	/^f0103690:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0103693	obj/kern/kernel.asm	/^f0103693:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103696	obj/kern/kernel.asm	/^f0103696:	39 90 28 10 24 f0    	cmp    %edx,-0xfdbefd8(%eax)$/;"	l
f010369c	obj/kern/kernel.asm	/^f010369c:	74 3d                	je     f01036db <syscall+0xe8>$/;"	l
f010369e	obj/kern/kernel.asm	/^f010369e:	8b 5a 48             	mov    0x48(%edx),%ebx$/;"	l
f01036a1	obj/kern/kernel.asm	/^f01036a1:	e8 a9 15 00 00       	call   f0104c4f <cpunum>$/;"	l
f01036a6	obj/kern/kernel.asm	/^f01036a6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01036a9	obj/kern/kernel.asm	/^f01036a9:	53                   	push   %ebx$/;"	l
f01036aa	obj/kern/kernel.asm	/^f01036aa:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01036ad	obj/kern/kernel.asm	/^f01036ad:	8b 80 28 10 24 f0    	mov    -0xfdbefd8(%eax),%eax$/;"	l
f01036b3	obj/kern/kernel.asm	/^f01036b3:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f01036b6	obj/kern/kernel.asm	/^f01036b6:	68 a6 66 10 f0       	push   $0xf01066a6$/;"	l
f01036bb	obj/kern/kernel.asm	/^f01036bb:	e8 c5 f6 ff ff       	call   f0102d85 <cprintf>$/;"	l
f01036c0	obj/kern/kernel.asm	/^f01036c0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01036c3	obj/kern/kernel.asm	/^f01036c3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01036c6	obj/kern/kernel.asm	/^f01036c6:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f01036c9	obj/kern/kernel.asm	/^f01036c9:	e8 c0 f3 ff ff       	call   f0102a8e <env_destroy>$/;"	l
f01036ce	obj/kern/kernel.asm	/^f01036ce:	83 c4 10             	add    $0x10,%esp$/;"	l
f01036d1	obj/kern/kernel.asm	/^f01036d1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01036d6	obj/kern/kernel.asm	/^f01036d6:	e9 68 ff ff ff       	jmp    f0103643 <syscall+0x50>$/;"	l
f01036db	obj/kern/kernel.asm	/^f01036db:	e8 6f 15 00 00       	call   f0104c4f <cpunum>$/;"	l
f01036e0	obj/kern/kernel.asm	/^f01036e0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01036e3	obj/kern/kernel.asm	/^f01036e3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01036e6	obj/kern/kernel.asm	/^f01036e6:	8b 80 28 10 24 f0    	mov    -0xfdbefd8(%eax),%eax$/;"	l
f01036ec	obj/kern/kernel.asm	/^f01036ec:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f01036ef	obj/kern/kernel.asm	/^f01036ef:	68 8b 66 10 f0       	push   $0xf010668b$/;"	l
f01036f4	obj/kern/kernel.asm	/^f01036f4:	e8 8c f6 ff ff       	call   f0102d85 <cprintf>$/;"	l
f01036f9	obj/kern/kernel.asm	/^f01036f9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01036fc	obj/kern/kernel.asm	/^f01036fc:	eb c5                	jmp    f01036c3 <syscall+0xd0>$/;"	l
f01036fe	obj/kern/kernel.asm	/^f01036fe:	81 7d 0c ff ff ff ef 	cmpl   $0xefffffff,0xc(%ebp)$/;"	l
f0103705	obj/kern/kernel.asm	/^f0103705:	76 4d                	jbe    f0103754 <syscall+0x161>$/;"	l
f0103707	obj/kern/kernel.asm	/^f0103707:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010370a	obj/kern/kernel.asm	/^f010370a:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010370f	obj/kern/kernel.asm	/^f010370f:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103712	obj/kern/kernel.asm	/^f0103712:	3b 05 08 0f 24 f0    	cmp    0xf0240f08,%eax$/;"	l
f0103718	obj/kern/kernel.asm	/^f0103718:	73 51                	jae    f010376b <syscall+0x178>$/;"	l
f010371a	obj/kern/kernel.asm	/^f010371a:	8b 15 10 0f 24 f0    	mov    0xf0240f10,%edx$/;"	l
f0103720	obj/kern/kernel.asm	/^f0103720:	8d 1c c2             	lea    (%edx,%eax,8),%ebx$/;"	l
f0103723	obj/kern/kernel.asm	/^f0103723:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0103728	obj/kern/kernel.asm	/^f0103728:	85 db                	test   %ebx,%ebx$/;"	l
f010372a	obj/kern/kernel.asm	/^f010372a:	0f 84 13 ff ff ff    	je     f0103643 <syscall+0x50>$/;"	l
f0103730	obj/kern/kernel.asm	/^f0103730:	e8 1a 15 00 00       	call   f0104c4f <cpunum>$/;"	l
f0103735	obj/kern/kernel.asm	/^f0103735:	6a 06                	push   $0x6$/;"	l
f0103737	obj/kern/kernel.asm	/^f0103737:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010373a	obj/kern/kernel.asm	/^f010373a:	53                   	push   %ebx$/;"	l
f010373b	obj/kern/kernel.asm	/^f010373b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010373e	obj/kern/kernel.asm	/^f010373e:	8b 80 28 10 24 f0    	mov    -0xfdbefd8(%eax),%eax$/;"	l
f0103744	obj/kern/kernel.asm	/^f0103744:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0103747	obj/kern/kernel.asm	/^f0103747:	e8 f9 d7 ff ff       	call   f0100f45 <page_insert>$/;"	l
f010374c	obj/kern/kernel.asm	/^f010374c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010374f	obj/kern/kernel.asm	/^f010374f:	e9 ef fe ff ff       	jmp    f0103643 <syscall+0x50>$/;"	l
f0103754	obj/kern/kernel.asm	/^f0103754:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0103757	obj/kern/kernel.asm	/^f0103757:	68 e8 52 10 f0       	push   $0xf01052e8$/;"	l
f010375c	obj/kern/kernel.asm	/^f010375c:	68 10 01 00 00       	push   $0x110$/;"	l
f0103761	obj/kern/kernel.asm	/^f0103761:	68 be 66 10 f0       	push   $0xf01066be$/;"	l
f0103766	obj/kern/kernel.asm	/^f0103766:	e8 d5 c8 ff ff       	call   f0100040 <_panic>$/;"	l
f010376b	obj/kern/kernel.asm	/^f010376b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010376e	obj/kern/kernel.asm	/^f010376e:	68 6c 58 10 f0       	push   $0xf010586c$/;"	l
f0103773	obj/kern/kernel.asm	/^f0103773:	6a 51                	push   $0x51$/;"	l
f0103775	obj/kern/kernel.asm	/^f0103775:	68 5d 5e 10 f0       	push   $0xf0105e5d$/;"	l
f010377a	obj/kern/kernel.asm	/^f010377a:	e8 c1 c8 ff ff       	call   f0100040 <_panic>$/;"	l
f010377f	obj/kern/kernel.asm	/^f010377f:	e8 cb 14 00 00       	call   f0104c4f <cpunum>$/;"	l
f0103784	obj/kern/kernel.asm	/^f0103784:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103787	obj/kern/kernel.asm	/^f0103787:	8b 80 28 10 24 f0    	mov    -0xfdbefd8(%eax),%eax$/;"	l
f010378d	obj/kern/kernel.asm	/^f010378d:	8b 58 7c             	mov    0x7c(%eax),%ebx$/;"	l
f0103790	obj/kern/kernel.asm	/^f0103790:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0103796	obj/kern/kernel.asm	/^f0103796:	e8 b4 14 00 00       	call   f0104c4f <cpunum>$/;"	l
f010379b	obj/kern/kernel.asm	/^f010379b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010379e	obj/kern/kernel.asm	/^f010379e:	8b 80 28 10 24 f0    	mov    -0xfdbefd8(%eax),%eax$/;"	l
f01037a4	obj/kern/kernel.asm	/^f01037a4:	8b 40 7c             	mov    0x7c(%eax),%eax$/;"	l
f01037a7	obj/kern/kernel.asm	/^f01037a7:	03 45 0c             	add    0xc(%ebp),%eax$/;"	l
f01037aa	obj/kern/kernel.asm	/^f01037aa:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f01037af	obj/kern/kernel.asm	/^f01037af:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01037b4	obj/kern/kernel.asm	/^f01037b4:	89 c7                	mov    %eax,%edi$/;"	l
f01037b6	obj/kern/kernel.asm	/^f01037b6:	8d 75 e4             	lea    -0x1c(%ebp),%esi$/;"	l
f01037b9	obj/kern/kernel.asm	/^f01037b9:	eb 2d                	jmp    f01037e8 <syscall+0x1f5>$/;"	l
f01037bb	obj/kern/kernel.asm	/^f01037bb:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01037be	obj/kern/kernel.asm	/^f01037be:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f01037c3	obj/kern/kernel.asm	/^f01037c3:	e8 87 14 00 00       	call   f0104c4f <cpunum>$/;"	l
f01037c8	obj/kern/kernel.asm	/^f01037c8:	6a 06                	push   $0x6$/;"	l
f01037ca	obj/kern/kernel.asm	/^f01037ca:	53                   	push   %ebx$/;"	l
f01037cb	obj/kern/kernel.asm	/^f01037cb:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01037ce	obj/kern/kernel.asm	/^f01037ce:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01037d1	obj/kern/kernel.asm	/^f01037d1:	8b 80 28 10 24 f0    	mov    -0xfdbefd8(%eax),%eax$/;"	l
f01037d7	obj/kern/kernel.asm	/^f01037d7:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f01037da	obj/kern/kernel.asm	/^f01037da:	e8 66 d7 ff ff       	call   f0100f45 <page_insert>$/;"	l
f01037df	obj/kern/kernel.asm	/^f01037df:	83 c4 10             	add    $0x10,%esp$/;"	l
f01037e2	obj/kern/kernel.asm	/^f01037e2:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01037e8	obj/kern/kernel.asm	/^f01037e8:	39 df                	cmp    %ebx,%edi$/;"	l
f01037ea	obj/kern/kernel.asm	/^f01037ea:	76 4d                	jbe    f0103839 <syscall+0x246>$/;"	l
f01037ec	obj/kern/kernel.asm	/^f01037ec:	e8 5e 14 00 00       	call   f0104c4f <cpunum>$/;"	l
f01037f1	obj/kern/kernel.asm	/^f01037f1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01037f4	obj/kern/kernel.asm	/^f01037f4:	56                   	push   %esi$/;"	l
f01037f5	obj/kern/kernel.asm	/^f01037f5:	53                   	push   %ebx$/;"	l
f01037f6	obj/kern/kernel.asm	/^f01037f6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01037f9	obj/kern/kernel.asm	/^f01037f9:	8b 80 28 10 24 f0    	mov    -0xfdbefd8(%eax),%eax$/;"	l
f01037ff	obj/kern/kernel.asm	/^f01037ff:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0103802	obj/kern/kernel.asm	/^f0103802:	e8 5c d6 ff ff       	call   f0100e63 <page_lookup>$/;"	l
f0103807	obj/kern/kernel.asm	/^f0103807:	83 c4 10             	add    $0x10,%esp$/;"	l
f010380a	obj/kern/kernel.asm	/^f010380a:	85 c0                	test   %eax,%eax$/;"	l
f010380c	obj/kern/kernel.asm	/^f010380c:	75 d4                	jne    f01037e2 <syscall+0x1ef>$/;"	l
f010380e	obj/kern/kernel.asm	/^f010380e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103811	obj/kern/kernel.asm	/^f0103811:	6a 01                	push   $0x1$/;"	l
f0103813	obj/kern/kernel.asm	/^f0103813:	e8 87 d4 ff ff       	call   f0100c9f <page_alloc>$/;"	l
f0103818	obj/kern/kernel.asm	/^f0103818:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010381b	obj/kern/kernel.asm	/^f010381b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010381e	obj/kern/kernel.asm	/^f010381e:	85 c0                	test   %eax,%eax$/;"	l
f0103820	obj/kern/kernel.asm	/^f0103820:	75 99                	jne    f01037bb <syscall+0x1c8>$/;"	l
f0103822	obj/kern/kernel.asm	/^f0103822:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103825	obj/kern/kernel.asm	/^f0103825:	68 d0 66 10 f0       	push   $0xf01066d0$/;"	l
f010382a	obj/kern/kernel.asm	/^f010382a:	68 27 01 00 00       	push   $0x127$/;"	l
f010382f	obj/kern/kernel.asm	/^f010382f:	68 be 66 10 f0       	push   $0xf01066be$/;"	l
f0103834	obj/kern/kernel.asm	/^f0103834:	e8 07 c8 ff ff       	call   f0100040 <_panic>$/;"	l
f0103839	obj/kern/kernel.asm	/^f0103839:	e8 11 14 00 00       	call   f0104c4f <cpunum>$/;"	l
f010383e	obj/kern/kernel.asm	/^f010383e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103841	obj/kern/kernel.asm	/^f0103841:	8b 90 28 10 24 f0    	mov    -0xfdbefd8(%eax),%edx$/;"	l
f0103847	obj/kern/kernel.asm	/^f0103847:	8b 42 7c             	mov    0x7c(%edx),%eax$/;"	l
f010384a	obj/kern/kernel.asm	/^f010384a:	03 45 0c             	add    0xc(%ebp),%eax$/;"	l
f010384d	obj/kern/kernel.asm	/^f010384d:	89 42 7c             	mov    %eax,0x7c(%edx)$/;"	l
f0103850	obj/kern/kernel.asm	/^f0103850:	e9 ee fd ff ff       	jmp    f0103643 <syscall+0x50>$/;"	l
f0103855	obj/kern/kernel.asm	/^f0103855:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010385a	obj/kern/kernel.asm	/^f010385a:	e9 e4 fd ff ff       	jmp    f0103643 <syscall+0x50>$/;"	l
f010385f	obj/kern/kernel.asm	/^f010385f <stab_binsearch>:$/;"	l
f010385f	obj/kern/kernel.asm	/^f010385f:	55                   	push   %ebp$/;"	l
f0103860	obj/kern/kernel.asm	/^f0103860:	89 e5                	mov    %esp,%ebp$/;"	l
f0103862	obj/kern/kernel.asm	/^f0103862:	57                   	push   %edi$/;"	l
f0103863	obj/kern/kernel.asm	/^f0103863:	56                   	push   %esi$/;"	l
f0103864	obj/kern/kernel.asm	/^f0103864:	53                   	push   %ebx$/;"	l
f0103865	obj/kern/kernel.asm	/^f0103865:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103868	obj/kern/kernel.asm	/^f0103868:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f010386b	obj/kern/kernel.asm	/^f010386b:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f010386e	obj/kern/kernel.asm	/^f010386e:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0103871	obj/kern/kernel.asm	/^f0103871:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103874	obj/kern/kernel.asm	/^f0103874:	8b 32                	mov    (%edx),%esi$/;"	l
f0103876	obj/kern/kernel.asm	/^f0103876:	8b 01                	mov    (%ecx),%eax$/;"	l
f0103878	obj/kern/kernel.asm	/^f0103878:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010387b	obj/kern/kernel.asm	/^f010387b:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f0103882	obj/kern/kernel.asm	/^f0103882:	eb 2f                	jmp    f01038b3 <stab_binsearch+0x54>$/;"	l
f0103884	obj/kern/kernel.asm	/^f0103884:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0103887	obj/kern/kernel.asm	/^f0103887:	39 c6                	cmp    %eax,%esi$/;"	l
f0103889	obj/kern/kernel.asm	/^f0103889:	7f 49                	jg     f01038d4 <stab_binsearch+0x75>$/;"	l
f010388b	obj/kern/kernel.asm	/^f010388b:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f010388e	obj/kern/kernel.asm	/^f010388e:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0103891	obj/kern/kernel.asm	/^f0103891:	39 f9                	cmp    %edi,%ecx$/;"	l
f0103893	obj/kern/kernel.asm	/^f0103893:	75 ef                	jne    f0103884 <stab_binsearch+0x25>$/;"	l
f0103895	obj/kern/kernel.asm	/^f0103895:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0103898	obj/kern/kernel.asm	/^f0103898:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f010389b	obj/kern/kernel.asm	/^f010389b:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f010389f	obj/kern/kernel.asm	/^f010389f:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f01038a2	obj/kern/kernel.asm	/^f01038a2:	73 35                	jae    f01038d9 <stab_binsearch+0x7a>$/;"	l
f01038a4	obj/kern/kernel.asm	/^f01038a4:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f01038a7	obj/kern/kernel.asm	/^f01038a7:	89 06                	mov    %eax,(%esi)$/;"	l
f01038a9	obj/kern/kernel.asm	/^f01038a9:	8d 73 01             	lea    0x1(%ebx),%esi$/;"	l
f01038ac	obj/kern/kernel.asm	/^f01038ac:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f01038b3	obj/kern/kernel.asm	/^f01038b3:	3b 75 f0             	cmp    -0x10(%ebp),%esi$/;"	l
f01038b6	obj/kern/kernel.asm	/^f01038b6:	7f 4e                	jg     f0103906 <stab_binsearch+0xa7>$/;"	l
f01038b8	obj/kern/kernel.asm	/^f01038b8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01038bb	obj/kern/kernel.asm	/^f01038bb:	01 f0                	add    %esi,%eax$/;"	l
f01038bd	obj/kern/kernel.asm	/^f01038bd:	89 c3                	mov    %eax,%ebx$/;"	l
f01038bf	obj/kern/kernel.asm	/^f01038bf:	c1 eb 1f             	shr    $0x1f,%ebx$/;"	l
f01038c2	obj/kern/kernel.asm	/^f01038c2:	01 c3                	add    %eax,%ebx$/;"	l
f01038c4	obj/kern/kernel.asm	/^f01038c4:	d1 fb                	sar    %ebx$/;"	d
f01038c6	obj/kern/kernel.asm	/^f01038c6:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f01038c9	obj/kern/kernel.asm	/^f01038c9:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f01038cc	obj/kern/kernel.asm	/^f01038cc:	8d 54 81 04          	lea    0x4(%ecx,%eax,4),%edx$/;"	l
f01038d0	obj/kern/kernel.asm	/^f01038d0:	89 d8                	mov    %ebx,%eax$/;"	l
f01038d2	obj/kern/kernel.asm	/^f01038d2:	eb b3                	jmp    f0103887 <stab_binsearch+0x28>$/;"	l
f01038d4	obj/kern/kernel.asm	/^f01038d4:	8d 73 01             	lea    0x1(%ebx),%esi$/;"	l
f01038d7	obj/kern/kernel.asm	/^f01038d7:	eb da                	jmp    f01038b3 <stab_binsearch+0x54>$/;"	l
f01038d9	obj/kern/kernel.asm	/^f01038d9:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f01038dc	obj/kern/kernel.asm	/^f01038dc:	76 14                	jbe    f01038f2 <stab_binsearch+0x93>$/;"	l
f01038de	obj/kern/kernel.asm	/^f01038de:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01038e1	obj/kern/kernel.asm	/^f01038e1:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01038e4	obj/kern/kernel.asm	/^f01038e4:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f01038e7	obj/kern/kernel.asm	/^f01038e7:	89 03                	mov    %eax,(%ebx)$/;"	l
f01038e9	obj/kern/kernel.asm	/^f01038e9:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f01038f0	obj/kern/kernel.asm	/^f01038f0:	eb c1                	jmp    f01038b3 <stab_binsearch+0x54>$/;"	l
f01038f2	obj/kern/kernel.asm	/^f01038f2:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f01038f5	obj/kern/kernel.asm	/^f01038f5:	89 06                	mov    %eax,(%esi)$/;"	l
f01038f7	obj/kern/kernel.asm	/^f01038f7:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f01038fb	obj/kern/kernel.asm	/^f01038fb:	89 c6                	mov    %eax,%esi$/;"	l
f01038fd	obj/kern/kernel.asm	/^f01038fd:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0103904	obj/kern/kernel.asm	/^f0103904:	eb ad                	jmp    f01038b3 <stab_binsearch+0x54>$/;"	l
f0103906	obj/kern/kernel.asm	/^f0103906:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f010390a	obj/kern/kernel.asm	/^f010390a:	74 16                	je     f0103922 <stab_binsearch+0xc3>$/;"	l
f010390c	obj/kern/kernel.asm	/^f010390c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010390f	obj/kern/kernel.asm	/^f010390f:	8b 00                	mov    (%eax),%eax$/;"	l
f0103911	obj/kern/kernel.asm	/^f0103911:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0103914	obj/kern/kernel.asm	/^f0103914:	8b 0e                	mov    (%esi),%ecx$/;"	l
f0103916	obj/kern/kernel.asm	/^f0103916:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0103919	obj/kern/kernel.asm	/^f0103919:	8b 75 ec             	mov    -0x14(%ebp),%esi$/;"	l
f010391c	obj/kern/kernel.asm	/^f010391c:	8d 54 96 04          	lea    0x4(%esi,%edx,4),%edx$/;"	l
f0103920	obj/kern/kernel.asm	/^f0103920:	eb 12                	jmp    f0103934 <stab_binsearch+0xd5>$/;"	l
f0103922	obj/kern/kernel.asm	/^f0103922:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103925	obj/kern/kernel.asm	/^f0103925:	8b 00                	mov    (%eax),%eax$/;"	l
f0103927	obj/kern/kernel.asm	/^f0103927:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010392a	obj/kern/kernel.asm	/^f010392a:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f010392d	obj/kern/kernel.asm	/^f010392d:	89 07                	mov    %eax,(%edi)$/;"	l
f010392f	obj/kern/kernel.asm	/^f010392f:	eb 16                	jmp    f0103947 <stab_binsearch+0xe8>$/;"	l
f0103931	obj/kern/kernel.asm	/^f0103931:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0103934	obj/kern/kernel.asm	/^f0103934:	39 c1                	cmp    %eax,%ecx$/;"	l
f0103936	obj/kern/kernel.asm	/^f0103936:	7d 0a                	jge    f0103942 <stab_binsearch+0xe3>$/;"	l
f0103938	obj/kern/kernel.asm	/^f0103938:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f010393b	obj/kern/kernel.asm	/^f010393b:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f010393e	obj/kern/kernel.asm	/^f010393e:	39 fb                	cmp    %edi,%ebx$/;"	l
f0103940	obj/kern/kernel.asm	/^f0103940:	75 ef                	jne    f0103931 <stab_binsearch+0xd2>$/;"	l
f0103942	obj/kern/kernel.asm	/^f0103942:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0103945	obj/kern/kernel.asm	/^f0103945:	89 07                	mov    %eax,(%edi)$/;"	l
f0103947	obj/kern/kernel.asm	/^f0103947:	83 c4 14             	add    $0x14,%esp$/;"	l
f010394a	obj/kern/kernel.asm	/^f010394a:	5b                   	pop    %ebx$/;"	l
f010394b	obj/kern/kernel.asm	/^f010394b:	5e                   	pop    %esi$/;"	l
f010394c	obj/kern/kernel.asm	/^f010394c:	5f                   	pop    %edi$/;"	l
f010394d	obj/kern/kernel.asm	/^f010394d:	5d                   	pop    %ebp$/;"	l
f010394e	obj/kern/kernel.asm	/^f010394e:	c3                   	ret    $/;"	l
f010394f	obj/kern/kernel.asm	/^f010394f <debuginfo_eip>:$/;"	l
f010394f	obj/kern/kernel.asm	/^f010394f:	55                   	push   %ebp$/;"	l
f0103950	obj/kern/kernel.asm	/^f0103950:	89 e5                	mov    %esp,%ebp$/;"	l
f0103952	obj/kern/kernel.asm	/^f0103952:	57                   	push   %edi$/;"	l
f0103953	obj/kern/kernel.asm	/^f0103953:	56                   	push   %esi$/;"	l
f0103954	obj/kern/kernel.asm	/^f0103954:	53                   	push   %ebx$/;"	l
f0103955	obj/kern/kernel.asm	/^f0103955:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0103958	obj/kern/kernel.asm	/^f0103958:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010395b	obj/kern/kernel.asm	/^f010395b:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010395e	obj/kern/kernel.asm	/^f010395e:	c7 03 30 67 10 f0    	movl   $0xf0106730,(%ebx)$/;"	l
f0103964	obj/kern/kernel.asm	/^f0103964:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f010396b	obj/kern/kernel.asm	/^f010396b:	c7 43 08 30 67 10 f0 	movl   $0xf0106730,0x8(%ebx)$/;"	l
f0103972	obj/kern/kernel.asm	/^f0103972:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
f0103979	obj/kern/kernel.asm	/^f0103979:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f010397c	obj/kern/kernel.asm	/^f010397c:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
f0103983	obj/kern/kernel.asm	/^f0103983:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0103989	obj/kern/kernel.asm	/^f0103989:	77 1e                	ja     f01039a9 <debuginfo_eip+0x5a>$/;"	l
f010398b	obj/kern/kernel.asm	/^f010398b:	a1 00 00 20 00       	mov    0x200000,%eax$/;"	l
f0103990	obj/kern/kernel.asm	/^f0103990:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
f0103993	obj/kern/kernel.asm	/^f0103993:	a1 04 00 20 00       	mov    0x200004,%eax$/;"	l
f0103998	obj/kern/kernel.asm	/^f0103998:	8b 3d 08 00 20 00    	mov    0x200008,%edi$/;"	l
f010399e	obj/kern/kernel.asm	/^f010399e:	89 7d b8             	mov    %edi,-0x48(%ebp)$/;"	l
f01039a1	obj/kern/kernel.asm	/^f01039a1:	8b 3d 0c 00 20 00    	mov    0x20000c,%edi$/;"	l
f01039a7	obj/kern/kernel.asm	/^f01039a7:	eb 18                	jmp    f01039c1 <debuginfo_eip+0x72>$/;"	l
f01039a9	obj/kern/kernel.asm	/^f01039a9:	bf 5e 48 11 f0       	mov    $0xf011485e,%edi$/;"	l
f01039ae	obj/kern/kernel.asm	/^f01039ae:	c7 45 b8 81 10 11 f0 	movl   $0xf0111081,-0x48(%ebp)$/;"	l
f01039b5	obj/kern/kernel.asm	/^f01039b5:	b8 80 10 11 f0       	mov    $0xf0111080,%eax$/;"	l
f01039ba	obj/kern/kernel.asm	/^f01039ba:	c7 45 bc 94 6c 10 f0 	movl   $0xf0106c94,-0x44(%ebp)$/;"	l
f01039c1	obj/kern/kernel.asm	/^f01039c1:	39 7d b8             	cmp    %edi,-0x48(%ebp)$/;"	l
f01039c4	obj/kern/kernel.asm	/^f01039c4:	0f 83 b9 01 00 00    	jae    f0103b83 <debuginfo_eip+0x234>$/;"	l
f01039ca	obj/kern/kernel.asm	/^f01039ca:	80 7f ff 00          	cmpb   $0x0,-0x1(%edi)$/;"	l
f01039ce	obj/kern/kernel.asm	/^f01039ce:	0f 85 b6 01 00 00    	jne    f0103b8a <debuginfo_eip+0x23b>$/;"	l
f01039d4	obj/kern/kernel.asm	/^f01039d4:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f01039db	obj/kern/kernel.asm	/^f01039db:	2b 45 bc             	sub    -0x44(%ebp),%eax$/;"	l
f01039de	obj/kern/kernel.asm	/^f01039de:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f01039e1	obj/kern/kernel.asm	/^f01039e1:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f01039e7	obj/kern/kernel.asm	/^f01039e7:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01039ea	obj/kern/kernel.asm	/^f01039ea:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01039ed	obj/kern/kernel.asm	/^f01039ed:	56                   	push   %esi$/;"	l
f01039ee	obj/kern/kernel.asm	/^f01039ee:	6a 64                	push   $0x64$/;"	l
f01039f0	obj/kern/kernel.asm	/^f01039f0:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f01039f3	obj/kern/kernel.asm	/^f01039f3:	89 c1                	mov    %eax,%ecx$/;"	l
f01039f5	obj/kern/kernel.asm	/^f01039f5:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f01039f8	obj/kern/kernel.asm	/^f01039f8:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f01039fb	obj/kern/kernel.asm	/^f01039fb:	e8 5f fe ff ff       	call   f010385f <stab_binsearch>$/;"	l
f0103a00	obj/kern/kernel.asm	/^f0103a00:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103a03	obj/kern/kernel.asm	/^f0103a03:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103a06	obj/kern/kernel.asm	/^f0103a06:	85 c0                	test   %eax,%eax$/;"	l
f0103a08	obj/kern/kernel.asm	/^f0103a08:	0f 84 83 01 00 00    	je     f0103b91 <debuginfo_eip+0x242>$/;"	l
f0103a0e	obj/kern/kernel.asm	/^f0103a0e:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0103a11	obj/kern/kernel.asm	/^f0103a11:	8b 4d bc             	mov    -0x44(%ebp),%ecx$/;"	l
f0103a14	obj/kern/kernel.asm	/^f0103a14:	8b 14 91             	mov    (%ecx,%edx,4),%edx$/;"	l
f0103a17	obj/kern/kernel.asm	/^f0103a17:	8b 4d b8             	mov    -0x48(%ebp),%ecx$/;"	l
f0103a1a	obj/kern/kernel.asm	/^f0103a1a:	29 cf                	sub    %ecx,%edi$/;"	l
f0103a1c	obj/kern/kernel.asm	/^f0103a1c:	89 7d b4             	mov    %edi,-0x4c(%ebp)$/;"	l
f0103a1f	obj/kern/kernel.asm	/^f0103a1f:	39 fa                	cmp    %edi,%edx$/;"	l
f0103a21	obj/kern/kernel.asm	/^f0103a21:	73 04                	jae    f0103a27 <debuginfo_eip+0xd8>$/;"	l
f0103a23	obj/kern/kernel.asm	/^f0103a23:	01 ca                	add    %ecx,%edx$/;"	l
f0103a25	obj/kern/kernel.asm	/^f0103a25:	89 13                	mov    %edx,(%ebx)$/;"	l
f0103a27	obj/kern/kernel.asm	/^f0103a27:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0103a2a	obj/kern/kernel.asm	/^f0103a2a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103a2d	obj/kern/kernel.asm	/^f0103a2d:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103a30	obj/kern/kernel.asm	/^f0103a30:	56                   	push   %esi$/;"	l
f0103a31	obj/kern/kernel.asm	/^f0103a31:	6a 24                	push   $0x24$/;"	l
f0103a33	obj/kern/kernel.asm	/^f0103a33:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0103a36	obj/kern/kernel.asm	/^f0103a36:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0103a39	obj/kern/kernel.asm	/^f0103a39:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f0103a3c	obj/kern/kernel.asm	/^f0103a3c:	e8 1e fe ff ff       	call   f010385f <stab_binsearch>$/;"	l
f0103a41	obj/kern/kernel.asm	/^f0103a41:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0103a44	obj/kern/kernel.asm	/^f0103a44:	8b 7d d8             	mov    -0x28(%ebp),%edi$/;"	l
f0103a47	obj/kern/kernel.asm	/^f0103a47:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103a4a	obj/kern/kernel.asm	/^f0103a4a:	39 f8                	cmp    %edi,%eax$/;"	l
f0103a4c	obj/kern/kernel.asm	/^f0103a4c:	0f 8f 81 00 00 00    	jg     f0103ad3 <debuginfo_eip+0x184>$/;"	l
f0103a52	obj/kern/kernel.asm	/^f0103a52:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0103a55	obj/kern/kernel.asm	/^f0103a55:	8b 4d bc             	mov    -0x44(%ebp),%ecx$/;"	l
f0103a58	obj/kern/kernel.asm	/^f0103a58:	8d 0c 91             	lea    (%ecx,%edx,4),%ecx$/;"	l
f0103a5b	obj/kern/kernel.asm	/^f0103a5b:	8b 11                	mov    (%ecx),%edx$/;"	l
f0103a5d	obj/kern/kernel.asm	/^f0103a5d:	39 55 b4             	cmp    %edx,-0x4c(%ebp)$/;"	l
f0103a60	obj/kern/kernel.asm	/^f0103a60:	76 06                	jbe    f0103a68 <debuginfo_eip+0x119>$/;"	l
f0103a62	obj/kern/kernel.asm	/^f0103a62:	03 55 b8             	add    -0x48(%ebp),%edx$/;"	l
f0103a65	obj/kern/kernel.asm	/^f0103a65:	89 53 08             	mov    %edx,0x8(%ebx)$/;"	l
f0103a68	obj/kern/kernel.asm	/^f0103a68:	8b 51 08             	mov    0x8(%ecx),%edx$/;"	l
f0103a6b	obj/kern/kernel.asm	/^f0103a6b:	89 53 10             	mov    %edx,0x10(%ebx)$/;"	l
f0103a6e	obj/kern/kernel.asm	/^f0103a6e:	29 d6                	sub    %edx,%esi$/;"	l
f0103a70	obj/kern/kernel.asm	/^f0103a70:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103a73	obj/kern/kernel.asm	/^f0103a73:	89 7d d0             	mov    %edi,-0x30(%ebp)$/;"	l
f0103a76	obj/kern/kernel.asm	/^f0103a76:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103a79	obj/kern/kernel.asm	/^f0103a79:	6a 3a                	push   $0x3a$/;"	l
f0103a7b	obj/kern/kernel.asm	/^f0103a7b:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0103a7e	obj/kern/kernel.asm	/^f0103a7e:	e8 8c 0b 00 00       	call   f010460f <strfind>$/;"	l
f0103a83	obj/kern/kernel.asm	/^f0103a83:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
f0103a86	obj/kern/kernel.asm	/^f0103a86:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f0103a89	obj/kern/kernel.asm	/^f0103a89:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103a8c	obj/kern/kernel.asm	/^f0103a8c:	56                   	push   %esi$/;"	l
f0103a8d	obj/kern/kernel.asm	/^f0103a8d:	6a 44                	push   $0x44$/;"	l
f0103a8f	obj/kern/kernel.asm	/^f0103a8f:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f0103a92	obj/kern/kernel.asm	/^f0103a92:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f0103a95	obj/kern/kernel.asm	/^f0103a95:	8b 75 bc             	mov    -0x44(%ebp),%esi$/;"	l
f0103a98	obj/kern/kernel.asm	/^f0103a98:	89 f0                	mov    %esi,%eax$/;"	l
f0103a9a	obj/kern/kernel.asm	/^f0103a9a:	e8 c0 fd ff ff       	call   f010385f <stab_binsearch>$/;"	l
f0103a9f	obj/kern/kernel.asm	/^f0103a9f:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0103aa2	obj/kern/kernel.asm	/^f0103aa2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103aa5	obj/kern/kernel.asm	/^f0103aa5:	3b 55 d0             	cmp    -0x30(%ebp),%edx$/;"	l
f0103aa8	obj/kern/kernel.asm	/^f0103aa8:	0f 8f ea 00 00 00    	jg     f0103b98 <debuginfo_eip+0x249>$/;"	l
f0103aae	obj/kern/kernel.asm	/^f0103aae:	89 d0                	mov    %edx,%eax$/;"	l
f0103ab0	obj/kern/kernel.asm	/^f0103ab0:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f0103ab3	obj/kern/kernel.asm	/^f0103ab3:	c1 e2 02             	shl    $0x2,%edx$/;"	l
f0103ab6	obj/kern/kernel.asm	/^f0103ab6:	0f b7 4c 16 06       	movzwl 0x6(%esi,%edx,1),%ecx$/;"	l
f0103abb	obj/kern/kernel.asm	/^f0103abb:	89 4b 04             	mov    %ecx,0x4(%ebx)$/;"	l
f0103abe	obj/kern/kernel.asm	/^f0103abe:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0103ac1	obj/kern/kernel.asm	/^f0103ac1:	8d 54 16 04          	lea    0x4(%esi,%edx,1),%edx$/;"	l
f0103ac5	obj/kern/kernel.asm	/^f0103ac5:	c6 45 c7 00          	movb   $0x0,-0x39(%ebp)$/;"	l
f0103ac9	obj/kern/kernel.asm	/^f0103ac9:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0103ace	obj/kern/kernel.asm	/^f0103ace:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f0103ad1	obj/kern/kernel.asm	/^f0103ad1:	eb 1c                	jmp    f0103aef <debuginfo_eip+0x1a0>$/;"	l
f0103ad3	obj/kern/kernel.asm	/^f0103ad3:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f0103ad6	obj/kern/kernel.asm	/^f0103ad6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103ad9	obj/kern/kernel.asm	/^f0103ad9:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103adc	obj/kern/kernel.asm	/^f0103adc:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103adf	obj/kern/kernel.asm	/^f0103adf:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0103ae2	obj/kern/kernel.asm	/^f0103ae2:	eb 92                	jmp    f0103a76 <debuginfo_eip+0x127>$/;"	l
f0103ae4	obj/kern/kernel.asm	/^f0103ae4:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0103ae7	obj/kern/kernel.asm	/^f0103ae7:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0103aea	obj/kern/kernel.asm	/^f0103aea:	89 f3                	mov    %esi,%ebx$/;"	l
f0103aec	obj/kern/kernel.asm	/^f0103aec:	88 5d c7             	mov    %bl,-0x39(%ebp)$/;"	l
f0103aef	obj/kern/kernel.asm	/^f0103aef:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f0103af2	obj/kern/kernel.asm	/^f0103af2:	39 c7                	cmp    %eax,%edi$/;"	l
f0103af4	obj/kern/kernel.asm	/^f0103af4:	7f 24                	jg     f0103b1a <debuginfo_eip+0x1cb>$/;"	l
f0103af6	obj/kern/kernel.asm	/^f0103af6:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0103af9	obj/kern/kernel.asm	/^f0103af9:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0103afc	obj/kern/kernel.asm	/^f0103afc:	74 42                	je     f0103b40 <debuginfo_eip+0x1f1>$/;"	l
f0103afe	obj/kern/kernel.asm	/^f0103afe:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f0103b01	obj/kern/kernel.asm	/^f0103b01:	75 e1                	jne    f0103ae4 <debuginfo_eip+0x195>$/;"	l
f0103b03	obj/kern/kernel.asm	/^f0103b03:	83 7a 04 00          	cmpl   $0x0,0x4(%edx)$/;"	l
f0103b07	obj/kern/kernel.asm	/^f0103b07:	74 db                	je     f0103ae4 <debuginfo_eip+0x195>$/;"	l
f0103b09	obj/kern/kernel.asm	/^f0103b09:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0103b0c	obj/kern/kernel.asm	/^f0103b0c:	80 7d c7 00          	cmpb   $0x0,-0x39(%ebp)$/;"	l
f0103b10	obj/kern/kernel.asm	/^f0103b10:	74 37                	je     f0103b49 <debuginfo_eip+0x1fa>$/;"	l
f0103b12	obj/kern/kernel.asm	/^f0103b12:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f0103b15	obj/kern/kernel.asm	/^f0103b15:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0103b18	obj/kern/kernel.asm	/^f0103b18:	eb 2f                	jmp    f0103b49 <debuginfo_eip+0x1fa>$/;"	l
f0103b1a	obj/kern/kernel.asm	/^f0103b1a:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0103b1d	obj/kern/kernel.asm	/^f0103b1d:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103b20	obj/kern/kernel.asm	/^f0103b20:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f0103b23	obj/kern/kernel.asm	/^f0103b23:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103b28	obj/kern/kernel.asm	/^f0103b28:	39 f2                	cmp    %esi,%edx$/;"	l
f0103b2a	obj/kern/kernel.asm	/^f0103b2a:	7d 78                	jge    f0103ba4 <debuginfo_eip+0x255>$/;"	l
f0103b2c	obj/kern/kernel.asm	/^f0103b2c:	83 c2 01             	add    $0x1,%edx$/;"	l
f0103b2f	obj/kern/kernel.asm	/^f0103b2f:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0103b32	obj/kern/kernel.asm	/^f0103b32:	89 d0                	mov    %edx,%eax$/;"	l
f0103b34	obj/kern/kernel.asm	/^f0103b34:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f0103b37	obj/kern/kernel.asm	/^f0103b37:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f0103b3a	obj/kern/kernel.asm	/^f0103b3a:	8d 54 97 04          	lea    0x4(%edi,%edx,4),%edx$/;"	l
f0103b3e	obj/kern/kernel.asm	/^f0103b3e:	eb 2a                	jmp    f0103b6a <debuginfo_eip+0x21b>$/;"	l
f0103b40	obj/kern/kernel.asm	/^f0103b40:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0103b43	obj/kern/kernel.asm	/^f0103b43:	80 7d c7 00          	cmpb   $0x0,-0x39(%ebp)$/;"	l
f0103b47	obj/kern/kernel.asm	/^f0103b47:	75 15                	jne    f0103b5e <debuginfo_eip+0x20f>$/;"	l
f0103b49	obj/kern/kernel.asm	/^f0103b49:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0103b4c	obj/kern/kernel.asm	/^f0103b4c:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f0103b4f	obj/kern/kernel.asm	/^f0103b4f:	8b 04 87             	mov    (%edi,%eax,4),%eax$/;"	l
f0103b52	obj/kern/kernel.asm	/^f0103b52:	39 45 b4             	cmp    %eax,-0x4c(%ebp)$/;"	l
f0103b55	obj/kern/kernel.asm	/^f0103b55:	76 c6                	jbe    f0103b1d <debuginfo_eip+0x1ce>$/;"	l
f0103b57	obj/kern/kernel.asm	/^f0103b57:	03 45 b8             	add    -0x48(%ebp),%eax$/;"	l
f0103b5a	obj/kern/kernel.asm	/^f0103b5a:	89 03                	mov    %eax,(%ebx)$/;"	l
f0103b5c	obj/kern/kernel.asm	/^f0103b5c:	eb bf                	jmp    f0103b1d <debuginfo_eip+0x1ce>$/;"	l
f0103b5e	obj/kern/kernel.asm	/^f0103b5e:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f0103b61	obj/kern/kernel.asm	/^f0103b61:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0103b64	obj/kern/kernel.asm	/^f0103b64:	eb e3                	jmp    f0103b49 <debuginfo_eip+0x1fa>$/;"	l
f0103b66	obj/kern/kernel.asm	/^f0103b66:	83 43 14 01          	addl   $0x1,0x14(%ebx)$/;"	l
f0103b6a	obj/kern/kernel.asm	/^f0103b6a:	39 c6                	cmp    %eax,%esi$/;"	l
f0103b6c	obj/kern/kernel.asm	/^f0103b6c:	7e 31                	jle    f0103b9f <debuginfo_eip+0x250>$/;"	l
f0103b6e	obj/kern/kernel.asm	/^f0103b6e:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0103b71	obj/kern/kernel.asm	/^f0103b71:	83 c0 01             	add    $0x1,%eax$/;"	l
f0103b74	obj/kern/kernel.asm	/^f0103b74:	83 c2 0c             	add    $0xc,%edx$/;"	l
f0103b77	obj/kern/kernel.asm	/^f0103b77:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
f0103b7a	obj/kern/kernel.asm	/^f0103b7a:	74 ea                	je     f0103b66 <debuginfo_eip+0x217>$/;"	l
f0103b7c	obj/kern/kernel.asm	/^f0103b7c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103b81	obj/kern/kernel.asm	/^f0103b81:	eb 21                	jmp    f0103ba4 <debuginfo_eip+0x255>$/;"	l
f0103b83	obj/kern/kernel.asm	/^f0103b83:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103b88	obj/kern/kernel.asm	/^f0103b88:	eb 1a                	jmp    f0103ba4 <debuginfo_eip+0x255>$/;"	l
f0103b8a	obj/kern/kernel.asm	/^f0103b8a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103b8f	obj/kern/kernel.asm	/^f0103b8f:	eb 13                	jmp    f0103ba4 <debuginfo_eip+0x255>$/;"	l
f0103b91	obj/kern/kernel.asm	/^f0103b91:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103b96	obj/kern/kernel.asm	/^f0103b96:	eb 0c                	jmp    f0103ba4 <debuginfo_eip+0x255>$/;"	l
f0103b98	obj/kern/kernel.asm	/^f0103b98:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103b9d	obj/kern/kernel.asm	/^f0103b9d:	eb 05                	jmp    f0103ba4 <debuginfo_eip+0x255>$/;"	l
f0103b9f	obj/kern/kernel.asm	/^f0103b9f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103ba4	obj/kern/kernel.asm	/^f0103ba4:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103ba7	obj/kern/kernel.asm	/^f0103ba7:	5b                   	pop    %ebx$/;"	l
f0103ba8	obj/kern/kernel.asm	/^f0103ba8:	5e                   	pop    %esi$/;"	l
f0103ba9	obj/kern/kernel.asm	/^f0103ba9:	5f                   	pop    %edi$/;"	l
f0103baa	obj/kern/kernel.asm	/^f0103baa:	5d                   	pop    %ebp$/;"	l
f0103bab	obj/kern/kernel.asm	/^f0103bab:	c3                   	ret    $/;"	l
f0103bac	obj/kern/kernel.asm	/^f0103bac <printnum>:$/;"	l
f0103bac	obj/kern/kernel.asm	/^f0103bac:	55                   	push   %ebp$/;"	l
f0103bad	obj/kern/kernel.asm	/^f0103bad:	89 e5                	mov    %esp,%ebp$/;"	l
f0103baf	obj/kern/kernel.asm	/^f0103baf:	57                   	push   %edi$/;"	l
f0103bb0	obj/kern/kernel.asm	/^f0103bb0:	56                   	push   %esi$/;"	l
f0103bb1	obj/kern/kernel.asm	/^f0103bb1:	53                   	push   %ebx$/;"	l
f0103bb2	obj/kern/kernel.asm	/^f0103bb2:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0103bb5	obj/kern/kernel.asm	/^f0103bb5:	89 c6                	mov    %eax,%esi$/;"	l
f0103bb7	obj/kern/kernel.asm	/^f0103bb7:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0103bba	obj/kern/kernel.asm	/^f0103bba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103bbd	obj/kern/kernel.asm	/^f0103bbd:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0103bc0	obj/kern/kernel.asm	/^f0103bc0:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0103bc3	obj/kern/kernel.asm	/^f0103bc3:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0103bc6	obj/kern/kernel.asm	/^f0103bc6:	8b 7d 14             	mov    0x14(%ebp),%edi$/;"	l
f0103bc9	obj/kern/kernel.asm	/^f0103bc9:	8b 5d 18             	mov    0x18(%ebp),%ebx$/;"	l
f0103bcc	obj/kern/kernel.asm	/^f0103bcc:	83 fb 2d             	cmp    $0x2d,%ebx$/;"	l
f0103bcf	obj/kern/kernel.asm	/^f0103bcf:	0f 84 ba 00 00 00    	je     f0103c8f <printnum+0xe3>$/;"	l
f0103bd5	obj/kern/kernel.asm	/^f0103bd5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0103bd8	obj/kern/kernel.asm	/^f0103bd8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0103bdd	obj/kern/kernel.asm	/^f0103bdd:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0103be0	obj/kern/kernel.asm	/^f0103be0:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0103be3	obj/kern/kernel.asm	/^f0103be3:	89 d1                	mov    %edx,%ecx$/;"	l
f0103be5	obj/kern/kernel.asm	/^f0103be5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103be8	obj/kern/kernel.asm	/^f0103be8:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0103beb	obj/kern/kernel.asm	/^f0103beb:	39 d1                	cmp    %edx,%ecx$/;"	l
f0103bed	obj/kern/kernel.asm	/^f0103bed:	72 09                	jb     f0103bf8 <printnum+0x4c>$/;"	l
f0103bef	obj/kern/kernel.asm	/^f0103bef:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f0103bf2	obj/kern/kernel.asm	/^f0103bf2:	0f 87 5e 01 00 00    	ja     f0103d56 <printnum+0x1aa>$/;"	l
f0103bf8	obj/kern/kernel.asm	/^f0103bf8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103bfb	obj/kern/kernel.asm	/^f0103bfb:	53                   	push   %ebx$/;"	l
f0103bfc	obj/kern/kernel.asm	/^f0103bfc:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0103bff	obj/kern/kernel.asm	/^f0103bff:	57                   	push   %edi$/;"	l
f0103c00	obj/kern/kernel.asm	/^f0103c00:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0103c03	obj/kern/kernel.asm	/^f0103c03:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103c06	obj/kern/kernel.asm	/^f0103c06:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0103c09	obj/kern/kernel.asm	/^f0103c09:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0103c0c	obj/kern/kernel.asm	/^f0103c0c:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0103c0f	obj/kern/kernel.asm	/^f0103c0f:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0103c12	obj/kern/kernel.asm	/^f0103c12:	e8 39 14 00 00       	call   f0105050 <__udivdi3>$/;"	l
f0103c17	obj/kern/kernel.asm	/^f0103c17:	83 c4 18             	add    $0x18,%esp$/;"	l
f0103c1a	obj/kern/kernel.asm	/^f0103c1a:	52                   	push   %edx$/;"	l
f0103c1b	obj/kern/kernel.asm	/^f0103c1b:	50                   	push   %eax$/;"	l
f0103c1c	obj/kern/kernel.asm	/^f0103c1c:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103c1f	obj/kern/kernel.asm	/^f0103c1f:	89 f0                	mov    %esi,%eax$/;"	l
f0103c21	obj/kern/kernel.asm	/^f0103c21:	e8 86 ff ff ff       	call   f0103bac <printnum>$/;"	l
f0103c26	obj/kern/kernel.asm	/^f0103c26:	83 c4 20             	add    $0x20,%esp$/;"	l
f0103c29	obj/kern/kernel.asm	/^f0103c29:	e9 2f 01 00 00       	jmp    f0103d5d <printnum+0x1b1>$/;"	l
f0103c2e	obj/kern/kernel.asm	/^f0103c2e:	89 f8                	mov    %edi,%eax$/;"	l
f0103c30	obj/kern/kernel.asm	/^f0103c30:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
f0103c34	obj/kern/kernel.asm	/^f0103c34:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0103c37	obj/kern/kernel.asm	/^f0103c37:	89 f0                	mov    %esi,%eax$/;"	l
f0103c39	obj/kern/kernel.asm	/^f0103c39:	f7 65 10             	mull   0x10(%ebp)$/;"	l
f0103c3c	obj/kern/kernel.asm	/^f0103c3c:	89 c6                	mov    %eax,%esi$/;"	l
f0103c3e	obj/kern/kernel.asm	/^f0103c3e:	89 d7                	mov    %edx,%edi$/;"	l
f0103c40	obj/kern/kernel.asm	/^f0103c40:	03 7d d0             	add    -0x30(%ebp),%edi$/;"	l
f0103c43	obj/kern/kernel.asm	/^f0103c43:	ff 75 cc             	pushl  -0x34(%ebp)$/;"	l
f0103c46	obj/kern/kernel.asm	/^f0103c46:	ff 75 c8             	pushl  -0x38(%ebp)$/;"	l
f0103c49	obj/kern/kernel.asm	/^f0103c49:	53                   	push   %ebx$/;"	l
f0103c4a	obj/kern/kernel.asm	/^f0103c4a:	51                   	push   %ecx$/;"	l
f0103c4b	obj/kern/kernel.asm	/^f0103c4b:	e8 00 14 00 00       	call   f0105050 <__udivdi3>$/;"	l
f0103c50	obj/kern/kernel.asm	/^f0103c50:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103c53	obj/kern/kernel.asm	/^f0103c53:	89 c1                	mov    %eax,%ecx$/;"	l
f0103c55	obj/kern/kernel.asm	/^f0103c55:	89 d3                	mov    %edx,%ebx$/;"	l
f0103c57	obj/kern/kernel.asm	/^f0103c57:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
f0103c5b	obj/kern/kernel.asm	/^f0103c5b:	89 da                	mov    %ebx,%edx$/;"	l
f0103c5d	obj/kern/kernel.asm	/^f0103c5d:	09 ca                	or     %ecx,%edx$/;"	l
f0103c5f	obj/kern/kernel.asm	/^f0103c5f:	75 cd                	jne    f0103c2e <printnum+0x82>$/;"	l
f0103c61	obj/kern/kernel.asm	/^f0103c61:	89 75 c0             	mov    %esi,-0x40(%ebp)$/;"	l
f0103c64	obj/kern/kernel.asm	/^f0103c64:	89 7d c4             	mov    %edi,-0x3c(%ebp)$/;"	l
f0103c67	obj/kern/kernel.asm	/^f0103c67:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f0103c6a	obj/kern/kernel.asm	/^f0103c6a:	8b 7d 14             	mov    0x14(%ebp),%edi$/;"	l
f0103c6d	obj/kern/kernel.asm	/^f0103c6d:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0103c70	obj/kern/kernel.asm	/^f0103c70:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0103c73	obj/kern/kernel.asm	/^f0103c73:	89 da                	mov    %ebx,%edx$/;"	l
f0103c75	obj/kern/kernel.asm	/^f0103c75:	09 ca                	or     %ecx,%edx$/;"	l
f0103c77	obj/kern/kernel.asm	/^f0103c77:	75 4a                	jne    f0103cc3 <printnum+0x117>$/;"	l
f0103c79	obj/kern/kernel.asm	/^f0103c79:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103c7c	obj/kern/kernel.asm	/^f0103c7c:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f0103c7f	obj/kern/kernel.asm	/^f0103c7f:	53                   	push   %ebx$/;"	l
f0103c80	obj/kern/kernel.asm	/^f0103c80:	6a 30                	push   $0x30$/;"	l
f0103c82	obj/kern/kernel.asm	/^f0103c82:	ff d6                	call   *%esi$/;"	l
f0103c84	obj/kern/kernel.asm	/^f0103c84:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0103c87	obj/kern/kernel.asm	/^f0103c87:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103c8a	obj/kern/kernel.asm	/^f0103c8a:	e9 b1 00 00 00       	jmp    f0103d40 <printnum+0x194>$/;"	l
f0103c8f	obj/kern/kernel.asm	/^f0103c8f:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0103c92	obj/kern/kernel.asm	/^f0103c92:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0103c95	obj/kern/kernel.asm	/^f0103c95:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)$/;"	l
f0103c9c	obj/kern/kernel.asm	/^f0103c9c:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)$/;"	l
f0103ca3	obj/kern/kernel.asm	/^f0103ca3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0103ca6	obj/kern/kernel.asm	/^f0103ca6:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0103cab	obj/kern/kernel.asm	/^f0103cab:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0103cae	obj/kern/kernel.asm	/^f0103cae:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
f0103cb1	obj/kern/kernel.asm	/^f0103cb1:	89 75 d8             	mov    %esi,-0x28(%ebp)$/;"	l
f0103cb4	obj/kern/kernel.asm	/^f0103cb4:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f0103cb7	obj/kern/kernel.asm	/^f0103cb7:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0103cbc	obj/kern/kernel.asm	/^f0103cbc:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0103cc1	obj/kern/kernel.asm	/^f0103cc1:	eb 98                	jmp    f0103c5b <printnum+0xaf>$/;"	l
f0103cc3	obj/kern/kernel.asm	/^f0103cc3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0103cc6	obj/kern/kernel.asm	/^f0103cc6:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0103ccb	obj/kern/kernel.asm	/^f0103ccb:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0103cce	obj/kern/kernel.asm	/^f0103cce:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0103cd1	obj/kern/kernel.asm	/^f0103cd1:	89 f3                	mov    %esi,%ebx$/;"	l
f0103cd3	obj/kern/kernel.asm	/^f0103cd3:	8b 75 c0             	mov    -0x40(%ebp),%esi$/;"	l
f0103cd6	obj/kern/kernel.asm	/^f0103cd6:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f0103cd9	obj/kern/kernel.asm	/^f0103cd9:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0103cdc	obj/kern/kernel.asm	/^f0103cdc:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0103cdf	obj/kern/kernel.asm	/^f0103cdf:	57                   	push   %edi$/;"	l
f0103ce0	obj/kern/kernel.asm	/^f0103ce0:	56                   	push   %esi$/;"	l
f0103ce1	obj/kern/kernel.asm	/^f0103ce1:	e8 6a 13 00 00       	call   f0105050 <__udivdi3>$/;"	l
f0103ce6	obj/kern/kernel.asm	/^f0103ce6:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103ce9	obj/kern/kernel.asm	/^f0103ce9:	89 c6                	mov    %eax,%esi$/;"	l
f0103ceb	obj/kern/kernel.asm	/^f0103ceb:	89 d7                	mov    %edx,%edi$/;"	l
f0103ced	obj/kern/kernel.asm	/^f0103ced:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0103cf0	obj/kern/kernel.asm	/^f0103cf0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103cf3	obj/kern/kernel.asm	/^f0103cf3:	52                   	push   %edx$/;"	l
f0103cf4	obj/kern/kernel.asm	/^f0103cf4:	50                   	push   %eax$/;"	l
f0103cf5	obj/kern/kernel.asm	/^f0103cf5:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0103cf8	obj/kern/kernel.asm	/^f0103cf8:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0103cfb	obj/kern/kernel.asm	/^f0103cfb:	e8 50 13 00 00       	call   f0105050 <__udivdi3>$/;"	l
f0103d00	obj/kern/kernel.asm	/^f0103d00:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103d03	obj/kern/kernel.asm	/^f0103d03:	0f be 80 3a 67 10 f0 	movsbl -0xfef98c6(%eax),%eax$/;"	l
f0103d0a	obj/kern/kernel.asm	/^f0103d0a:	50                   	push   %eax$/;"	l
f0103d0b	obj/kern/kernel.asm	/^f0103d0b:	ff d3                	call   *%ebx$/;"	l
f0103d0d	obj/kern/kernel.asm	/^f0103d0d:	57                   	push   %edi$/;"	l
f0103d0e	obj/kern/kernel.asm	/^f0103d0e:	56                   	push   %esi$/;"	l
f0103d0f	obj/kern/kernel.asm	/^f0103d0f:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0103d12	obj/kern/kernel.asm	/^f0103d12:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0103d15	obj/kern/kernel.asm	/^f0103d15:	e8 56 14 00 00       	call   f0105170 <__umoddi3>$/;"	l
f0103d1a	obj/kern/kernel.asm	/^f0103d1a:	89 d1                	mov    %edx,%ecx$/;"	l
f0103d1c	obj/kern/kernel.asm	/^f0103d1c:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0103d1f	obj/kern/kernel.asm	/^f0103d1f:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0103d22	obj/kern/kernel.asm	/^f0103d22:	83 c4 20             	add    $0x20,%esp$/;"	l
f0103d25	obj/kern/kernel.asm	/^f0103d25:	89 ca                	mov    %ecx,%edx$/;"	l
f0103d27	obj/kern/kernel.asm	/^f0103d27:	09 c2                	or     %eax,%edx$/;"	l
f0103d29	obj/kern/kernel.asm	/^f0103d29:	75 ae                	jne    f0103cd9 <printnum+0x12d>$/;"	l
f0103d2b	obj/kern/kernel.asm	/^f0103d2b:	89 de                	mov    %ebx,%esi$/;"	l
f0103d2d	obj/kern/kernel.asm	/^f0103d2d:	8b 7d 14             	mov    0x14(%ebp),%edi$/;"	l
f0103d30	obj/kern/kernel.asm	/^f0103d30:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f0103d33	obj/kern/kernel.asm	/^f0103d33:	eb 0b                	jmp    f0103d40 <printnum+0x194>$/;"	l
f0103d35	obj/kern/kernel.asm	/^f0103d35:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103d38	obj/kern/kernel.asm	/^f0103d38:	53                   	push   %ebx$/;"	l
f0103d39	obj/kern/kernel.asm	/^f0103d39:	6a 20                	push   $0x20$/;"	l
f0103d3b	obj/kern/kernel.asm	/^f0103d3b:	ff d6                	call   *%esi$/;"	l
f0103d3d	obj/kern/kernel.asm	/^f0103d3d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103d40	obj/kern/kernel.asm	/^f0103d40:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0103d43	obj/kern/kernel.asm	/^f0103d43:	83 ff ff             	cmp    $0xffffffff,%edi$/;"	l
f0103d46	obj/kern/kernel.asm	/^f0103d46:	75 ed                	jne    f0103d35 <printnum+0x189>$/;"	l
f0103d48	obj/kern/kernel.asm	/^f0103d48:	eb 3d                	jmp    f0103d87 <printnum+0x1db>$/;"	l
f0103d4a	obj/kern/kernel.asm	/^f0103d4a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103d4d	obj/kern/kernel.asm	/^f0103d4d:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0103d50	obj/kern/kernel.asm	/^f0103d50:	53                   	push   %ebx$/;"	l
f0103d51	obj/kern/kernel.asm	/^f0103d51:	ff d6                	call   *%esi$/;"	l
f0103d53	obj/kern/kernel.asm	/^f0103d53:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103d56	obj/kern/kernel.asm	/^f0103d56:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0103d59	obj/kern/kernel.asm	/^f0103d59:	85 ff                	test   %edi,%edi$/;"	l
f0103d5b	obj/kern/kernel.asm	/^f0103d5b:	7f ed                	jg     f0103d4a <printnum+0x19e>$/;"	l
f0103d5d	obj/kern/kernel.asm	/^f0103d5d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103d60	obj/kern/kernel.asm	/^f0103d60:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0103d63	obj/kern/kernel.asm	/^f0103d63:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103d66	obj/kern/kernel.asm	/^f0103d66:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0103d69	obj/kern/kernel.asm	/^f0103d69:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0103d6c	obj/kern/kernel.asm	/^f0103d6c:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0103d6f	obj/kern/kernel.asm	/^f0103d6f:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0103d72	obj/kern/kernel.asm	/^f0103d72:	e8 f9 13 00 00       	call   f0105170 <__umoddi3>$/;"	l
f0103d77	obj/kern/kernel.asm	/^f0103d77:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103d7a	obj/kern/kernel.asm	/^f0103d7a:	0f be 80 3a 67 10 f0 	movsbl -0xfef98c6(%eax),%eax$/;"	l
f0103d81	obj/kern/kernel.asm	/^f0103d81:	50                   	push   %eax$/;"	l
f0103d82	obj/kern/kernel.asm	/^f0103d82:	ff d6                	call   *%esi$/;"	l
f0103d84	obj/kern/kernel.asm	/^f0103d84:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103d87	obj/kern/kernel.asm	/^f0103d87:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103d8a	obj/kern/kernel.asm	/^f0103d8a:	5b                   	pop    %ebx$/;"	l
f0103d8b	obj/kern/kernel.asm	/^f0103d8b:	5e                   	pop    %esi$/;"	l
f0103d8c	obj/kern/kernel.asm	/^f0103d8c:	5f                   	pop    %edi$/;"	l
f0103d8d	obj/kern/kernel.asm	/^f0103d8d:	5d                   	pop    %ebp$/;"	l
f0103d8e	obj/kern/kernel.asm	/^f0103d8e:	c3                   	ret    $/;"	l
f0103d8f	obj/kern/kernel.asm	/^f0103d8f <sprintputch>:$/;"	l
f0103d8f	obj/kern/kernel.asm	/^f0103d8f:	55                   	push   %ebp$/;"	l
f0103d90	obj/kern/kernel.asm	/^f0103d90:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d92	obj/kern/kernel.asm	/^f0103d92:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103d95	obj/kern/kernel.asm	/^f0103d95:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0103d99	obj/kern/kernel.asm	/^f0103d99:	8b 10                	mov    (%eax),%edx$/;"	l
f0103d9b	obj/kern/kernel.asm	/^f0103d9b:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0103d9e	obj/kern/kernel.asm	/^f0103d9e:	73 0a                	jae    f0103daa <sprintputch+0x1b>$/;"	l
f0103da0	obj/kern/kernel.asm	/^f0103da0:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f0103da3	obj/kern/kernel.asm	/^f0103da3:	89 08                	mov    %ecx,(%eax)$/;"	l
f0103da5	obj/kern/kernel.asm	/^f0103da5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103da8	obj/kern/kernel.asm	/^f0103da8:	88 02                	mov    %al,(%edx)$/;"	l
f0103daa	obj/kern/kernel.asm	/^f0103daa:	5d                   	pop    %ebp$/;"	l
f0103dab	obj/kern/kernel.asm	/^f0103dab:	c3                   	ret    $/;"	l
f0103dac	obj/kern/kernel.asm	/^f0103dac <printfmt>:$/;"	l
f0103dac	obj/kern/kernel.asm	/^f0103dac:	55                   	push   %ebp$/;"	l
f0103dad	obj/kern/kernel.asm	/^f0103dad:	89 e5                	mov    %esp,%ebp$/;"	l
f0103daf	obj/kern/kernel.asm	/^f0103daf:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103db2	obj/kern/kernel.asm	/^f0103db2:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0103db5	obj/kern/kernel.asm	/^f0103db5:	50                   	push   %eax$/;"	l
f0103db6	obj/kern/kernel.asm	/^f0103db6:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0103db9	obj/kern/kernel.asm	/^f0103db9:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0103dbc	obj/kern/kernel.asm	/^f0103dbc:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103dbf	obj/kern/kernel.asm	/^f0103dbf:	e8 05 00 00 00       	call   f0103dc9 <vprintfmt>$/;"	l
f0103dc4	obj/kern/kernel.asm	/^f0103dc4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103dc7	obj/kern/kernel.asm	/^f0103dc7:	c9                   	leave  $/;"	l
f0103dc8	obj/kern/kernel.asm	/^f0103dc8:	c3                   	ret    $/;"	l
f0103dc9	obj/kern/kernel.asm	/^f0103dc9 <vprintfmt>:$/;"	l
f0103dc9	obj/kern/kernel.asm	/^f0103dc9:	55                   	push   %ebp$/;"	l
f0103dca	obj/kern/kernel.asm	/^f0103dca:	89 e5                	mov    %esp,%ebp$/;"	l
f0103dcc	obj/kern/kernel.asm	/^f0103dcc:	57                   	push   %edi$/;"	l
f0103dcd	obj/kern/kernel.asm	/^f0103dcd:	56                   	push   %esi$/;"	l
f0103dce	obj/kern/kernel.asm	/^f0103dce:	53                   	push   %ebx$/;"	l
f0103dcf	obj/kern/kernel.asm	/^f0103dcf:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0103dd2	obj/kern/kernel.asm	/^f0103dd2:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0103dd5	obj/kern/kernel.asm	/^f0103dd5:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0103dd8	obj/kern/kernel.asm	/^f0103dd8:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0103ddb	obj/kern/kernel.asm	/^f0103ddb:	e9 b3 04 00 00       	jmp    f0104293 <vprintfmt+0x4ca>$/;"	l
f0103de0	obj/kern/kernel.asm	/^f0103de0:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)$/;"	l
f0103de7	obj/kern/kernel.asm	/^f0103de7:	c6 45 d4 20          	movb   $0x20,-0x2c(%ebp)$/;"	l
f0103deb	obj/kern/kernel.asm	/^f0103deb:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)$/;"	l
f0103df2	obj/kern/kernel.asm	/^f0103df2:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
f0103df9	obj/kern/kernel.asm	/^f0103df9:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)$/;"	l
f0103e00	obj/kern/kernel.asm	/^f0103e00:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%ebp)$/;"	l
f0103e07	obj/kern/kernel.asm	/^f0103e07:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0103e0c	obj/kern/kernel.asm	/^f0103e0c:	8d 47 01             	lea    0x1(%edi),%eax$/;"	l
f0103e0f	obj/kern/kernel.asm	/^f0103e0f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103e12	obj/kern/kernel.asm	/^f0103e12:	0f b6 17             	movzbl (%edi),%edx$/;"	l
f0103e15	obj/kern/kernel.asm	/^f0103e15:	8d 42 dd             	lea    -0x23(%edx),%eax$/;"	l
f0103e18	obj/kern/kernel.asm	/^f0103e18:	3c 55                	cmp    $0x55,%al$/;"	l
f0103e1a	obj/kern/kernel.asm	/^f0103e1a:	0f 87 21 05 00 00    	ja     f0104341 <vprintfmt+0x578>$/;"	l
f0103e20	obj/kern/kernel.asm	/^f0103e20:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0103e23	obj/kern/kernel.asm	/^f0103e23:	ff 24 85 80 68 10 f0 	jmp    *-0xfef9780(,%eax,4)$/;"	l
f0103e2a	obj/kern/kernel.asm	/^f0103e2a:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0103e2d	obj/kern/kernel.asm	/^f0103e2d:	c6 45 d4 2d          	movb   $0x2d,-0x2c(%ebp)$/;"	l
f0103e31	obj/kern/kernel.asm	/^f0103e31:	eb d9                	jmp    f0103e0c <vprintfmt+0x43>$/;"	l
f0103e33	obj/kern/kernel.asm	/^f0103e33:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0103e36	obj/kern/kernel.asm	/^f0103e36:	c6 45 d4 30          	movb   $0x30,-0x2c(%ebp)$/;"	l
f0103e3a	obj/kern/kernel.asm	/^f0103e3a:	eb d0                	jmp    f0103e0c <vprintfmt+0x43>$/;"	l
f0103e3c	obj/kern/kernel.asm	/^f0103e3c:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0103e3f	obj/kern/kernel.asm	/^f0103e3f:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0103e42	obj/kern/kernel.asm	/^f0103e42:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103e47	obj/kern/kernel.asm	/^f0103e47:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0103e4a	obj/kern/kernel.asm	/^f0103e4a:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0103e4d	obj/kern/kernel.asm	/^f0103e4d:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eax$/;"	l
f0103e51	obj/kern/kernel.asm	/^f0103e51:	0f be 17             	movsbl (%edi),%edx$/;"	l
f0103e54	obj/kern/kernel.asm	/^f0103e54:	8d 72 d0             	lea    -0x30(%edx),%esi$/;"	l
f0103e57	obj/kern/kernel.asm	/^f0103e57:	83 fe 09             	cmp    $0x9,%esi$/;"	l
f0103e5a	obj/kern/kernel.asm	/^f0103e5a:	77 5f                	ja     f0103ebb <vprintfmt+0xf2>$/;"	l
f0103e5c	obj/kern/kernel.asm	/^f0103e5c:	83 c7 01             	add    $0x1,%edi$/;"	l
f0103e5f	obj/kern/kernel.asm	/^f0103e5f:	eb e9                	jmp    f0103e4a <vprintfmt+0x81>$/;"	l
f0103e61	obj/kern/kernel.asm	/^f0103e61:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0103e64	obj/kern/kernel.asm	/^f0103e64:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%ebp)$/;"	l
f0103e6b	obj/kern/kernel.asm	/^f0103e6b:	eb 9f                	jmp    f0103e0c <vprintfmt+0x43>$/;"	l
f0103e6d	obj/kern/kernel.asm	/^f0103e6d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0103e70	obj/kern/kernel.asm	/^f0103e70:	8b 00                	mov    (%eax),%eax$/;"	l
f0103e72	obj/kern/kernel.asm	/^f0103e72:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0103e75	obj/kern/kernel.asm	/^f0103e75:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0103e78	obj/kern/kernel.asm	/^f0103e78:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0103e7b	obj/kern/kernel.asm	/^f0103e7b:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0103e7e	obj/kern/kernel.asm	/^f0103e7e:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0103e81	obj/kern/kernel.asm	/^f0103e81:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0103e85	obj/kern/kernel.asm	/^f0103e85:	79 85                	jns    f0103e0c <vprintfmt+0x43>$/;"	l
f0103e87	obj/kern/kernel.asm	/^f0103e87:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0103e8a	obj/kern/kernel.asm	/^f0103e8a:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0103e8d	obj/kern/kernel.asm	/^f0103e8d:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
f0103e94	obj/kern/kernel.asm	/^f0103e94:	e9 73 ff ff ff       	jmp    f0103e0c <vprintfmt+0x43>$/;"	l
f0103e99	obj/kern/kernel.asm	/^f0103e99:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103e9c	obj/kern/kernel.asm	/^f0103e9c:	85 c0                	test   %eax,%eax$/;"	l
f0103e9e	obj/kern/kernel.asm	/^f0103e9e:	0f 48 c1             	cmovs  %ecx,%eax$/;"	l
f0103ea1	obj/kern/kernel.asm	/^f0103ea1:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0103ea4	obj/kern/kernel.asm	/^f0103ea4:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0103ea7	obj/kern/kernel.asm	/^f0103ea7:	e9 60 ff ff ff       	jmp    f0103e0c <vprintfmt+0x43>$/;"	l
f0103eac	obj/kern/kernel.asm	/^f0103eac:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0103eaf	obj/kern/kernel.asm	/^f0103eaf:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)$/;"	l
f0103eb6	obj/kern/kernel.asm	/^f0103eb6:	e9 51 ff ff ff       	jmp    f0103e0c <vprintfmt+0x43>$/;"	l
f0103ebb	obj/kern/kernel.asm	/^f0103ebb:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0103ebe	obj/kern/kernel.asm	/^f0103ebe:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0103ec1	obj/kern/kernel.asm	/^f0103ec1:	eb be                	jmp    f0103e81 <vprintfmt+0xb8>$/;"	l
f0103ec3	obj/kern/kernel.asm	/^f0103ec3:	83 45 c8 01          	addl   $0x1,-0x38(%ebp)$/;"	l
f0103ec7	obj/kern/kernel.asm	/^f0103ec7:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0103eca	obj/kern/kernel.asm	/^f0103eca:	e9 3d ff ff ff       	jmp    f0103e0c <vprintfmt+0x43>$/;"	l
f0103ecf	obj/kern/kernel.asm	/^f0103ecf:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0103ed2	obj/kern/kernel.asm	/^f0103ed2:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
f0103ed5	obj/kern/kernel.asm	/^f0103ed5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103ed8	obj/kern/kernel.asm	/^f0103ed8:	53                   	push   %ebx$/;"	l
f0103ed9	obj/kern/kernel.asm	/^f0103ed9:	ff 30                	pushl  (%eax)$/;"	l
f0103edb	obj/kern/kernel.asm	/^f0103edb:	ff d6                	call   *%esi$/;"	l
f0103edd	obj/kern/kernel.asm	/^f0103edd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ee0	obj/kern/kernel.asm	/^f0103ee0:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f0103ee3	obj/kern/kernel.asm	/^f0103ee3:	e9 a8 03 00 00       	jmp    f0104290 <vprintfmt+0x4c7>$/;"	l
f0103ee8	obj/kern/kernel.asm	/^f0103ee8:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0103eeb	obj/kern/kernel.asm	/^f0103eeb:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
f0103eee	obj/kern/kernel.asm	/^f0103eee:	8b 00                	mov    (%eax),%eax$/;"	l
f0103ef0	obj/kern/kernel.asm	/^f0103ef0:	99                   	cltd   $/;"	l
f0103ef1	obj/kern/kernel.asm	/^f0103ef1:	31 d0                	xor    %edx,%eax$/;"	l
f0103ef3	obj/kern/kernel.asm	/^f0103ef3:	29 d0                	sub    %edx,%eax$/;"	l
f0103ef5	obj/kern/kernel.asm	/^f0103ef5:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0103ef8	obj/kern/kernel.asm	/^f0103ef8:	7f 23                	jg     f0103f1d <vprintfmt+0x154>$/;"	l
f0103efa	obj/kern/kernel.asm	/^f0103efa:	8b 14 85 e0 69 10 f0 	mov    -0xfef9620(,%eax,4),%edx$/;"	l
f0103f01	obj/kern/kernel.asm	/^f0103f01:	85 d2                	test   %edx,%edx$/;"	l
f0103f03	obj/kern/kernel.asm	/^f0103f03:	74 18                	je     f0103f1d <vprintfmt+0x154>$/;"	l
f0103f05	obj/kern/kernel.asm	/^f0103f05:	52                   	push   %edx$/;"	l
f0103f06	obj/kern/kernel.asm	/^f0103f06:	68 c1 5e 10 f0       	push   $0xf0105ec1$/;"	l
f0103f0b	obj/kern/kernel.asm	/^f0103f0b:	53                   	push   %ebx$/;"	l
f0103f0c	obj/kern/kernel.asm	/^f0103f0c:	56                   	push   %esi$/;"	l
f0103f0d	obj/kern/kernel.asm	/^f0103f0d:	e8 9a fe ff ff       	call   f0103dac <printfmt>$/;"	l
f0103f12	obj/kern/kernel.asm	/^f0103f12:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f15	obj/kern/kernel.asm	/^f0103f15:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f0103f18	obj/kern/kernel.asm	/^f0103f18:	e9 73 03 00 00       	jmp    f0104290 <vprintfmt+0x4c7>$/;"	l
f0103f1d	obj/kern/kernel.asm	/^f0103f1d:	50                   	push   %eax$/;"	l
f0103f1e	obj/kern/kernel.asm	/^f0103f1e:	68 52 67 10 f0       	push   $0xf0106752$/;"	l
f0103f23	obj/kern/kernel.asm	/^f0103f23:	53                   	push   %ebx$/;"	l
f0103f24	obj/kern/kernel.asm	/^f0103f24:	56                   	push   %esi$/;"	l
f0103f25	obj/kern/kernel.asm	/^f0103f25:	e8 82 fe ff ff       	call   f0103dac <printfmt>$/;"	l
f0103f2a	obj/kern/kernel.asm	/^f0103f2a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f2d	obj/kern/kernel.asm	/^f0103f2d:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f0103f30	obj/kern/kernel.asm	/^f0103f30:	e9 5b 03 00 00       	jmp    f0104290 <vprintfmt+0x4c7>$/;"	l
f0103f35	obj/kern/kernel.asm	/^f0103f35:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0103f38	obj/kern/kernel.asm	/^f0103f38:	83 c0 04             	add    $0x4,%eax$/;"	l
f0103f3b	obj/kern/kernel.asm	/^f0103f3b:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0103f3e	obj/kern/kernel.asm	/^f0103f3e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0103f41	obj/kern/kernel.asm	/^f0103f41:	8b 38                	mov    (%eax),%edi$/;"	l
f0103f43	obj/kern/kernel.asm	/^f0103f43:	85 ff                	test   %edi,%edi$/;"	l
f0103f45	obj/kern/kernel.asm	/^f0103f45:	b8 4b 67 10 f0       	mov    $0xf010674b,%eax$/;"	l
f0103f4a	obj/kern/kernel.asm	/^f0103f4a:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f0103f4d	obj/kern/kernel.asm	/^f0103f4d:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0103f51	obj/kern/kernel.asm	/^f0103f51:	0f 8e bd 00 00 00    	jle    f0104014 <vprintfmt+0x24b>$/;"	l
f0103f57	obj/kern/kernel.asm	/^f0103f57:	80 7d d4 2d          	cmpb   $0x2d,-0x2c(%ebp)$/;"	l
f0103f5b	obj/kern/kernel.asm	/^f0103f5b:	75 0e                	jne    f0103f6b <vprintfmt+0x1a2>$/;"	l
f0103f5d	obj/kern/kernel.asm	/^f0103f5d:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0103f60	obj/kern/kernel.asm	/^f0103f60:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f0103f63	obj/kern/kernel.asm	/^f0103f63:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f0103f66	obj/kern/kernel.asm	/^f0103f66:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0103f69	obj/kern/kernel.asm	/^f0103f69:	eb 6d                	jmp    f0103fd8 <vprintfmt+0x20f>$/;"	l
f0103f6b	obj/kern/kernel.asm	/^f0103f6b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103f6e	obj/kern/kernel.asm	/^f0103f6e:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0103f71	obj/kern/kernel.asm	/^f0103f71:	57                   	push   %edi$/;"	l
f0103f72	obj/kern/kernel.asm	/^f0103f72:	e8 54 05 00 00       	call   f01044cb <strnlen>$/;"	l
f0103f77	obj/kern/kernel.asm	/^f0103f77:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0103f7a	obj/kern/kernel.asm	/^f0103f7a:	29 c1                	sub    %eax,%ecx$/;"	l
f0103f7c	obj/kern/kernel.asm	/^f0103f7c:	89 4d c4             	mov    %ecx,-0x3c(%ebp)$/;"	l
f0103f7f	obj/kern/kernel.asm	/^f0103f7f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f82	obj/kern/kernel.asm	/^f0103f82:	0f be 45 d4          	movsbl -0x2c(%ebp),%eax$/;"	l
f0103f86	obj/kern/kernel.asm	/^f0103f86:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0103f89	obj/kern/kernel.asm	/^f0103f89:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0103f8c	obj/kern/kernel.asm	/^f0103f8c:	89 cf                	mov    %ecx,%edi$/;"	l
f0103f8e	obj/kern/kernel.asm	/^f0103f8e:	eb 0f                	jmp    f0103f9f <vprintfmt+0x1d6>$/;"	l
f0103f90	obj/kern/kernel.asm	/^f0103f90:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103f93	obj/kern/kernel.asm	/^f0103f93:	53                   	push   %ebx$/;"	l
f0103f94	obj/kern/kernel.asm	/^f0103f94:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0103f97	obj/kern/kernel.asm	/^f0103f97:	ff d6                	call   *%esi$/;"	l
f0103f99	obj/kern/kernel.asm	/^f0103f99:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0103f9c	obj/kern/kernel.asm	/^f0103f9c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f9f	obj/kern/kernel.asm	/^f0103f9f:	85 ff                	test   %edi,%edi$/;"	l
f0103fa1	obj/kern/kernel.asm	/^f0103fa1:	7f ed                	jg     f0103f90 <vprintfmt+0x1c7>$/;"	l
f0103fa3	obj/kern/kernel.asm	/^f0103fa3:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0103fa6	obj/kern/kernel.asm	/^f0103fa6:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f0103fa9	obj/kern/kernel.asm	/^f0103fa9:	85 c9                	test   %ecx,%ecx$/;"	l
f0103fab	obj/kern/kernel.asm	/^f0103fab:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103fb0	obj/kern/kernel.asm	/^f0103fb0:	0f 49 c1             	cmovns %ecx,%eax$/;"	l
f0103fb3	obj/kern/kernel.asm	/^f0103fb3:	29 c1                	sub    %eax,%ecx$/;"	l
f0103fb5	obj/kern/kernel.asm	/^f0103fb5:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0103fb8	obj/kern/kernel.asm	/^f0103fb8:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f0103fbb	obj/kern/kernel.asm	/^f0103fbb:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f0103fbe	obj/kern/kernel.asm	/^f0103fbe:	89 cb                	mov    %ecx,%ebx$/;"	l
f0103fc0	obj/kern/kernel.asm	/^f0103fc0:	eb 16                	jmp    f0103fd8 <vprintfmt+0x20f>$/;"	l
f0103fc2	obj/kern/kernel.asm	/^f0103fc2:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
f0103fc6	obj/kern/kernel.asm	/^f0103fc6:	75 31                	jne    f0103ff9 <vprintfmt+0x230>$/;"	l
f0103fc8	obj/kern/kernel.asm	/^f0103fc8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103fcb	obj/kern/kernel.asm	/^f0103fcb:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0103fce	obj/kern/kernel.asm	/^f0103fce:	50                   	push   %eax$/;"	l
f0103fcf	obj/kern/kernel.asm	/^f0103fcf:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0103fd2	obj/kern/kernel.asm	/^f0103fd2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103fd5	obj/kern/kernel.asm	/^f0103fd5:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0103fd8	obj/kern/kernel.asm	/^f0103fd8:	83 c7 01             	add    $0x1,%edi$/;"	l
f0103fdb	obj/kern/kernel.asm	/^f0103fdb:	0f b6 57 ff          	movzbl -0x1(%edi),%edx$/;"	l
f0103fdf	obj/kern/kernel.asm	/^f0103fdf:	0f be c2             	movsbl %dl,%eax$/;"	l
f0103fe2	obj/kern/kernel.asm	/^f0103fe2:	85 c0                	test   %eax,%eax$/;"	l
f0103fe4	obj/kern/kernel.asm	/^f0103fe4:	74 59                	je     f010403f <vprintfmt+0x276>$/;"	l
f0103fe6	obj/kern/kernel.asm	/^f0103fe6:	85 f6                	test   %esi,%esi$/;"	l
f0103fe8	obj/kern/kernel.asm	/^f0103fe8:	78 d8                	js     f0103fc2 <vprintfmt+0x1f9>$/;"	l
f0103fea	obj/kern/kernel.asm	/^f0103fea:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0103fed	obj/kern/kernel.asm	/^f0103fed:	79 d3                	jns    f0103fc2 <vprintfmt+0x1f9>$/;"	l
f0103fef	obj/kern/kernel.asm	/^f0103fef:	89 df                	mov    %ebx,%edi$/;"	l
f0103ff1	obj/kern/kernel.asm	/^f0103ff1:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0103ff4	obj/kern/kernel.asm	/^f0103ff4:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0103ff7	obj/kern/kernel.asm	/^f0103ff7:	eb 37                	jmp    f0104030 <vprintfmt+0x267>$/;"	l
f0103ff9	obj/kern/kernel.asm	/^f0103ff9:	0f be d2             	movsbl %dl,%edx$/;"	l
f0103ffc	obj/kern/kernel.asm	/^f0103ffc:	83 ea 20             	sub    $0x20,%edx$/;"	l
f0103fff	obj/kern/kernel.asm	/^f0103fff:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f0104002	obj/kern/kernel.asm	/^f0104002:	76 c4                	jbe    f0103fc8 <vprintfmt+0x1ff>$/;"	l
f0104004	obj/kern/kernel.asm	/^f0104004:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104007	obj/kern/kernel.asm	/^f0104007:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010400a	obj/kern/kernel.asm	/^f010400a:	6a 3f                	push   $0x3f$/;"	l
f010400c	obj/kern/kernel.asm	/^f010400c:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010400f	obj/kern/kernel.asm	/^f010400f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104012	obj/kern/kernel.asm	/^f0104012:	eb c1                	jmp    f0103fd5 <vprintfmt+0x20c>$/;"	l
f0104014	obj/kern/kernel.asm	/^f0104014:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0104017	obj/kern/kernel.asm	/^f0104017:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f010401a	obj/kern/kernel.asm	/^f010401a:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f010401d	obj/kern/kernel.asm	/^f010401d:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0104020	obj/kern/kernel.asm	/^f0104020:	eb b6                	jmp    f0103fd8 <vprintfmt+0x20f>$/;"	l
f0104022	obj/kern/kernel.asm	/^f0104022:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104025	obj/kern/kernel.asm	/^f0104025:	53                   	push   %ebx$/;"	l
f0104026	obj/kern/kernel.asm	/^f0104026:	6a 20                	push   $0x20$/;"	l
f0104028	obj/kern/kernel.asm	/^f0104028:	ff d6                	call   *%esi$/;"	l
f010402a	obj/kern/kernel.asm	/^f010402a:	83 ef 01             	sub    $0x1,%edi$/;"	l
f010402d	obj/kern/kernel.asm	/^f010402d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104030	obj/kern/kernel.asm	/^f0104030:	85 ff                	test   %edi,%edi$/;"	l
f0104032	obj/kern/kernel.asm	/^f0104032:	7f ee                	jg     f0104022 <vprintfmt+0x259>$/;"	l
f0104034	obj/kern/kernel.asm	/^f0104034:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f0104037	obj/kern/kernel.asm	/^f0104037:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010403a	obj/kern/kernel.asm	/^f010403a:	e9 51 02 00 00       	jmp    f0104290 <vprintfmt+0x4c7>$/;"	l
f010403f	obj/kern/kernel.asm	/^f010403f:	89 df                	mov    %ebx,%edi$/;"	l
f0104041	obj/kern/kernel.asm	/^f0104041:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104044	obj/kern/kernel.asm	/^f0104044:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104047	obj/kern/kernel.asm	/^f0104047:	eb e7                	jmp    f0104030 <vprintfmt+0x267>$/;"	l
f0104049	obj/kern/kernel.asm	/^f0104049:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010404c	obj/kern/kernel.asm	/^f010404c:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
f010404f	obj/kern/kernel.asm	/^f010404f:	8b 10                	mov    (%eax),%edx$/;"	l
f0104051	obj/kern/kernel.asm	/^f0104051:	85 d2                	test   %edx,%edx$/;"	l
f0104053	obj/kern/kernel.asm	/^f0104053:	74 11                	je     f0104066 <vprintfmt+0x29d>$/;"	l
f0104055	obj/kern/kernel.asm	/^f0104055:	8b 03                	mov    (%ebx),%eax$/;"	l
f0104057	obj/kern/kernel.asm	/^f0104057:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f010405a	obj/kern/kernel.asm	/^f010405a:	7f 22                	jg     f010407e <vprintfmt+0x2b5>$/;"	l
f010405c	obj/kern/kernel.asm	/^f010405c:	88 02                	mov    %al,(%edx)$/;"	l
f010405e	obj/kern/kernel.asm	/^f010405e:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f0104061	obj/kern/kernel.asm	/^f0104061:	e9 2a 02 00 00       	jmp    f0104290 <vprintfmt+0x4c7>$/;"	l
f0104066	obj/kern/kernel.asm	/^f0104066:	57                   	push   %edi$/;"	l
f0104067	obj/kern/kernel.asm	/^f0104067:	68 f0 67 10 f0       	push   $0xf01067f0$/;"	l
f010406c	obj/kern/kernel.asm	/^f010406c:	53                   	push   %ebx$/;"	l
f010406d	obj/kern/kernel.asm	/^f010406d:	56                   	push   %esi$/;"	l
f010406e	obj/kern/kernel.asm	/^f010406e:	e8 56 fd ff ff       	call   f0103dc9 <vprintfmt>$/;"	l
f0104073	obj/kern/kernel.asm	/^f0104073:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104076	obj/kern/kernel.asm	/^f0104076:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f0104079	obj/kern/kernel.asm	/^f0104079:	e9 12 02 00 00       	jmp    f0104290 <vprintfmt+0x4c7>$/;"	l
f010407e	obj/kern/kernel.asm	/^f010407e:	89 c1                	mov    %eax,%ecx$/;"	l
f0104080	obj/kern/kernel.asm	/^f0104080:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f0104083	obj/kern/kernel.asm	/^f0104083:	c1 e9 18             	shr    $0x18,%ecx$/;"	l
f0104086	obj/kern/kernel.asm	/^f0104086:	01 c8                	add    %ecx,%eax$/;"	l
f0104088	obj/kern/kernel.asm	/^f0104088:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010408b	obj/kern/kernel.asm	/^f010408b:	29 c8                	sub    %ecx,%eax$/;"	l
f010408d	obj/kern/kernel.asm	/^f010408d:	88 02                	mov    %al,(%edx)$/;"	l
f010408f	obj/kern/kernel.asm	/^f010408f:	57                   	push   %edi$/;"	l
f0104090	obj/kern/kernel.asm	/^f0104090:	68 28 68 10 f0       	push   $0xf0106828$/;"	l
f0104095	obj/kern/kernel.asm	/^f0104095:	53                   	push   %ebx$/;"	l
f0104096	obj/kern/kernel.asm	/^f0104096:	56                   	push   %esi$/;"	l
f0104097	obj/kern/kernel.asm	/^f0104097:	e8 2d fd ff ff       	call   f0103dc9 <vprintfmt>$/;"	l
f010409c	obj/kern/kernel.asm	/^f010409c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010409f	obj/kern/kernel.asm	/^f010409f:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f01040a2	obj/kern/kernel.asm	/^f01040a2:	e9 e9 01 00 00       	jmp    f0104290 <vprintfmt+0x4c7>$/;"	l
f01040a7	obj/kern/kernel.asm	/^f01040a7:	83 7d c8 01          	cmpl   $0x1,-0x38(%ebp)$/;"	l
f01040ab	obj/kern/kernel.asm	/^f01040ab:	7e 51                	jle    f01040fe <vprintfmt+0x335>$/;"	l
f01040ad	obj/kern/kernel.asm	/^f01040ad:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01040b0	obj/kern/kernel.asm	/^f01040b0:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f01040b3	obj/kern/kernel.asm	/^f01040b3:	8b 00                	mov    (%eax),%eax$/;"	l
f01040b5	obj/kern/kernel.asm	/^f01040b5:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f01040b8	obj/kern/kernel.asm	/^f01040b8:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
f01040bb	obj/kern/kernel.asm	/^f01040bb:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01040be	obj/kern/kernel.asm	/^f01040be:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f01040c1	obj/kern/kernel.asm	/^f01040c1:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01040c4	obj/kern/kernel.asm	/^f01040c4:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f01040c7	obj/kern/kernel.asm	/^f01040c7:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f01040ca	obj/kern/kernel.asm	/^f01040ca:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01040cd	obj/kern/kernel.asm	/^f01040cd:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f01040d0	obj/kern/kernel.asm	/^f01040d0:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
f01040d4	obj/kern/kernel.asm	/^f01040d4:	79 64                	jns    f010413a <vprintfmt+0x371>$/;"	l
f01040d6	obj/kern/kernel.asm	/^f01040d6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01040d9	obj/kern/kernel.asm	/^f01040d9:	53                   	push   %ebx$/;"	l
f01040da	obj/kern/kernel.asm	/^f01040da:	6a 2d                	push   $0x2d$/;"	l
f01040dc	obj/kern/kernel.asm	/^f01040dc:	ff d6                	call   *%esi$/;"	l
f01040de	obj/kern/kernel.asm	/^f01040de:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f01040e1	obj/kern/kernel.asm	/^f01040e1:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f01040e4	obj/kern/kernel.asm	/^f01040e4:	f7 d8                	neg    %eax$/;"	l
f01040e6	obj/kern/kernel.asm	/^f01040e6:	83 d2 00             	adc    $0x0,%edx$/;"	l
f01040e9	obj/kern/kernel.asm	/^f01040e9:	f7 da                	neg    %edx$/;"	l
f01040eb	obj/kern/kernel.asm	/^f01040eb:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01040ee	obj/kern/kernel.asm	/^f01040ee:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f01040f1	obj/kern/kernel.asm	/^f01040f1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01040f4	obj/kern/kernel.asm	/^f01040f4:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01040f9	obj/kern/kernel.asm	/^f01040f9:	e9 74 01 00 00       	jmp    f0104272 <vprintfmt+0x4a9>$/;"	l
f01040fe	obj/kern/kernel.asm	/^f01040fe:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)$/;"	l
f0104102	obj/kern/kernel.asm	/^f0104102:	75 1b                	jne    f010411f <vprintfmt+0x356>$/;"	l
f0104104	obj/kern/kernel.asm	/^f0104104:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104107	obj/kern/kernel.asm	/^f0104107:	8b 00                	mov    (%eax),%eax$/;"	l
f0104109	obj/kern/kernel.asm	/^f0104109:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f010410c	obj/kern/kernel.asm	/^f010410c:	89 c1                	mov    %eax,%ecx$/;"	l
f010410e	obj/kern/kernel.asm	/^f010410e:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f0104111	obj/kern/kernel.asm	/^f0104111:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
f0104114	obj/kern/kernel.asm	/^f0104114:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104117	obj/kern/kernel.asm	/^f0104117:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010411a	obj/kern/kernel.asm	/^f010411a:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010411d	obj/kern/kernel.asm	/^f010411d:	eb a5                	jmp    f01040c4 <vprintfmt+0x2fb>$/;"	l
f010411f	obj/kern/kernel.asm	/^f010411f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104122	obj/kern/kernel.asm	/^f0104122:	8b 00                	mov    (%eax),%eax$/;"	l
f0104124	obj/kern/kernel.asm	/^f0104124:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0104127	obj/kern/kernel.asm	/^f0104127:	89 c1                	mov    %eax,%ecx$/;"	l
f0104129	obj/kern/kernel.asm	/^f0104129:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f010412c	obj/kern/kernel.asm	/^f010412c:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
f010412f	obj/kern/kernel.asm	/^f010412f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104132	obj/kern/kernel.asm	/^f0104132:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0104135	obj/kern/kernel.asm	/^f0104135:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0104138	obj/kern/kernel.asm	/^f0104138:	eb 8a                	jmp    f01040c4 <vprintfmt+0x2fb>$/;"	l
f010413a	obj/kern/kernel.asm	/^f010413a:	83 7d c4 00          	cmpl   $0x0,-0x3c(%ebp)$/;"	l
f010413e	obj/kern/kernel.asm	/^f010413e:	0f 84 e3 01 00 00    	je     f0104327 <vprintfmt+0x55e>$/;"	l
f0104144	obj/kern/kernel.asm	/^f0104144:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104147	obj/kern/kernel.asm	/^f0104147:	53                   	push   %ebx$/;"	l
f0104148	obj/kern/kernel.asm	/^f0104148:	6a 2b                	push   $0x2b$/;"	l
f010414a	obj/kern/kernel.asm	/^f010414a:	ff d6                	call   *%esi$/;"	l
f010414c	obj/kern/kernel.asm	/^f010414c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010414f	obj/kern/kernel.asm	/^f010414f:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0104154	obj/kern/kernel.asm	/^f0104154:	e9 19 01 00 00       	jmp    f0104272 <vprintfmt+0x4a9>$/;"	l
f0104159	obj/kern/kernel.asm	/^f0104159:	83 7d c8 01          	cmpl   $0x1,-0x38(%ebp)$/;"	l
f010415d	obj/kern/kernel.asm	/^f010415d:	7e 21                	jle    f0104180 <vprintfmt+0x3b7>$/;"	l
f010415f	obj/kern/kernel.asm	/^f010415f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104162	obj/kern/kernel.asm	/^f0104162:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0104165	obj/kern/kernel.asm	/^f0104165:	8b 00                	mov    (%eax),%eax$/;"	l
f0104167	obj/kern/kernel.asm	/^f0104167:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010416a	obj/kern/kernel.asm	/^f010416a:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f010416d	obj/kern/kernel.asm	/^f010416d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104170	obj/kern/kernel.asm	/^f0104170:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f0104173	obj/kern/kernel.asm	/^f0104173:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0104176	obj/kern/kernel.asm	/^f0104176:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010417b	obj/kern/kernel.asm	/^f010417b:	e9 f2 00 00 00       	jmp    f0104272 <vprintfmt+0x4a9>$/;"	l
f0104180	obj/kern/kernel.asm	/^f0104180:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)$/;"	l
f0104184	obj/kern/kernel.asm	/^f0104184:	75 23                	jne    f01041a9 <vprintfmt+0x3e0>$/;"	l
f0104186	obj/kern/kernel.asm	/^f0104186:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104189	obj/kern/kernel.asm	/^f0104189:	8b 00                	mov    (%eax),%eax$/;"	l
f010418b	obj/kern/kernel.asm	/^f010418b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104190	obj/kern/kernel.asm	/^f0104190:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104193	obj/kern/kernel.asm	/^f0104193:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0104196	obj/kern/kernel.asm	/^f0104196:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104199	obj/kern/kernel.asm	/^f0104199:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010419c	obj/kern/kernel.asm	/^f010419c:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010419f	obj/kern/kernel.asm	/^f010419f:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01041a4	obj/kern/kernel.asm	/^f01041a4:	e9 c9 00 00 00       	jmp    f0104272 <vprintfmt+0x4a9>$/;"	l
f01041a9	obj/kern/kernel.asm	/^f01041a9:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01041ac	obj/kern/kernel.asm	/^f01041ac:	8b 00                	mov    (%eax),%eax$/;"	l
f01041ae	obj/kern/kernel.asm	/^f01041ae:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01041b3	obj/kern/kernel.asm	/^f01041b3:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01041b6	obj/kern/kernel.asm	/^f01041b6:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f01041b9	obj/kern/kernel.asm	/^f01041b9:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01041bc	obj/kern/kernel.asm	/^f01041bc:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01041bf	obj/kern/kernel.asm	/^f01041bf:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01041c2	obj/kern/kernel.asm	/^f01041c2:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01041c7	obj/kern/kernel.asm	/^f01041c7:	e9 a6 00 00 00       	jmp    f0104272 <vprintfmt+0x4a9>$/;"	l
f01041cc	obj/kern/kernel.asm	/^f01041cc:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01041cf	obj/kern/kernel.asm	/^f01041cf:	53                   	push   %ebx$/;"	l
f01041d0	obj/kern/kernel.asm	/^f01041d0:	6a 30                	push   $0x30$/;"	l
f01041d2	obj/kern/kernel.asm	/^f01041d2:	ff d6                	call   *%esi$/;"	l
f01041d4	obj/kern/kernel.asm	/^f01041d4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01041d7	obj/kern/kernel.asm	/^f01041d7:	83 7d c8 01          	cmpl   $0x1,-0x38(%ebp)$/;"	l
f01041db	obj/kern/kernel.asm	/^f01041db:	7e 1e                	jle    f01041fb <vprintfmt+0x432>$/;"	l
f01041dd	obj/kern/kernel.asm	/^f01041dd:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01041e0	obj/kern/kernel.asm	/^f01041e0:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f01041e3	obj/kern/kernel.asm	/^f01041e3:	8b 00                	mov    (%eax),%eax$/;"	l
f01041e5	obj/kern/kernel.asm	/^f01041e5:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01041e8	obj/kern/kernel.asm	/^f01041e8:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f01041eb	obj/kern/kernel.asm	/^f01041eb:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01041ee	obj/kern/kernel.asm	/^f01041ee:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f01041f1	obj/kern/kernel.asm	/^f01041f1:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01041f4	obj/kern/kernel.asm	/^f01041f4:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01041f9	obj/kern/kernel.asm	/^f01041f9:	eb 77                	jmp    f0104272 <vprintfmt+0x4a9>$/;"	l
f01041fb	obj/kern/kernel.asm	/^f01041fb:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)$/;"	l
f01041ff	obj/kern/kernel.asm	/^f01041ff:	75 20                	jne    f0104221 <vprintfmt+0x458>$/;"	l
f0104201	obj/kern/kernel.asm	/^f0104201:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104204	obj/kern/kernel.asm	/^f0104204:	8b 00                	mov    (%eax),%eax$/;"	l
f0104206	obj/kern/kernel.asm	/^f0104206:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010420b	obj/kern/kernel.asm	/^f010420b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010420e	obj/kern/kernel.asm	/^f010420e:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0104211	obj/kern/kernel.asm	/^f0104211:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104214	obj/kern/kernel.asm	/^f0104214:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0104217	obj/kern/kernel.asm	/^f0104217:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010421a	obj/kern/kernel.asm	/^f010421a:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f010421f	obj/kern/kernel.asm	/^f010421f:	eb 51                	jmp    f0104272 <vprintfmt+0x4a9>$/;"	l
f0104221	obj/kern/kernel.asm	/^f0104221:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104224	obj/kern/kernel.asm	/^f0104224:	8b 00                	mov    (%eax),%eax$/;"	l
f0104226	obj/kern/kernel.asm	/^f0104226:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010422b	obj/kern/kernel.asm	/^f010422b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010422e	obj/kern/kernel.asm	/^f010422e:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0104231	obj/kern/kernel.asm	/^f0104231:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104234	obj/kern/kernel.asm	/^f0104234:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0104237	obj/kern/kernel.asm	/^f0104237:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010423a	obj/kern/kernel.asm	/^f010423a:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f010423f	obj/kern/kernel.asm	/^f010423f:	eb 31                	jmp    f0104272 <vprintfmt+0x4a9>$/;"	l
f0104241	obj/kern/kernel.asm	/^f0104241:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104244	obj/kern/kernel.asm	/^f0104244:	53                   	push   %ebx$/;"	l
f0104245	obj/kern/kernel.asm	/^f0104245:	6a 30                	push   $0x30$/;"	l
f0104247	obj/kern/kernel.asm	/^f0104247:	ff d6                	call   *%esi$/;"	l
f0104249	obj/kern/kernel.asm	/^f0104249:	83 c4 08             	add    $0x8,%esp$/;"	l
f010424c	obj/kern/kernel.asm	/^f010424c:	53                   	push   %ebx$/;"	l
f010424d	obj/kern/kernel.asm	/^f010424d:	6a 78                	push   $0x78$/;"	l
f010424f	obj/kern/kernel.asm	/^f010424f:	ff d6                	call   *%esi$/;"	l
f0104251	obj/kern/kernel.asm	/^f0104251:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104254	obj/kern/kernel.asm	/^f0104254:	8b 00                	mov    (%eax),%eax$/;"	l
f0104256	obj/kern/kernel.asm	/^f0104256:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010425b	obj/kern/kernel.asm	/^f010425b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010425e	obj/kern/kernel.asm	/^f010425e:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0104261	obj/kern/kernel.asm	/^f0104261:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104264	obj/kern/kernel.asm	/^f0104264:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104267	obj/kern/kernel.asm	/^f0104267:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010426a	obj/kern/kernel.asm	/^f010426a:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010426d	obj/kern/kernel.asm	/^f010426d:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0104272	obj/kern/kernel.asm	/^f0104272:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104275	obj/kern/kernel.asm	/^f0104275:	0f be 55 d4          	movsbl -0x2c(%ebp),%edx$/;"	l
f0104279	obj/kern/kernel.asm	/^f0104279:	52                   	push   %edx$/;"	l
f010427a	obj/kern/kernel.asm	/^f010427a:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f010427d	obj/kern/kernel.asm	/^f010427d:	50                   	push   %eax$/;"	l
f010427e	obj/kern/kernel.asm	/^f010427e:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0104281	obj/kern/kernel.asm	/^f0104281:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0104284	obj/kern/kernel.asm	/^f0104284:	89 da                	mov    %ebx,%edx$/;"	l
f0104286	obj/kern/kernel.asm	/^f0104286:	89 f0                	mov    %esi,%eax$/;"	l
f0104288	obj/kern/kernel.asm	/^f0104288:	e8 1f f9 ff ff       	call   f0103bac <printnum>$/;"	l
f010428d	obj/kern/kernel.asm	/^f010428d:	83 c4 20             	add    $0x20,%esp$/;"	l
f0104290	obj/kern/kernel.asm	/^f0104290:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104293	obj/kern/kernel.asm	/^f0104293:	83 c7 01             	add    $0x1,%edi$/;"	l
f0104296	obj/kern/kernel.asm	/^f0104296:	0f b6 47 ff          	movzbl -0x1(%edi),%eax$/;"	l
f010429a	obj/kern/kernel.asm	/^f010429a:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f010429d	obj/kern/kernel.asm	/^f010429d:	0f 84 3d fb ff ff    	je     f0103de0 <vprintfmt+0x17>$/;"	l
f01042a3	obj/kern/kernel.asm	/^f01042a3:	85 c0                	test   %eax,%eax$/;"	l
f01042a5	obj/kern/kernel.asm	/^f01042a5:	0f 84 b6 00 00 00    	je     f0104361 <vprintfmt+0x598>$/;"	l
f01042ab	obj/kern/kernel.asm	/^f01042ab:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01042ae	obj/kern/kernel.asm	/^f01042ae:	53                   	push   %ebx$/;"	l
f01042af	obj/kern/kernel.asm	/^f01042af:	50                   	push   %eax$/;"	l
f01042b0	obj/kern/kernel.asm	/^f01042b0:	ff d6                	call   *%esi$/;"	l
f01042b2	obj/kern/kernel.asm	/^f01042b2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01042b5	obj/kern/kernel.asm	/^f01042b5:	eb dc                	jmp    f0104293 <vprintfmt+0x4ca>$/;"	l
f01042b7	obj/kern/kernel.asm	/^f01042b7:	83 7d c8 01          	cmpl   $0x1,-0x38(%ebp)$/;"	l
f01042bb	obj/kern/kernel.asm	/^f01042bb:	7e 1e                	jle    f01042db <vprintfmt+0x512>$/;"	l
f01042bd	obj/kern/kernel.asm	/^f01042bd:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01042c0	obj/kern/kernel.asm	/^f01042c0:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f01042c3	obj/kern/kernel.asm	/^f01042c3:	8b 00                	mov    (%eax),%eax$/;"	l
f01042c5	obj/kern/kernel.asm	/^f01042c5:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01042c8	obj/kern/kernel.asm	/^f01042c8:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f01042cb	obj/kern/kernel.asm	/^f01042cb:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01042ce	obj/kern/kernel.asm	/^f01042ce:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f01042d1	obj/kern/kernel.asm	/^f01042d1:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01042d4	obj/kern/kernel.asm	/^f01042d4:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01042d9	obj/kern/kernel.asm	/^f01042d9:	eb 97                	jmp    f0104272 <vprintfmt+0x4a9>$/;"	l
f01042db	obj/kern/kernel.asm	/^f01042db:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)$/;"	l
f01042df	obj/kern/kernel.asm	/^f01042df:	75 23                	jne    f0104304 <vprintfmt+0x53b>$/;"	l
f01042e1	obj/kern/kernel.asm	/^f01042e1:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01042e4	obj/kern/kernel.asm	/^f01042e4:	8b 00                	mov    (%eax),%eax$/;"	l
f01042e6	obj/kern/kernel.asm	/^f01042e6:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01042eb	obj/kern/kernel.asm	/^f01042eb:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01042ee	obj/kern/kernel.asm	/^f01042ee:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f01042f1	obj/kern/kernel.asm	/^f01042f1:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01042f4	obj/kern/kernel.asm	/^f01042f4:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01042f7	obj/kern/kernel.asm	/^f01042f7:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01042fa	obj/kern/kernel.asm	/^f01042fa:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01042ff	obj/kern/kernel.asm	/^f01042ff:	e9 6e ff ff ff       	jmp    f0104272 <vprintfmt+0x4a9>$/;"	l
f0104304	obj/kern/kernel.asm	/^f0104304:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104307	obj/kern/kernel.asm	/^f0104307:	8b 00                	mov    (%eax),%eax$/;"	l
f0104309	obj/kern/kernel.asm	/^f0104309:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010430e	obj/kern/kernel.asm	/^f010430e:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104311	obj/kern/kernel.asm	/^f0104311:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0104314	obj/kern/kernel.asm	/^f0104314:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104317	obj/kern/kernel.asm	/^f0104317:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010431a	obj/kern/kernel.asm	/^f010431a:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010431d	obj/kern/kernel.asm	/^f010431d:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0104322	obj/kern/kernel.asm	/^f0104322:	e9 4b ff ff ff       	jmp    f0104272 <vprintfmt+0x4a9>$/;"	l
f0104327	obj/kern/kernel.asm	/^f0104327:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010432c	obj/kern/kernel.asm	/^f010432c:	e9 41 ff ff ff       	jmp    f0104272 <vprintfmt+0x4a9>$/;"	l
f0104331	obj/kern/kernel.asm	/^f0104331:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104334	obj/kern/kernel.asm	/^f0104334:	53                   	push   %ebx$/;"	l
f0104335	obj/kern/kernel.asm	/^f0104335:	6a 25                	push   $0x25$/;"	l
f0104337	obj/kern/kernel.asm	/^f0104337:	ff d6                	call   *%esi$/;"	l
f0104339	obj/kern/kernel.asm	/^f0104339:	83 c4 10             	add    $0x10,%esp$/;"	l
f010433c	obj/kern/kernel.asm	/^f010433c:	e9 4f ff ff ff       	jmp    f0104290 <vprintfmt+0x4c7>$/;"	l
f0104341	obj/kern/kernel.asm	/^f0104341:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104344	obj/kern/kernel.asm	/^f0104344:	53                   	push   %ebx$/;"	l
f0104345	obj/kern/kernel.asm	/^f0104345:	6a 25                	push   $0x25$/;"	l
f0104347	obj/kern/kernel.asm	/^f0104347:	ff d6                	call   *%esi$/;"	l
f0104349	obj/kern/kernel.asm	/^f0104349:	83 c4 10             	add    $0x10,%esp$/;"	l
f010434c	obj/kern/kernel.asm	/^f010434c:	89 f8                	mov    %edi,%eax$/;"	l
f010434e	obj/kern/kernel.asm	/^f010434e:	eb 03                	jmp    f0104353 <vprintfmt+0x58a>$/;"	l
f0104350	obj/kern/kernel.asm	/^f0104350:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104353	obj/kern/kernel.asm	/^f0104353:	80 78 ff 25          	cmpb   $0x25,-0x1(%eax)$/;"	l
f0104357	obj/kern/kernel.asm	/^f0104357:	75 f7                	jne    f0104350 <vprintfmt+0x587>$/;"	l
f0104359	obj/kern/kernel.asm	/^f0104359:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010435c	obj/kern/kernel.asm	/^f010435c:	e9 2f ff ff ff       	jmp    f0104290 <vprintfmt+0x4c7>$/;"	l
f0104361	obj/kern/kernel.asm	/^f0104361:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104364	obj/kern/kernel.asm	/^f0104364:	5b                   	pop    %ebx$/;"	l
f0104365	obj/kern/kernel.asm	/^f0104365:	5e                   	pop    %esi$/;"	l
f0104366	obj/kern/kernel.asm	/^f0104366:	5f                   	pop    %edi$/;"	l
f0104367	obj/kern/kernel.asm	/^f0104367:	5d                   	pop    %ebp$/;"	l
f0104368	obj/kern/kernel.asm	/^f0104368:	c3                   	ret    $/;"	l
f0104369	obj/kern/kernel.asm	/^f0104369 <vsnprintf>:$/;"	l
f0104369	obj/kern/kernel.asm	/^f0104369:	55                   	push   %ebp$/;"	l
f010436a	obj/kern/kernel.asm	/^f010436a:	89 e5                	mov    %esp,%ebp$/;"	l
f010436c	obj/kern/kernel.asm	/^f010436c:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010436f	obj/kern/kernel.asm	/^f010436f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104372	obj/kern/kernel.asm	/^f0104372:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104375	obj/kern/kernel.asm	/^f0104375:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0104378	obj/kern/kernel.asm	/^f0104378:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f010437c	obj/kern/kernel.asm	/^f010437c:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f010437f	obj/kern/kernel.asm	/^f010437f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0104386	obj/kern/kernel.asm	/^f0104386:	85 c0                	test   %eax,%eax$/;"	l
f0104388	obj/kern/kernel.asm	/^f0104388:	74 26                	je     f01043b0 <vsnprintf+0x47>$/;"	l
f010438a	obj/kern/kernel.asm	/^f010438a:	85 d2                	test   %edx,%edx$/;"	l
f010438c	obj/kern/kernel.asm	/^f010438c:	7e 22                	jle    f01043b0 <vsnprintf+0x47>$/;"	l
f010438e	obj/kern/kernel.asm	/^f010438e:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0104391	obj/kern/kernel.asm	/^f0104391:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104394	obj/kern/kernel.asm	/^f0104394:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0104397	obj/kern/kernel.asm	/^f0104397:	50                   	push   %eax$/;"	l
f0104398	obj/kern/kernel.asm	/^f0104398:	68 8f 3d 10 f0       	push   $0xf0103d8f$/;"	l
f010439d	obj/kern/kernel.asm	/^f010439d:	e8 27 fa ff ff       	call   f0103dc9 <vprintfmt>$/;"	l
f01043a2	obj/kern/kernel.asm	/^f01043a2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01043a5	obj/kern/kernel.asm	/^f01043a5:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01043a8	obj/kern/kernel.asm	/^f01043a8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01043ab	obj/kern/kernel.asm	/^f01043ab:	83 c4 10             	add    $0x10,%esp$/;"	l
f01043ae	obj/kern/kernel.asm	/^f01043ae:	c9                   	leave  $/;"	l
f01043af	obj/kern/kernel.asm	/^f01043af:	c3                   	ret    $/;"	l
f01043b0	obj/kern/kernel.asm	/^f01043b0:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01043b5	obj/kern/kernel.asm	/^f01043b5:	eb f7                	jmp    f01043ae <vsnprintf+0x45>$/;"	l
f01043b7	obj/kern/kernel.asm	/^f01043b7 <snprintf>:$/;"	l
f01043b7	obj/kern/kernel.asm	/^f01043b7:	55                   	push   %ebp$/;"	l
f01043b8	obj/kern/kernel.asm	/^f01043b8:	89 e5                	mov    %esp,%ebp$/;"	l
f01043ba	obj/kern/kernel.asm	/^f01043ba:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01043bd	obj/kern/kernel.asm	/^f01043bd:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01043c0	obj/kern/kernel.asm	/^f01043c0:	50                   	push   %eax$/;"	l
f01043c1	obj/kern/kernel.asm	/^f01043c1:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01043c4	obj/kern/kernel.asm	/^f01043c4:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01043c7	obj/kern/kernel.asm	/^f01043c7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01043ca	obj/kern/kernel.asm	/^f01043ca:	e8 9a ff ff ff       	call   f0104369 <vsnprintf>$/;"	l
f01043cf	obj/kern/kernel.asm	/^f01043cf:	c9                   	leave  $/;"	l
f01043d0	obj/kern/kernel.asm	/^f01043d0:	c3                   	ret    $/;"	l
f01043d1	obj/kern/kernel.asm	/^f01043d1 <readline>:$/;"	l
f01043d1	obj/kern/kernel.asm	/^f01043d1:	55                   	push   %ebp$/;"	l
f01043d2	obj/kern/kernel.asm	/^f01043d2:	89 e5                	mov    %esp,%ebp$/;"	l
f01043d4	obj/kern/kernel.asm	/^f01043d4:	57                   	push   %edi$/;"	l
f01043d5	obj/kern/kernel.asm	/^f01043d5:	56                   	push   %esi$/;"	l
f01043d6	obj/kern/kernel.asm	/^f01043d6:	53                   	push   %ebx$/;"	l
f01043d7	obj/kern/kernel.asm	/^f01043d7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01043da	obj/kern/kernel.asm	/^f01043da:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01043dd	obj/kern/kernel.asm	/^f01043dd:	85 c0                	test   %eax,%eax$/;"	l
f01043df	obj/kern/kernel.asm	/^f01043df:	74 11                	je     f01043f2 <readline+0x21>$/;"	l
f01043e1	obj/kern/kernel.asm	/^f01043e1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01043e4	obj/kern/kernel.asm	/^f01043e4:	50                   	push   %eax$/;"	l
f01043e5	obj/kern/kernel.asm	/^f01043e5:	68 c1 5e 10 f0       	push   $0xf0105ec1$/;"	l
f01043ea	obj/kern/kernel.asm	/^f01043ea:	e8 96 e9 ff ff       	call   f0102d85 <cprintf>$/;"	l
f01043ef	obj/kern/kernel.asm	/^f01043ef:	83 c4 10             	add    $0x10,%esp$/;"	l
f01043f2	obj/kern/kernel.asm	/^f01043f2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01043f5	obj/kern/kernel.asm	/^f01043f5:	6a 00                	push   $0x0$/;"	l
f01043f7	obj/kern/kernel.asm	/^f01043f7:	e8 7f c3 ff ff       	call   f010077b <iscons>$/;"	l
f01043fc	obj/kern/kernel.asm	/^f01043fc:	89 c7                	mov    %eax,%edi$/;"	l
f01043fe	obj/kern/kernel.asm	/^f01043fe:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104401	obj/kern/kernel.asm	/^f0104401:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0104406	obj/kern/kernel.asm	/^f0104406:	eb 3f                	jmp    f0104447 <readline+0x76>$/;"	l
f0104408	obj/kern/kernel.asm	/^f0104408:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010440b	obj/kern/kernel.asm	/^f010440b:	50                   	push   %eax$/;"	l
f010440c	obj/kern/kernel.asm	/^f010440c:	68 04 6a 10 f0       	push   $0xf0106a04$/;"	l
f0104411	obj/kern/kernel.asm	/^f0104411:	e8 6f e9 ff ff       	call   f0102d85 <cprintf>$/;"	l
f0104416	obj/kern/kernel.asm	/^f0104416:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104419	obj/kern/kernel.asm	/^f0104419:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010441e	obj/kern/kernel.asm	/^f010441e:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104421	obj/kern/kernel.asm	/^f0104421:	5b                   	pop    %ebx$/;"	l
f0104422	obj/kern/kernel.asm	/^f0104422:	5e                   	pop    %esi$/;"	l
f0104423	obj/kern/kernel.asm	/^f0104423:	5f                   	pop    %edi$/;"	l
f0104424	obj/kern/kernel.asm	/^f0104424:	5d                   	pop    %ebp$/;"	l
f0104425	obj/kern/kernel.asm	/^f0104425:	c3                   	ret    $/;"	l
f0104426	obj/kern/kernel.asm	/^f0104426:	85 ff                	test   %edi,%edi$/;"	l
f0104428	obj/kern/kernel.asm	/^f0104428:	75 05                	jne    f010442f <readline+0x5e>$/;"	l
f010442a	obj/kern/kernel.asm	/^f010442a:	83 ee 01             	sub    $0x1,%esi$/;"	l
f010442d	obj/kern/kernel.asm	/^f010442d:	eb 18                	jmp    f0104447 <readline+0x76>$/;"	l
f010442f	obj/kern/kernel.asm	/^f010442f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104432	obj/kern/kernel.asm	/^f0104432:	6a 08                	push   $0x8$/;"	l
f0104434	obj/kern/kernel.asm	/^f0104434:	e8 21 c3 ff ff       	call   f010075a <cputchar>$/;"	l
f0104439	obj/kern/kernel.asm	/^f0104439:	83 c4 10             	add    $0x10,%esp$/;"	l
f010443c	obj/kern/kernel.asm	/^f010443c:	eb ec                	jmp    f010442a <readline+0x59>$/;"	l
f010443e	obj/kern/kernel.asm	/^f010443e:	88 9e 00 0b 24 f0    	mov    %bl,-0xfdbf500(%esi)$/;"	l
f0104444	obj/kern/kernel.asm	/^f0104444:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f0104447	obj/kern/kernel.asm	/^f0104447:	e8 1e c3 ff ff       	call   f010076a <getchar>$/;"	l
f010444c	obj/kern/kernel.asm	/^f010444c:	89 c3                	mov    %eax,%ebx$/;"	l
f010444e	obj/kern/kernel.asm	/^f010444e:	85 c0                	test   %eax,%eax$/;"	l
f0104450	obj/kern/kernel.asm	/^f0104450:	78 b6                	js     f0104408 <readline+0x37>$/;"	l
f0104452	obj/kern/kernel.asm	/^f0104452:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0104455	obj/kern/kernel.asm	/^f0104455:	0f 94 c2             	sete   %dl$/;"	l
f0104458	obj/kern/kernel.asm	/^f0104458:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f010445b	obj/kern/kernel.asm	/^f010445b:	0f 94 c0             	sete   %al$/;"	l
f010445e	obj/kern/kernel.asm	/^f010445e:	08 c2                	or     %al,%dl$/;"	l
f0104460	obj/kern/kernel.asm	/^f0104460:	74 04                	je     f0104466 <readline+0x95>$/;"	l
f0104462	obj/kern/kernel.asm	/^f0104462:	85 f6                	test   %esi,%esi$/;"	l
f0104464	obj/kern/kernel.asm	/^f0104464:	7f c0                	jg     f0104426 <readline+0x55>$/;"	l
f0104466	obj/kern/kernel.asm	/^f0104466:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f0104469	obj/kern/kernel.asm	/^f0104469:	7e 1a                	jle    f0104485 <readline+0xb4>$/;"	l
f010446b	obj/kern/kernel.asm	/^f010446b:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f0104471	obj/kern/kernel.asm	/^f0104471:	7f 12                	jg     f0104485 <readline+0xb4>$/;"	l
f0104473	obj/kern/kernel.asm	/^f0104473:	85 ff                	test   %edi,%edi$/;"	l
f0104475	obj/kern/kernel.asm	/^f0104475:	74 c7                	je     f010443e <readline+0x6d>$/;"	l
f0104477	obj/kern/kernel.asm	/^f0104477:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010447a	obj/kern/kernel.asm	/^f010447a:	53                   	push   %ebx$/;"	l
f010447b	obj/kern/kernel.asm	/^f010447b:	e8 da c2 ff ff       	call   f010075a <cputchar>$/;"	l
f0104480	obj/kern/kernel.asm	/^f0104480:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104483	obj/kern/kernel.asm	/^f0104483:	eb b9                	jmp    f010443e <readline+0x6d>$/;"	l
f0104485	obj/kern/kernel.asm	/^f0104485:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f0104488	obj/kern/kernel.asm	/^f0104488:	74 05                	je     f010448f <readline+0xbe>$/;"	l
f010448a	obj/kern/kernel.asm	/^f010448a:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f010448d	obj/kern/kernel.asm	/^f010448d:	75 b8                	jne    f0104447 <readline+0x76>$/;"	l
f010448f	obj/kern/kernel.asm	/^f010448f:	85 ff                	test   %edi,%edi$/;"	l
f0104491	obj/kern/kernel.asm	/^f0104491:	75 11                	jne    f01044a4 <readline+0xd3>$/;"	l
f0104493	obj/kern/kernel.asm	/^f0104493:	c6 86 00 0b 24 f0 00 	movb   $0x0,-0xfdbf500(%esi)$/;"	l
f010449a	obj/kern/kernel.asm	/^f010449a:	b8 00 0b 24 f0       	mov    $0xf0240b00,%eax$/;"	l
f010449f	obj/kern/kernel.asm	/^f010449f:	e9 7a ff ff ff       	jmp    f010441e <readline+0x4d>$/;"	l
f01044a4	obj/kern/kernel.asm	/^f01044a4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01044a7	obj/kern/kernel.asm	/^f01044a7:	6a 0a                	push   $0xa$/;"	l
f01044a9	obj/kern/kernel.asm	/^f01044a9:	e8 ac c2 ff ff       	call   f010075a <cputchar>$/;"	l
f01044ae	obj/kern/kernel.asm	/^f01044ae:	83 c4 10             	add    $0x10,%esp$/;"	l
f01044b1	obj/kern/kernel.asm	/^f01044b1:	eb e0                	jmp    f0104493 <readline+0xc2>$/;"	l
f01044b3	obj/kern/kernel.asm	/^f01044b3 <strlen>:$/;"	l
f01044b3	obj/kern/kernel.asm	/^f01044b3:	55                   	push   %ebp$/;"	l
f01044b4	obj/kern/kernel.asm	/^f01044b4:	89 e5                	mov    %esp,%ebp$/;"	l
f01044b6	obj/kern/kernel.asm	/^f01044b6:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01044b9	obj/kern/kernel.asm	/^f01044b9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01044be	obj/kern/kernel.asm	/^f01044be:	eb 03                	jmp    f01044c3 <strlen+0x10>$/;"	l
f01044c0	obj/kern/kernel.asm	/^f01044c0:	83 c0 01             	add    $0x1,%eax$/;"	l
f01044c3	obj/kern/kernel.asm	/^f01044c3:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f01044c7	obj/kern/kernel.asm	/^f01044c7:	75 f7                	jne    f01044c0 <strlen+0xd>$/;"	l
f01044c9	obj/kern/kernel.asm	/^f01044c9:	5d                   	pop    %ebp$/;"	l
f01044ca	obj/kern/kernel.asm	/^f01044ca:	c3                   	ret    $/;"	l
f01044cb	obj/kern/kernel.asm	/^f01044cb <strnlen>:$/;"	l
f01044cb	obj/kern/kernel.asm	/^f01044cb:	55                   	push   %ebp$/;"	l
f01044cc	obj/kern/kernel.asm	/^f01044cc:	89 e5                	mov    %esp,%ebp$/;"	l
f01044ce	obj/kern/kernel.asm	/^f01044ce:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01044d1	obj/kern/kernel.asm	/^f01044d1:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01044d4	obj/kern/kernel.asm	/^f01044d4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01044d9	obj/kern/kernel.asm	/^f01044d9:	eb 03                	jmp    f01044de <strnlen+0x13>$/;"	l
f01044db	obj/kern/kernel.asm	/^f01044db:	83 c0 01             	add    $0x1,%eax$/;"	l
f01044de	obj/kern/kernel.asm	/^f01044de:	39 d0                	cmp    %edx,%eax$/;"	l
f01044e0	obj/kern/kernel.asm	/^f01044e0:	74 06                	je     f01044e8 <strnlen+0x1d>$/;"	l
f01044e2	obj/kern/kernel.asm	/^f01044e2:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)$/;"	l
f01044e6	obj/kern/kernel.asm	/^f01044e6:	75 f3                	jne    f01044db <strnlen+0x10>$/;"	l
f01044e8	obj/kern/kernel.asm	/^f01044e8:	5d                   	pop    %ebp$/;"	l
f01044e9	obj/kern/kernel.asm	/^f01044e9:	c3                   	ret    $/;"	l
f01044ea	obj/kern/kernel.asm	/^f01044ea <strcpy>:$/;"	l
f01044ea	obj/kern/kernel.asm	/^f01044ea:	55                   	push   %ebp$/;"	l
f01044eb	obj/kern/kernel.asm	/^f01044eb:	89 e5                	mov    %esp,%ebp$/;"	l
f01044ed	obj/kern/kernel.asm	/^f01044ed:	53                   	push   %ebx$/;"	l
f01044ee	obj/kern/kernel.asm	/^f01044ee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01044f1	obj/kern/kernel.asm	/^f01044f1:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01044f4	obj/kern/kernel.asm	/^f01044f4:	89 c2                	mov    %eax,%edx$/;"	l
f01044f6	obj/kern/kernel.asm	/^f01044f6:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01044f9	obj/kern/kernel.asm	/^f01044f9:	83 c2 01             	add    $0x1,%edx$/;"	l
f01044fc	obj/kern/kernel.asm	/^f01044fc:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f0104500	obj/kern/kernel.asm	/^f0104500:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0104503	obj/kern/kernel.asm	/^f0104503:	84 db                	test   %bl,%bl$/;"	l
f0104505	obj/kern/kernel.asm	/^f0104505:	75 ef                	jne    f01044f6 <strcpy+0xc>$/;"	l
f0104507	obj/kern/kernel.asm	/^f0104507:	5b                   	pop    %ebx$/;"	l
f0104508	obj/kern/kernel.asm	/^f0104508:	5d                   	pop    %ebp$/;"	l
f0104509	obj/kern/kernel.asm	/^f0104509:	c3                   	ret    $/;"	l
f010450a	obj/kern/kernel.asm	/^f010450a <strcat>:$/;"	l
f010450a	obj/kern/kernel.asm	/^f010450a:	55                   	push   %ebp$/;"	l
f010450b	obj/kern/kernel.asm	/^f010450b:	89 e5                	mov    %esp,%ebp$/;"	l
f010450d	obj/kern/kernel.asm	/^f010450d:	53                   	push   %ebx$/;"	l
f010450e	obj/kern/kernel.asm	/^f010450e:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104511	obj/kern/kernel.asm	/^f0104511:	53                   	push   %ebx$/;"	l
f0104512	obj/kern/kernel.asm	/^f0104512:	e8 9c ff ff ff       	call   f01044b3 <strlen>$/;"	l
f0104517	obj/kern/kernel.asm	/^f0104517:	83 c4 04             	add    $0x4,%esp$/;"	l
f010451a	obj/kern/kernel.asm	/^f010451a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010451d	obj/kern/kernel.asm	/^f010451d:	01 d8                	add    %ebx,%eax$/;"	l
f010451f	obj/kern/kernel.asm	/^f010451f:	50                   	push   %eax$/;"	l
f0104520	obj/kern/kernel.asm	/^f0104520:	e8 c5 ff ff ff       	call   f01044ea <strcpy>$/;"	l
f0104525	obj/kern/kernel.asm	/^f0104525:	89 d8                	mov    %ebx,%eax$/;"	l
f0104527	obj/kern/kernel.asm	/^f0104527:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010452a	obj/kern/kernel.asm	/^f010452a:	c9                   	leave  $/;"	l
f010452b	obj/kern/kernel.asm	/^f010452b:	c3                   	ret    $/;"	l
f010452c	obj/kern/kernel.asm	/^f010452c <strncpy>:$/;"	l
f010452c	obj/kern/kernel.asm	/^f010452c:	55                   	push   %ebp$/;"	l
f010452d	obj/kern/kernel.asm	/^f010452d:	89 e5                	mov    %esp,%ebp$/;"	l
f010452f	obj/kern/kernel.asm	/^f010452f:	56                   	push   %esi$/;"	l
f0104530	obj/kern/kernel.asm	/^f0104530:	53                   	push   %ebx$/;"	l
f0104531	obj/kern/kernel.asm	/^f0104531:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104534	obj/kern/kernel.asm	/^f0104534:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0104537	obj/kern/kernel.asm	/^f0104537:	89 f3                	mov    %esi,%ebx$/;"	l
f0104539	obj/kern/kernel.asm	/^f0104539:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f010453c	obj/kern/kernel.asm	/^f010453c:	89 f2                	mov    %esi,%edx$/;"	l
f010453e	obj/kern/kernel.asm	/^f010453e:	eb 0f                	jmp    f010454f <strncpy+0x23>$/;"	l
f0104540	obj/kern/kernel.asm	/^f0104540:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104543	obj/kern/kernel.asm	/^f0104543:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0104546	obj/kern/kernel.asm	/^f0104546:	88 42 ff             	mov    %al,-0x1(%edx)$/;"	l
f0104549	obj/kern/kernel.asm	/^f0104549:	80 39 01             	cmpb   $0x1,(%ecx)$/;"	l
f010454c	obj/kern/kernel.asm	/^f010454c:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f010454f	obj/kern/kernel.asm	/^f010454f:	39 da                	cmp    %ebx,%edx$/;"	l
f0104551	obj/kern/kernel.asm	/^f0104551:	75 ed                	jne    f0104540 <strncpy+0x14>$/;"	l
f0104553	obj/kern/kernel.asm	/^f0104553:	89 f0                	mov    %esi,%eax$/;"	l
f0104555	obj/kern/kernel.asm	/^f0104555:	5b                   	pop    %ebx$/;"	l
f0104556	obj/kern/kernel.asm	/^f0104556:	5e                   	pop    %esi$/;"	l
f0104557	obj/kern/kernel.asm	/^f0104557:	5d                   	pop    %ebp$/;"	l
f0104558	obj/kern/kernel.asm	/^f0104558:	c3                   	ret    $/;"	l
f0104559	obj/kern/kernel.asm	/^f0104559 <strlcpy>:$/;"	l
f0104559	obj/kern/kernel.asm	/^f0104559:	55                   	push   %ebp$/;"	l
f010455a	obj/kern/kernel.asm	/^f010455a:	89 e5                	mov    %esp,%ebp$/;"	l
f010455c	obj/kern/kernel.asm	/^f010455c:	56                   	push   %esi$/;"	l
f010455d	obj/kern/kernel.asm	/^f010455d:	53                   	push   %ebx$/;"	l
f010455e	obj/kern/kernel.asm	/^f010455e:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104561	obj/kern/kernel.asm	/^f0104561:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104564	obj/kern/kernel.asm	/^f0104564:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104567	obj/kern/kernel.asm	/^f0104567:	89 f0                	mov    %esi,%eax$/;"	l
f0104569	obj/kern/kernel.asm	/^f0104569:	8d 5c 0e ff          	lea    -0x1(%esi,%ecx,1),%ebx$/;"	l
f010456d	obj/kern/kernel.asm	/^f010456d:	85 c9                	test   %ecx,%ecx$/;"	l
f010456f	obj/kern/kernel.asm	/^f010456f:	75 0b                	jne    f010457c <strlcpy+0x23>$/;"	l
f0104571	obj/kern/kernel.asm	/^f0104571:	eb 17                	jmp    f010458a <strlcpy+0x31>$/;"	l
f0104573	obj/kern/kernel.asm	/^f0104573:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104576	obj/kern/kernel.asm	/^f0104576:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104579	obj/kern/kernel.asm	/^f0104579:	88 48 ff             	mov    %cl,-0x1(%eax)$/;"	l
f010457c	obj/kern/kernel.asm	/^f010457c:	39 d8                	cmp    %ebx,%eax$/;"	l
f010457e	obj/kern/kernel.asm	/^f010457e:	74 07                	je     f0104587 <strlcpy+0x2e>$/;"	l
f0104580	obj/kern/kernel.asm	/^f0104580:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0104583	obj/kern/kernel.asm	/^f0104583:	84 c9                	test   %cl,%cl$/;"	l
f0104585	obj/kern/kernel.asm	/^f0104585:	75 ec                	jne    f0104573 <strlcpy+0x1a>$/;"	l
f0104587	obj/kern/kernel.asm	/^f0104587:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f010458a	obj/kern/kernel.asm	/^f010458a:	29 f0                	sub    %esi,%eax$/;"	l
f010458c	obj/kern/kernel.asm	/^f010458c:	5b                   	pop    %ebx$/;"	l
f010458d	obj/kern/kernel.asm	/^f010458d:	5e                   	pop    %esi$/;"	l
f010458e	obj/kern/kernel.asm	/^f010458e:	5d                   	pop    %ebp$/;"	l
f010458f	obj/kern/kernel.asm	/^f010458f:	c3                   	ret    $/;"	l
f0104590	obj/kern/kernel.asm	/^f0104590 <strcmp>:$/;"	l
f0104590	obj/kern/kernel.asm	/^f0104590:	55                   	push   %ebp$/;"	l
f0104591	obj/kern/kernel.asm	/^f0104591:	89 e5                	mov    %esp,%ebp$/;"	l
f0104593	obj/kern/kernel.asm	/^f0104593:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0104596	obj/kern/kernel.asm	/^f0104596:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104599	obj/kern/kernel.asm	/^f0104599:	eb 06                	jmp    f01045a1 <strcmp+0x11>$/;"	l
f010459b	obj/kern/kernel.asm	/^f010459b:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010459e	obj/kern/kernel.asm	/^f010459e:	83 c2 01             	add    $0x1,%edx$/;"	l
f01045a1	obj/kern/kernel.asm	/^f01045a1:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01045a4	obj/kern/kernel.asm	/^f01045a4:	84 c0                	test   %al,%al$/;"	l
f01045a6	obj/kern/kernel.asm	/^f01045a6:	74 04                	je     f01045ac <strcmp+0x1c>$/;"	l
f01045a8	obj/kern/kernel.asm	/^f01045a8:	3a 02                	cmp    (%edx),%al$/;"	l
f01045aa	obj/kern/kernel.asm	/^f01045aa:	74 ef                	je     f010459b <strcmp+0xb>$/;"	l
f01045ac	obj/kern/kernel.asm	/^f01045ac:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01045af	obj/kern/kernel.asm	/^f01045af:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f01045b2	obj/kern/kernel.asm	/^f01045b2:	29 d0                	sub    %edx,%eax$/;"	l
f01045b4	obj/kern/kernel.asm	/^f01045b4:	5d                   	pop    %ebp$/;"	l
f01045b5	obj/kern/kernel.asm	/^f01045b5:	c3                   	ret    $/;"	l
f01045b6	obj/kern/kernel.asm	/^f01045b6 <strncmp>:$/;"	l
f01045b6	obj/kern/kernel.asm	/^f01045b6:	55                   	push   %ebp$/;"	l
f01045b7	obj/kern/kernel.asm	/^f01045b7:	89 e5                	mov    %esp,%ebp$/;"	l
f01045b9	obj/kern/kernel.asm	/^f01045b9:	53                   	push   %ebx$/;"	l
f01045ba	obj/kern/kernel.asm	/^f01045ba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01045bd	obj/kern/kernel.asm	/^f01045bd:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01045c0	obj/kern/kernel.asm	/^f01045c0:	89 c3                	mov    %eax,%ebx$/;"	l
f01045c2	obj/kern/kernel.asm	/^f01045c2:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f01045c5	obj/kern/kernel.asm	/^f01045c5:	eb 06                	jmp    f01045cd <strncmp+0x17>$/;"	l
f01045c7	obj/kern/kernel.asm	/^f01045c7:	83 c0 01             	add    $0x1,%eax$/;"	l
f01045ca	obj/kern/kernel.asm	/^f01045ca:	83 c2 01             	add    $0x1,%edx$/;"	l
f01045cd	obj/kern/kernel.asm	/^f01045cd:	39 d8                	cmp    %ebx,%eax$/;"	l
f01045cf	obj/kern/kernel.asm	/^f01045cf:	74 16                	je     f01045e7 <strncmp+0x31>$/;"	l
f01045d1	obj/kern/kernel.asm	/^f01045d1:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f01045d4	obj/kern/kernel.asm	/^f01045d4:	84 c9                	test   %cl,%cl$/;"	l
f01045d6	obj/kern/kernel.asm	/^f01045d6:	74 04                	je     f01045dc <strncmp+0x26>$/;"	l
f01045d8	obj/kern/kernel.asm	/^f01045d8:	3a 0a                	cmp    (%edx),%cl$/;"	l
f01045da	obj/kern/kernel.asm	/^f01045da:	74 eb                	je     f01045c7 <strncmp+0x11>$/;"	l
f01045dc	obj/kern/kernel.asm	/^f01045dc:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01045df	obj/kern/kernel.asm	/^f01045df:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f01045e2	obj/kern/kernel.asm	/^f01045e2:	29 d0                	sub    %edx,%eax$/;"	l
f01045e4	obj/kern/kernel.asm	/^f01045e4:	5b                   	pop    %ebx$/;"	l
f01045e5	obj/kern/kernel.asm	/^f01045e5:	5d                   	pop    %ebp$/;"	l
f01045e6	obj/kern/kernel.asm	/^f01045e6:	c3                   	ret    $/;"	l
f01045e7	obj/kern/kernel.asm	/^f01045e7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01045ec	obj/kern/kernel.asm	/^f01045ec:	eb f6                	jmp    f01045e4 <strncmp+0x2e>$/;"	l
f01045ee	obj/kern/kernel.asm	/^f01045ee <strchr>:$/;"	l
f01045ee	obj/kern/kernel.asm	/^f01045ee:	55                   	push   %ebp$/;"	l
f01045ef	obj/kern/kernel.asm	/^f01045ef:	89 e5                	mov    %esp,%ebp$/;"	l
f01045f1	obj/kern/kernel.asm	/^f01045f1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01045f4	obj/kern/kernel.asm	/^f01045f4:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f01045f8	obj/kern/kernel.asm	/^f01045f8:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01045fb	obj/kern/kernel.asm	/^f01045fb:	84 d2                	test   %dl,%dl$/;"	l
f01045fd	obj/kern/kernel.asm	/^f01045fd:	74 09                	je     f0104608 <strchr+0x1a>$/;"	l
f01045ff	obj/kern/kernel.asm	/^f01045ff:	38 ca                	cmp    %cl,%dl$/;"	l
f0104601	obj/kern/kernel.asm	/^f0104601:	74 0a                	je     f010460d <strchr+0x1f>$/;"	l
f0104603	obj/kern/kernel.asm	/^f0104603:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104606	obj/kern/kernel.asm	/^f0104606:	eb f0                	jmp    f01045f8 <strchr+0xa>$/;"	l
f0104608	obj/kern/kernel.asm	/^f0104608:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010460d	obj/kern/kernel.asm	/^f010460d:	5d                   	pop    %ebp$/;"	l
f010460e	obj/kern/kernel.asm	/^f010460e:	c3                   	ret    $/;"	l
f010460f	obj/kern/kernel.asm	/^f010460f <strfind>:$/;"	l
f010460f	obj/kern/kernel.asm	/^f010460f:	55                   	push   %ebp$/;"	l
f0104610	obj/kern/kernel.asm	/^f0104610:	89 e5                	mov    %esp,%ebp$/;"	l
f0104612	obj/kern/kernel.asm	/^f0104612:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104615	obj/kern/kernel.asm	/^f0104615:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0104619	obj/kern/kernel.asm	/^f0104619:	eb 03                	jmp    f010461e <strfind+0xf>$/;"	l
f010461b	obj/kern/kernel.asm	/^f010461b:	83 c0 01             	add    $0x1,%eax$/;"	l
f010461e	obj/kern/kernel.asm	/^f010461e:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0104621	obj/kern/kernel.asm	/^f0104621:	38 ca                	cmp    %cl,%dl$/;"	l
f0104623	obj/kern/kernel.asm	/^f0104623:	74 04                	je     f0104629 <strfind+0x1a>$/;"	l
f0104625	obj/kern/kernel.asm	/^f0104625:	84 d2                	test   %dl,%dl$/;"	l
f0104627	obj/kern/kernel.asm	/^f0104627:	75 f2                	jne    f010461b <strfind+0xc>$/;"	l
f0104629	obj/kern/kernel.asm	/^f0104629:	5d                   	pop    %ebp$/;"	l
f010462a	obj/kern/kernel.asm	/^f010462a:	c3                   	ret    $/;"	l
f010462b	obj/kern/kernel.asm	/^f010462b <memset>:$/;"	l
f010462b	obj/kern/kernel.asm	/^f010462b:	55                   	push   %ebp$/;"	l
f010462c	obj/kern/kernel.asm	/^f010462c:	89 e5                	mov    %esp,%ebp$/;"	l
f010462e	obj/kern/kernel.asm	/^f010462e:	57                   	push   %edi$/;"	l
f010462f	obj/kern/kernel.asm	/^f010462f:	56                   	push   %esi$/;"	l
f0104630	obj/kern/kernel.asm	/^f0104630:	53                   	push   %ebx$/;"	l
f0104631	obj/kern/kernel.asm	/^f0104631:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0104634	obj/kern/kernel.asm	/^f0104634:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104637	obj/kern/kernel.asm	/^f0104637:	85 c9                	test   %ecx,%ecx$/;"	l
f0104639	obj/kern/kernel.asm	/^f0104639:	74 13                	je     f010464e <memset+0x23>$/;"	l
f010463b	obj/kern/kernel.asm	/^f010463b:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f0104641	obj/kern/kernel.asm	/^f0104641:	75 05                	jne    f0104648 <memset+0x1d>$/;"	l
f0104643	obj/kern/kernel.asm	/^f0104643:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0104646	obj/kern/kernel.asm	/^f0104646:	74 0d                	je     f0104655 <memset+0x2a>$/;"	l
f0104648	obj/kern/kernel.asm	/^f0104648:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010464b	obj/kern/kernel.asm	/^f010464b:	fc                   	cld    $/;"	l
f010464c	obj/kern/kernel.asm	/^f010464c:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f010464e	obj/kern/kernel.asm	/^f010464e:	89 f8                	mov    %edi,%eax$/;"	l
f0104650	obj/kern/kernel.asm	/^f0104650:	5b                   	pop    %ebx$/;"	l
f0104651	obj/kern/kernel.asm	/^f0104651:	5e                   	pop    %esi$/;"	l
f0104652	obj/kern/kernel.asm	/^f0104652:	5f                   	pop    %edi$/;"	l
f0104653	obj/kern/kernel.asm	/^f0104653:	5d                   	pop    %ebp$/;"	l
f0104654	obj/kern/kernel.asm	/^f0104654:	c3                   	ret    $/;"	l
f0104655	obj/kern/kernel.asm	/^f0104655:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f0104659	obj/kern/kernel.asm	/^f0104659:	89 d3                	mov    %edx,%ebx$/;"	l
f010465b	obj/kern/kernel.asm	/^f010465b:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f010465e	obj/kern/kernel.asm	/^f010465e:	89 d0                	mov    %edx,%eax$/;"	l
f0104660	obj/kern/kernel.asm	/^f0104660:	c1 e0 18             	shl    $0x18,%eax$/;"	l
f0104663	obj/kern/kernel.asm	/^f0104663:	89 d6                	mov    %edx,%esi$/;"	l
f0104665	obj/kern/kernel.asm	/^f0104665:	c1 e6 10             	shl    $0x10,%esi$/;"	l
f0104668	obj/kern/kernel.asm	/^f0104668:	09 f0                	or     %esi,%eax$/;"	l
f010466a	obj/kern/kernel.asm	/^f010466a:	09 c2                	or     %eax,%edx$/;"	l
f010466c	obj/kern/kernel.asm	/^f010466c:	09 da                	or     %ebx,%edx$/;"	l
f010466e	obj/kern/kernel.asm	/^f010466e:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0104671	obj/kern/kernel.asm	/^f0104671:	89 d0                	mov    %edx,%eax$/;"	l
f0104673	obj/kern/kernel.asm	/^f0104673:	fc                   	cld    $/;"	l
f0104674	obj/kern/kernel.asm	/^f0104674:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0104676	obj/kern/kernel.asm	/^f0104676:	eb d6                	jmp    f010464e <memset+0x23>$/;"	l
f0104678	obj/kern/kernel.asm	/^f0104678 <memmove>:$/;"	l
f0104678	obj/kern/kernel.asm	/^f0104678:	55                   	push   %ebp$/;"	l
f0104679	obj/kern/kernel.asm	/^f0104679:	89 e5                	mov    %esp,%ebp$/;"	l
f010467b	obj/kern/kernel.asm	/^f010467b:	57                   	push   %edi$/;"	l
f010467c	obj/kern/kernel.asm	/^f010467c:	56                   	push   %esi$/;"	l
f010467d	obj/kern/kernel.asm	/^f010467d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104680	obj/kern/kernel.asm	/^f0104680:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0104683	obj/kern/kernel.asm	/^f0104683:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104686	obj/kern/kernel.asm	/^f0104686:	39 c6                	cmp    %eax,%esi$/;"	l
f0104688	obj/kern/kernel.asm	/^f0104688:	73 35                	jae    f01046bf <memmove+0x47>$/;"	l
f010468a	obj/kern/kernel.asm	/^f010468a:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f010468d	obj/kern/kernel.asm	/^f010468d:	39 c2                	cmp    %eax,%edx$/;"	l
f010468f	obj/kern/kernel.asm	/^f010468f:	76 2e                	jbe    f01046bf <memmove+0x47>$/;"	l
f0104691	obj/kern/kernel.asm	/^f0104691:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f0104694	obj/kern/kernel.asm	/^f0104694:	89 d6                	mov    %edx,%esi$/;"	l
f0104696	obj/kern/kernel.asm	/^f0104696:	09 fe                	or     %edi,%esi$/;"	l
f0104698	obj/kern/kernel.asm	/^f0104698:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f010469e	obj/kern/kernel.asm	/^f010469e:	74 0c                	je     f01046ac <memmove+0x34>$/;"	l
f01046a0	obj/kern/kernel.asm	/^f01046a0:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01046a3	obj/kern/kernel.asm	/^f01046a3:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f01046a6	obj/kern/kernel.asm	/^f01046a6:	fd                   	std    $/;"	l
f01046a7	obj/kern/kernel.asm	/^f01046a7:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f01046a9	obj/kern/kernel.asm	/^f01046a9:	fc                   	cld    $/;"	l
f01046aa	obj/kern/kernel.asm	/^f01046aa:	eb 21                	jmp    f01046cd <memmove+0x55>$/;"	l
f01046ac	obj/kern/kernel.asm	/^f01046ac:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01046af	obj/kern/kernel.asm	/^f01046af:	75 ef                	jne    f01046a0 <memmove+0x28>$/;"	l
f01046b1	obj/kern/kernel.asm	/^f01046b1:	83 ef 04             	sub    $0x4,%edi$/;"	l
f01046b4	obj/kern/kernel.asm	/^f01046b4:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f01046b7	obj/kern/kernel.asm	/^f01046b7:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01046ba	obj/kern/kernel.asm	/^f01046ba:	fd                   	std    $/;"	l
f01046bb	obj/kern/kernel.asm	/^f01046bb:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01046bd	obj/kern/kernel.asm	/^f01046bd:	eb ea                	jmp    f01046a9 <memmove+0x31>$/;"	l
f01046bf	obj/kern/kernel.asm	/^f01046bf:	89 f2                	mov    %esi,%edx$/;"	l
f01046c1	obj/kern/kernel.asm	/^f01046c1:	09 c2                	or     %eax,%edx$/;"	l
f01046c3	obj/kern/kernel.asm	/^f01046c3:	f6 c2 03             	test   $0x3,%dl$/;"	l
f01046c6	obj/kern/kernel.asm	/^f01046c6:	74 09                	je     f01046d1 <memmove+0x59>$/;"	l
f01046c8	obj/kern/kernel.asm	/^f01046c8:	89 c7                	mov    %eax,%edi$/;"	l
f01046ca	obj/kern/kernel.asm	/^f01046ca:	fc                   	cld    $/;"	l
f01046cb	obj/kern/kernel.asm	/^f01046cb:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f01046cd	obj/kern/kernel.asm	/^f01046cd:	5e                   	pop    %esi$/;"	l
f01046ce	obj/kern/kernel.asm	/^f01046ce:	5f                   	pop    %edi$/;"	l
f01046cf	obj/kern/kernel.asm	/^f01046cf:	5d                   	pop    %ebp$/;"	l
f01046d0	obj/kern/kernel.asm	/^f01046d0:	c3                   	ret    $/;"	l
f01046d1	obj/kern/kernel.asm	/^f01046d1:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01046d4	obj/kern/kernel.asm	/^f01046d4:	75 f2                	jne    f01046c8 <memmove+0x50>$/;"	l
f01046d6	obj/kern/kernel.asm	/^f01046d6:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01046d9	obj/kern/kernel.asm	/^f01046d9:	89 c7                	mov    %eax,%edi$/;"	l
f01046db	obj/kern/kernel.asm	/^f01046db:	fc                   	cld    $/;"	l
f01046dc	obj/kern/kernel.asm	/^f01046dc:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01046de	obj/kern/kernel.asm	/^f01046de:	eb ed                	jmp    f01046cd <memmove+0x55>$/;"	l
f01046e0	obj/kern/kernel.asm	/^f01046e0 <memcpy>:$/;"	l
f01046e0	obj/kern/kernel.asm	/^f01046e0:	55                   	push   %ebp$/;"	l
f01046e1	obj/kern/kernel.asm	/^f01046e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01046e3	obj/kern/kernel.asm	/^f01046e3:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01046e6	obj/kern/kernel.asm	/^f01046e6:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01046e9	obj/kern/kernel.asm	/^f01046e9:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01046ec	obj/kern/kernel.asm	/^f01046ec:	e8 87 ff ff ff       	call   f0104678 <memmove>$/;"	l
f01046f1	obj/kern/kernel.asm	/^f01046f1:	c9                   	leave  $/;"	l
f01046f2	obj/kern/kernel.asm	/^f01046f2:	c3                   	ret    $/;"	l
f01046f3	obj/kern/kernel.asm	/^f01046f3 <memcmp>:$/;"	l
f01046f3	obj/kern/kernel.asm	/^f01046f3:	55                   	push   %ebp$/;"	l
f01046f4	obj/kern/kernel.asm	/^f01046f4:	89 e5                	mov    %esp,%ebp$/;"	l
f01046f6	obj/kern/kernel.asm	/^f01046f6:	56                   	push   %esi$/;"	l
f01046f7	obj/kern/kernel.asm	/^f01046f7:	53                   	push   %ebx$/;"	l
f01046f8	obj/kern/kernel.asm	/^f01046f8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01046fb	obj/kern/kernel.asm	/^f01046fb:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01046fe	obj/kern/kernel.asm	/^f01046fe:	89 c6                	mov    %eax,%esi$/;"	l
f0104700	obj/kern/kernel.asm	/^f0104700:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f0104703	obj/kern/kernel.asm	/^f0104703:	39 f0                	cmp    %esi,%eax$/;"	l
f0104705	obj/kern/kernel.asm	/^f0104705:	74 1c                	je     f0104723 <memcmp+0x30>$/;"	l
f0104707	obj/kern/kernel.asm	/^f0104707:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f010470a	obj/kern/kernel.asm	/^f010470a:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f010470d	obj/kern/kernel.asm	/^f010470d:	38 d9                	cmp    %bl,%cl$/;"	l
f010470f	obj/kern/kernel.asm	/^f010470f:	75 08                	jne    f0104719 <memcmp+0x26>$/;"	l
f0104711	obj/kern/kernel.asm	/^f0104711:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104714	obj/kern/kernel.asm	/^f0104714:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104717	obj/kern/kernel.asm	/^f0104717:	eb ea                	jmp    f0104703 <memcmp+0x10>$/;"	l
f0104719	obj/kern/kernel.asm	/^f0104719:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f010471c	obj/kern/kernel.asm	/^f010471c:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f010471f	obj/kern/kernel.asm	/^f010471f:	29 d8                	sub    %ebx,%eax$/;"	l
f0104721	obj/kern/kernel.asm	/^f0104721:	eb 05                	jmp    f0104728 <memcmp+0x35>$/;"	l
f0104723	obj/kern/kernel.asm	/^f0104723:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104728	obj/kern/kernel.asm	/^f0104728:	5b                   	pop    %ebx$/;"	l
f0104729	obj/kern/kernel.asm	/^f0104729:	5e                   	pop    %esi$/;"	l
f010472a	obj/kern/kernel.asm	/^f010472a:	5d                   	pop    %ebp$/;"	l
f010472b	obj/kern/kernel.asm	/^f010472b:	c3                   	ret    $/;"	l
f010472c	obj/kern/kernel.asm	/^f010472c <memfind>:$/;"	l
f010472c	obj/kern/kernel.asm	/^f010472c:	55                   	push   %ebp$/;"	l
f010472d	obj/kern/kernel.asm	/^f010472d:	89 e5                	mov    %esp,%ebp$/;"	l
f010472f	obj/kern/kernel.asm	/^f010472f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104732	obj/kern/kernel.asm	/^f0104732:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0104735	obj/kern/kernel.asm	/^f0104735:	89 c2                	mov    %eax,%edx$/;"	l
f0104737	obj/kern/kernel.asm	/^f0104737:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f010473a	obj/kern/kernel.asm	/^f010473a:	39 d0                	cmp    %edx,%eax$/;"	l
f010473c	obj/kern/kernel.asm	/^f010473c:	73 09                	jae    f0104747 <memfind+0x1b>$/;"	l
f010473e	obj/kern/kernel.asm	/^f010473e:	38 08                	cmp    %cl,(%eax)$/;"	l
f0104740	obj/kern/kernel.asm	/^f0104740:	74 05                	je     f0104747 <memfind+0x1b>$/;"	l
f0104742	obj/kern/kernel.asm	/^f0104742:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104745	obj/kern/kernel.asm	/^f0104745:	eb f3                	jmp    f010473a <memfind+0xe>$/;"	l
f0104747	obj/kern/kernel.asm	/^f0104747:	5d                   	pop    %ebp$/;"	l
f0104748	obj/kern/kernel.asm	/^f0104748:	c3                   	ret    $/;"	l
f0104749	obj/kern/kernel.asm	/^f0104749 <strtol>:$/;"	l
f0104749	obj/kern/kernel.asm	/^f0104749:	55                   	push   %ebp$/;"	l
f010474a	obj/kern/kernel.asm	/^f010474a:	89 e5                	mov    %esp,%ebp$/;"	l
f010474c	obj/kern/kernel.asm	/^f010474c:	57                   	push   %edi$/;"	l
f010474d	obj/kern/kernel.asm	/^f010474d:	56                   	push   %esi$/;"	l
f010474e	obj/kern/kernel.asm	/^f010474e:	53                   	push   %ebx$/;"	l
f010474f	obj/kern/kernel.asm	/^f010474f:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0104752	obj/kern/kernel.asm	/^f0104752:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0104755	obj/kern/kernel.asm	/^f0104755:	eb 03                	jmp    f010475a <strtol+0x11>$/;"	l
f0104757	obj/kern/kernel.asm	/^f0104757:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010475a	obj/kern/kernel.asm	/^f010475a:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f010475d	obj/kern/kernel.asm	/^f010475d:	3c 20                	cmp    $0x20,%al$/;"	l
f010475f	obj/kern/kernel.asm	/^f010475f:	74 f6                	je     f0104757 <strtol+0xe>$/;"	l
f0104761	obj/kern/kernel.asm	/^f0104761:	3c 09                	cmp    $0x9,%al$/;"	l
f0104763	obj/kern/kernel.asm	/^f0104763:	74 f2                	je     f0104757 <strtol+0xe>$/;"	l
f0104765	obj/kern/kernel.asm	/^f0104765:	3c 2b                	cmp    $0x2b,%al$/;"	l
f0104767	obj/kern/kernel.asm	/^f0104767:	74 2e                	je     f0104797 <strtol+0x4e>$/;"	l
f0104769	obj/kern/kernel.asm	/^f0104769:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010476e	obj/kern/kernel.asm	/^f010476e:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0104770	obj/kern/kernel.asm	/^f0104770:	74 2f                	je     f01047a1 <strtol+0x58>$/;"	l
f0104772	obj/kern/kernel.asm	/^f0104772:	f7 c3 ef ff ff ff    	test   $0xffffffef,%ebx$/;"	l
f0104778	obj/kern/kernel.asm	/^f0104778:	75 05                	jne    f010477f <strtol+0x36>$/;"	l
f010477a	obj/kern/kernel.asm	/^f010477a:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f010477d	obj/kern/kernel.asm	/^f010477d:	74 2c                	je     f01047ab <strtol+0x62>$/;"	l
f010477f	obj/kern/kernel.asm	/^f010477f:	85 db                	test   %ebx,%ebx$/;"	l
f0104781	obj/kern/kernel.asm	/^f0104781:	75 0a                	jne    f010478d <strtol+0x44>$/;"	l
f0104783	obj/kern/kernel.asm	/^f0104783:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0104788	obj/kern/kernel.asm	/^f0104788:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f010478b	obj/kern/kernel.asm	/^f010478b:	74 28                	je     f01047b5 <strtol+0x6c>$/;"	l
f010478d	obj/kern/kernel.asm	/^f010478d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104792	obj/kern/kernel.asm	/^f0104792:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0104795	obj/kern/kernel.asm	/^f0104795:	eb 50                	jmp    f01047e7 <strtol+0x9e>$/;"	l
f0104797	obj/kern/kernel.asm	/^f0104797:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010479a	obj/kern/kernel.asm	/^f010479a:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010479f	obj/kern/kernel.asm	/^f010479f:	eb d1                	jmp    f0104772 <strtol+0x29>$/;"	l
f01047a1	obj/kern/kernel.asm	/^f01047a1:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01047a4	obj/kern/kernel.asm	/^f01047a4:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f01047a9	obj/kern/kernel.asm	/^f01047a9:	eb c7                	jmp    f0104772 <strtol+0x29>$/;"	l
f01047ab	obj/kern/kernel.asm	/^f01047ab:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)$/;"	l
f01047af	obj/kern/kernel.asm	/^f01047af:	74 0e                	je     f01047bf <strtol+0x76>$/;"	l
f01047b1	obj/kern/kernel.asm	/^f01047b1:	85 db                	test   %ebx,%ebx$/;"	l
f01047b3	obj/kern/kernel.asm	/^f01047b3:	75 d8                	jne    f010478d <strtol+0x44>$/;"	l
f01047b5	obj/kern/kernel.asm	/^f01047b5:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01047b8	obj/kern/kernel.asm	/^f01047b8:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f01047bd	obj/kern/kernel.asm	/^f01047bd:	eb ce                	jmp    f010478d <strtol+0x44>$/;"	l
f01047bf	obj/kern/kernel.asm	/^f01047bf:	83 c1 02             	add    $0x2,%ecx$/;"	l
f01047c2	obj/kern/kernel.asm	/^f01047c2:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f01047c7	obj/kern/kernel.asm	/^f01047c7:	eb c4                	jmp    f010478d <strtol+0x44>$/;"	l
f01047c9	obj/kern/kernel.asm	/^f01047c9:	8d 72 9f             	lea    -0x61(%edx),%esi$/;"	l
f01047cc	obj/kern/kernel.asm	/^f01047cc:	89 f3                	mov    %esi,%ebx$/;"	l
f01047ce	obj/kern/kernel.asm	/^f01047ce:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f01047d1	obj/kern/kernel.asm	/^f01047d1:	77 29                	ja     f01047fc <strtol+0xb3>$/;"	l
f01047d3	obj/kern/kernel.asm	/^f01047d3:	0f be d2             	movsbl %dl,%edx$/;"	l
f01047d6	obj/kern/kernel.asm	/^f01047d6:	83 ea 57             	sub    $0x57,%edx$/;"	l
f01047d9	obj/kern/kernel.asm	/^f01047d9:	3b 55 10             	cmp    0x10(%ebp),%edx$/;"	l
f01047dc	obj/kern/kernel.asm	/^f01047dc:	7d 30                	jge    f010480e <strtol+0xc5>$/;"	l
f01047de	obj/kern/kernel.asm	/^f01047de:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01047e1	obj/kern/kernel.asm	/^f01047e1:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
f01047e5	obj/kern/kernel.asm	/^f01047e5:	01 d0                	add    %edx,%eax$/;"	l
f01047e7	obj/kern/kernel.asm	/^f01047e7:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f01047ea	obj/kern/kernel.asm	/^f01047ea:	8d 72 d0             	lea    -0x30(%edx),%esi$/;"	l
f01047ed	obj/kern/kernel.asm	/^f01047ed:	89 f3                	mov    %esi,%ebx$/;"	l
f01047ef	obj/kern/kernel.asm	/^f01047ef:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f01047f2	obj/kern/kernel.asm	/^f01047f2:	77 d5                	ja     f01047c9 <strtol+0x80>$/;"	l
f01047f4	obj/kern/kernel.asm	/^f01047f4:	0f be d2             	movsbl %dl,%edx$/;"	l
f01047f7	obj/kern/kernel.asm	/^f01047f7:	83 ea 30             	sub    $0x30,%edx$/;"	l
f01047fa	obj/kern/kernel.asm	/^f01047fa:	eb dd                	jmp    f01047d9 <strtol+0x90>$/;"	l
f01047fc	obj/kern/kernel.asm	/^f01047fc:	8d 72 bf             	lea    -0x41(%edx),%esi$/;"	l
f01047ff	obj/kern/kernel.asm	/^f01047ff:	89 f3                	mov    %esi,%ebx$/;"	l
f0104801	obj/kern/kernel.asm	/^f0104801:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0104804	obj/kern/kernel.asm	/^f0104804:	77 08                	ja     f010480e <strtol+0xc5>$/;"	l
f0104806	obj/kern/kernel.asm	/^f0104806:	0f be d2             	movsbl %dl,%edx$/;"	l
f0104809	obj/kern/kernel.asm	/^f0104809:	83 ea 37             	sub    $0x37,%edx$/;"	l
f010480c	obj/kern/kernel.asm	/^f010480c:	eb cb                	jmp    f01047d9 <strtol+0x90>$/;"	l
f010480e	obj/kern/kernel.asm	/^f010480e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0104812	obj/kern/kernel.asm	/^f0104812:	74 05                	je     f0104819 <strtol+0xd0>$/;"	l
f0104814	obj/kern/kernel.asm	/^f0104814:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0104817	obj/kern/kernel.asm	/^f0104817:	89 0e                	mov    %ecx,(%esi)$/;"	l
f0104819	obj/kern/kernel.asm	/^f0104819:	89 c2                	mov    %eax,%edx$/;"	l
f010481b	obj/kern/kernel.asm	/^f010481b:	f7 da                	neg    %edx$/;"	l
f010481d	obj/kern/kernel.asm	/^f010481d:	85 ff                	test   %edi,%edi$/;"	l
f010481f	obj/kern/kernel.asm	/^f010481f:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f0104822	obj/kern/kernel.asm	/^f0104822:	5b                   	pop    %ebx$/;"	l
f0104823	obj/kern/kernel.asm	/^f0104823:	5e                   	pop    %esi$/;"	l
f0104824	obj/kern/kernel.asm	/^f0104824:	5f                   	pop    %edi$/;"	l
f0104825	obj/kern/kernel.asm	/^f0104825:	5d                   	pop    %ebp$/;"	l
f0104826	obj/kern/kernel.asm	/^f0104826:	c3                   	ret    $/;"	l
f0104827	obj/kern/kernel.asm	/^f0104827:	90                   	nop$/;"	l
f0104828	obj/kern/kernel.asm	/^f0104828 <mpentry_start>:$/;"	l
f0104828	obj/kern/kernel.asm	/^f0104828:	fa                   	cli    $/;"	l
f0104829	obj/kern/kernel.asm	/^f0104829:	31 c0                	xor    %eax,%eax$/;"	l
f010482b	obj/kern/kernel.asm	/^f010482b:	8e d8                	mov    %eax,%ds$/;"	l
f010482d	obj/kern/kernel.asm	/^f010482d:	8e c0                	mov    %eax,%es$/;"	l
f010482f	obj/kern/kernel.asm	/^f010482f:	8e d0                	mov    %eax,%ss$/;"	l
f0104831	obj/kern/kernel.asm	/^f0104831:	0f 01 16             	lgdtl  (%esi)$/;"	l
f0104834	obj/kern/kernel.asm	/^f0104834:	74 70                	je     f01048a6 <mpsearch1+0x3>$/;"	l
f0104836	obj/kern/kernel.asm	/^f0104836:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0104839	obj/kern/kernel.asm	/^f0104839:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f010483d	obj/kern/kernel.asm	/^f010483d:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0104840	obj/kern/kernel.asm	/^f0104840:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f0104846	obj/kern/kernel.asm	/^f0104846:	08 00                	or     %al,(%eax)$/;"	l
f0104848	obj/kern/kernel.asm	/^f0104848 <start32>:$/;"	l
f0104848	obj/kern/kernel.asm	/^f0104848:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f010484c	obj/kern/kernel.asm	/^f010484c:	8e d8                	mov    %eax,%ds$/;"	l
f010484e	obj/kern/kernel.asm	/^f010484e:	8e c0                	mov    %eax,%es$/;"	l
f0104850	obj/kern/kernel.asm	/^f0104850:	8e d0                	mov    %eax,%ss$/;"	l
f0104852	obj/kern/kernel.asm	/^f0104852:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f0104856	obj/kern/kernel.asm	/^f0104856:	8e e0                	mov    %eax,%fs$/;"	l
f0104858	obj/kern/kernel.asm	/^f0104858:	8e e8                	mov    %eax,%gs$/;"	l
f010485a	obj/kern/kernel.asm	/^f010485a:	b8 00 d0 11 00       	mov    $0x11d000,%eax$/;"	l
f010485f	obj/kern/kernel.asm	/^f010485f:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104862	obj/kern/kernel.asm	/^f0104862:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0104865	obj/kern/kernel.asm	/^f0104865:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f010486a	obj/kern/kernel.asm	/^f010486a:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f010486d	obj/kern/kernel.asm	/^f010486d:	8b 25 04 0f 24 f0    	mov    0xf0240f04,%esp$/;"	l
f0104873	obj/kern/kernel.asm	/^f0104873:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0104878	obj/kern/kernel.asm	/^f0104878:	b8 99 01 10 f0       	mov    $0xf0100199,%eax$/;"	l
f010487d	obj/kern/kernel.asm	/^f010487d:	ff d0                	call   *%eax$/;"	l
f010487f	obj/kern/kernel.asm	/^f010487f <spin>:$/;"	l
f010487f	obj/kern/kernel.asm	/^f010487f:	eb fe                	jmp    f010487f <spin>$/;"	l
f0104881	obj/kern/kernel.asm	/^f0104881:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0104884	obj/kern/kernel.asm	/^f0104884 <gdt>:$/;"	l
f010488c	obj/kern/kernel.asm	/^f010488c:	ff                   	(bad)  $/;"	l
f010488d	obj/kern/kernel.asm	/^f010488d:	ff 00                	incl   (%eax)$/;"	l
f010488f	obj/kern/kernel.asm	/^f010488f:	00 00                	add    %al,(%eax)$/;"	l
f0104891	obj/kern/kernel.asm	/^f0104891:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f0104898	obj/kern/kernel.asm	/^f0104898:	00                   	.byte 0x0$/;"	l
f0104899	obj/kern/kernel.asm	/^f0104899:	92                   	xchg   %eax,%edx$/;"	l
f010489a	obj/kern/kernel.asm	/^f010489a:	cf                   	iret   $/;"	l
f010489c	obj/kern/kernel.asm	/^f010489c <gdtdesc>:$/;"	l
f010489c	obj/kern/kernel.asm	/^f010489c:	17                   	pop    %ss$/;"	l
f010489d	obj/kern/kernel.asm	/^f010489d:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f01048a2	obj/kern/kernel.asm	/^f01048a2 <mpentry_end>:$/;"	l
f01048a2	obj/kern/kernel.asm	/^f01048a2:	90                   	nop$/;"	l
f01048a3	obj/kern/kernel.asm	/^f01048a3 <mpsearch1>:$/;"	l
f01048a3	obj/kern/kernel.asm	/^f01048a3:	55                   	push   %ebp$/;"	l
f01048a4	obj/kern/kernel.asm	/^f01048a4:	89 e5                	mov    %esp,%ebp$/;"	l
f01048a6	obj/kern/kernel.asm	/^f01048a6:	57                   	push   %edi$/;"	l
f01048a7	obj/kern/kernel.asm	/^f01048a7:	56                   	push   %esi$/;"	l
f01048a8	obj/kern/kernel.asm	/^f01048a8:	53                   	push   %ebx$/;"	l
f01048a9	obj/kern/kernel.asm	/^f01048a9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01048ac	obj/kern/kernel.asm	/^f01048ac:	8b 0d 08 0f 24 f0    	mov    0xf0240f08,%ecx$/;"	l
f01048b2	obj/kern/kernel.asm	/^f01048b2:	89 c3                	mov    %eax,%ebx$/;"	l
f01048b4	obj/kern/kernel.asm	/^f01048b4:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f01048b7	obj/kern/kernel.asm	/^f01048b7:	39 cb                	cmp    %ecx,%ebx$/;"	l
f01048b9	obj/kern/kernel.asm	/^f01048b9:	73 1a                	jae    f01048d5 <mpsearch1+0x32>$/;"	l
f01048bb	obj/kern/kernel.asm	/^f01048bb:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f01048c1	obj/kern/kernel.asm	/^f01048c1:	8d 34 02             	lea    (%edx,%eax,1),%esi$/;"	l
f01048c4	obj/kern/kernel.asm	/^f01048c4:	89 f0                	mov    %esi,%eax$/;"	l
f01048c6	obj/kern/kernel.asm	/^f01048c6:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01048c9	obj/kern/kernel.asm	/^f01048c9:	39 c8                	cmp    %ecx,%eax$/;"	l
f01048cb	obj/kern/kernel.asm	/^f01048cb:	73 1a                	jae    f01048e7 <mpsearch1+0x44>$/;"	l
f01048cd	obj/kern/kernel.asm	/^f01048cd:	81 ee 00 00 00 10    	sub    $0x10000000,%esi$/;"	l
f01048d3	obj/kern/kernel.asm	/^f01048d3:	eb 27                	jmp    f01048fc <mpsearch1+0x59>$/;"	l
f01048d5	obj/kern/kernel.asm	/^f01048d5:	50                   	push   %eax$/;"	l
f01048d6	obj/kern/kernel.asm	/^f01048d6:	68 c4 52 10 f0       	push   $0xf01052c4$/;"	l
f01048db	obj/kern/kernel.asm	/^f01048db:	6a 57                	push   $0x57$/;"	l
f01048dd	obj/kern/kernel.asm	/^f01048dd:	68 a1 6b 10 f0       	push   $0xf0106ba1$/;"	l
f01048e2	obj/kern/kernel.asm	/^f01048e2:	e8 59 b7 ff ff       	call   f0100040 <_panic>$/;"	l
f01048e7	obj/kern/kernel.asm	/^f01048e7:	56                   	push   %esi$/;"	l
f01048e8	obj/kern/kernel.asm	/^f01048e8:	68 c4 52 10 f0       	push   $0xf01052c4$/;"	l
f01048ed	obj/kern/kernel.asm	/^f01048ed:	6a 57                	push   $0x57$/;"	l
f01048ef	obj/kern/kernel.asm	/^f01048ef:	68 a1 6b 10 f0       	push   $0xf0106ba1$/;"	l
f01048f4	obj/kern/kernel.asm	/^f01048f4:	e8 47 b7 ff ff       	call   f0100040 <_panic>$/;"	l
f01048f9	obj/kern/kernel.asm	/^f01048f9:	83 c3 10             	add    $0x10,%ebx$/;"	l
f01048fc	obj/kern/kernel.asm	/^f01048fc:	39 f3                	cmp    %esi,%ebx$/;"	l
f01048fe	obj/kern/kernel.asm	/^f01048fe:	73 2e                	jae    f010492e <mpsearch1+0x8b>$/;"	l
f0104900	obj/kern/kernel.asm	/^f0104900:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104903	obj/kern/kernel.asm	/^f0104903:	6a 04                	push   $0x4$/;"	l
f0104905	obj/kern/kernel.asm	/^f0104905:	68 b1 6b 10 f0       	push   $0xf0106bb1$/;"	l
f010490a	obj/kern/kernel.asm	/^f010490a:	53                   	push   %ebx$/;"	l
f010490b	obj/kern/kernel.asm	/^f010490b:	e8 e3 fd ff ff       	call   f01046f3 <memcmp>$/;"	l
f0104910	obj/kern/kernel.asm	/^f0104910:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104913	obj/kern/kernel.asm	/^f0104913:	85 c0                	test   %eax,%eax$/;"	l
f0104915	obj/kern/kernel.asm	/^f0104915:	75 e2                	jne    f01048f9 <mpsearch1+0x56>$/;"	l
f0104917	obj/kern/kernel.asm	/^f0104917:	89 da                	mov    %ebx,%edx$/;"	l
f0104919	obj/kern/kernel.asm	/^f0104919:	8d 7b 10             	lea    0x10(%ebx),%edi$/;"	l
f010491c	obj/kern/kernel.asm	/^f010491c:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f010491f	obj/kern/kernel.asm	/^f010491f:	01 c8                	add    %ecx,%eax$/;"	l
f0104921	obj/kern/kernel.asm	/^f0104921:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104924	obj/kern/kernel.asm	/^f0104924:	39 fa                	cmp    %edi,%edx$/;"	l
f0104926	obj/kern/kernel.asm	/^f0104926:	75 f4                	jne    f010491c <mpsearch1+0x79>$/;"	l
f0104928	obj/kern/kernel.asm	/^f0104928:	84 c0                	test   %al,%al$/;"	l
f010492a	obj/kern/kernel.asm	/^f010492a:	75 cd                	jne    f01048f9 <mpsearch1+0x56>$/;"	l
f010492c	obj/kern/kernel.asm	/^f010492c:	eb 05                	jmp    f0104933 <mpsearch1+0x90>$/;"	l
f010492e	obj/kern/kernel.asm	/^f010492e:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0104933	obj/kern/kernel.asm	/^f0104933:	89 d8                	mov    %ebx,%eax$/;"	l
f0104935	obj/kern/kernel.asm	/^f0104935:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104938	obj/kern/kernel.asm	/^f0104938:	5b                   	pop    %ebx$/;"	l
f0104939	obj/kern/kernel.asm	/^f0104939:	5e                   	pop    %esi$/;"	l
f010493a	obj/kern/kernel.asm	/^f010493a:	5f                   	pop    %edi$/;"	l
f010493b	obj/kern/kernel.asm	/^f010493b:	5d                   	pop    %ebp$/;"	l
f010493c	obj/kern/kernel.asm	/^f010493c:	c3                   	ret    $/;"	l
f010493d	obj/kern/kernel.asm	/^f010493d <mp_init>:$/;"	l
f010493d	obj/kern/kernel.asm	/^f010493d:	55                   	push   %ebp$/;"	l
f010493e	obj/kern/kernel.asm	/^f010493e:	89 e5                	mov    %esp,%ebp$/;"	l
f0104940	obj/kern/kernel.asm	/^f0104940:	57                   	push   %edi$/;"	l
f0104941	obj/kern/kernel.asm	/^f0104941:	56                   	push   %esi$/;"	l
f0104942	obj/kern/kernel.asm	/^f0104942:	53                   	push   %ebx$/;"	l
f0104943	obj/kern/kernel.asm	/^f0104943:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104946	obj/kern/kernel.asm	/^f0104946:	c7 05 c0 13 24 f0 20 	movl   $0xf0241020,0xf02413c0$/;"	l
f010494d	obj/kern/kernel.asm	/^f010494d:	10 24 f0 $/;"	l
f0104950	obj/kern/kernel.asm	/^f0104950:	83 3d 08 0f 24 f0 00 	cmpl   $0x0,0xf0240f08$/;"	l
f0104957	obj/kern/kernel.asm	/^f0104957:	0f 84 87 00 00 00    	je     f01049e4 <mp_init+0xa7>$/;"	l
f010495d	obj/kern/kernel.asm	/^f010495d:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f0104964	obj/kern/kernel.asm	/^f0104964:	85 c0                	test   %eax,%eax$/;"	l
f0104966	obj/kern/kernel.asm	/^f0104966:	0f 84 8e 00 00 00    	je     f01049fa <mp_init+0xbd>$/;"	l
f010496c	obj/kern/kernel.asm	/^f010496c:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010496f	obj/kern/kernel.asm	/^f010496f:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0104974	obj/kern/kernel.asm	/^f0104974:	e8 2a ff ff ff       	call   f01048a3 <mpsearch1>$/;"	l
f0104979	obj/kern/kernel.asm	/^f0104979:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010497c	obj/kern/kernel.asm	/^f010497c:	85 c0                	test   %eax,%eax$/;"	l
f010497e	obj/kern/kernel.asm	/^f010497e:	0f 84 9a 00 00 00    	je     f0104a1e <mp_init+0xe1>$/;"	l
f0104984	obj/kern/kernel.asm	/^f0104984:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0104987	obj/kern/kernel.asm	/^f0104987:	8b 41 04             	mov    0x4(%ecx),%eax$/;"	l
f010498a	obj/kern/kernel.asm	/^f010498a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010498d	obj/kern/kernel.asm	/^f010498d:	85 c0                	test   %eax,%eax$/;"	l
f010498f	obj/kern/kernel.asm	/^f010498f:	0f 84 a8 00 00 00    	je     f0104a3d <mp_init+0x100>$/;"	l
f0104995	obj/kern/kernel.asm	/^f0104995:	80 79 0b 00          	cmpb   $0x0,0xb(%ecx)$/;"	l
f0104999	obj/kern/kernel.asm	/^f0104999:	0f 85 9e 00 00 00    	jne    f0104a3d <mp_init+0x100>$/;"	l
f010499f	obj/kern/kernel.asm	/^f010499f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01049a2	obj/kern/kernel.asm	/^f01049a2:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01049a5	obj/kern/kernel.asm	/^f01049a5:	3b 05 08 0f 24 f0    	cmp    0xf0240f08,%eax$/;"	l
f01049ab	obj/kern/kernel.asm	/^f01049ab:	0f 83 a1 00 00 00    	jae    f0104a52 <mp_init+0x115>$/;"	l
f01049b1	obj/kern/kernel.asm	/^f01049b1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01049b4	obj/kern/kernel.asm	/^f01049b4:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f01049ba	obj/kern/kernel.asm	/^f01049ba:	89 de                	mov    %ebx,%esi$/;"	l
f01049bc	obj/kern/kernel.asm	/^f01049bc:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01049bf	obj/kern/kernel.asm	/^f01049bf:	6a 04                	push   $0x4$/;"	l
f01049c1	obj/kern/kernel.asm	/^f01049c1:	68 b6 6b 10 f0       	push   $0xf0106bb6$/;"	l
f01049c6	obj/kern/kernel.asm	/^f01049c6:	53                   	push   %ebx$/;"	l
f01049c7	obj/kern/kernel.asm	/^f01049c7:	e8 27 fd ff ff       	call   f01046f3 <memcmp>$/;"	l
f01049cc	obj/kern/kernel.asm	/^f01049cc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01049cf	obj/kern/kernel.asm	/^f01049cf:	85 c0                	test   %eax,%eax$/;"	l
f01049d1	obj/kern/kernel.asm	/^f01049d1:	0f 85 92 00 00 00    	jne    f0104a69 <mp_init+0x12c>$/;"	l
f01049d7	obj/kern/kernel.asm	/^f01049d7:	0f b7 7b 04          	movzwl 0x4(%ebx),%edi$/;"	l
f01049db	obj/kern/kernel.asm	/^f01049db:	01 df                	add    %ebx,%edi$/;"	l
f01049dd	obj/kern/kernel.asm	/^f01049dd:	89 c2                	mov    %eax,%edx$/;"	l
f01049df	obj/kern/kernel.asm	/^f01049df:	e9 a2 00 00 00       	jmp    f0104a86 <mp_init+0x149>$/;"	l
f01049e4	obj/kern/kernel.asm	/^f01049e4:	68 00 04 00 00       	push   $0x400$/;"	l
f01049e9	obj/kern/kernel.asm	/^f01049e9:	68 c4 52 10 f0       	push   $0xf01052c4$/;"	l
f01049ee	obj/kern/kernel.asm	/^f01049ee:	6a 6f                	push   $0x6f$/;"	l
f01049f0	obj/kern/kernel.asm	/^f01049f0:	68 a1 6b 10 f0       	push   $0xf0106ba1$/;"	l
f01049f5	obj/kern/kernel.asm	/^f01049f5:	e8 46 b6 ff ff       	call   f0100040 <_panic>$/;"	l
f01049fa	obj/kern/kernel.asm	/^f01049fa:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f0104a01	obj/kern/kernel.asm	/^f0104a01:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0104a04	obj/kern/kernel.asm	/^f0104a04:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f0104a09	obj/kern/kernel.asm	/^f0104a09:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0104a0e	obj/kern/kernel.asm	/^f0104a0e:	e8 90 fe ff ff       	call   f01048a3 <mpsearch1>$/;"	l
f0104a13	obj/kern/kernel.asm	/^f0104a13:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104a16	obj/kern/kernel.asm	/^f0104a16:	85 c0                	test   %eax,%eax$/;"	l
f0104a18	obj/kern/kernel.asm	/^f0104a18:	0f 85 66 ff ff ff    	jne    f0104984 <mp_init+0x47>$/;"	l
f0104a1e	obj/kern/kernel.asm	/^f0104a1e:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0104a23	obj/kern/kernel.asm	/^f0104a23:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f0104a28	obj/kern/kernel.asm	/^f0104a28:	e8 76 fe ff ff       	call   f01048a3 <mpsearch1>$/;"	l
f0104a2d	obj/kern/kernel.asm	/^f0104a2d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104a30	obj/kern/kernel.asm	/^f0104a30:	85 c0                	test   %eax,%eax$/;"	l
f0104a32	obj/kern/kernel.asm	/^f0104a32:	0f 85 4c ff ff ff    	jne    f0104984 <mp_init+0x47>$/;"	l
f0104a38	obj/kern/kernel.asm	/^f0104a38:	e9 a8 01 00 00       	jmp    f0104be5 <mp_init+0x2a8>$/;"	l
f0104a3d	obj/kern/kernel.asm	/^f0104a3d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104a40	obj/kern/kernel.asm	/^f0104a40:	68 14 6a 10 f0       	push   $0xf0106a14$/;"	l
f0104a45	obj/kern/kernel.asm	/^f0104a45:	e8 3b e3 ff ff       	call   f0102d85 <cprintf>$/;"	l
f0104a4a	obj/kern/kernel.asm	/^f0104a4a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104a4d	obj/kern/kernel.asm	/^f0104a4d:	e9 93 01 00 00       	jmp    f0104be5 <mp_init+0x2a8>$/;"	l
f0104a52	obj/kern/kernel.asm	/^f0104a52:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0104a55	obj/kern/kernel.asm	/^f0104a55:	68 c4 52 10 f0       	push   $0xf01052c4$/;"	l
f0104a5a	obj/kern/kernel.asm	/^f0104a5a:	68 90 00 00 00       	push   $0x90$/;"	l
f0104a5f	obj/kern/kernel.asm	/^f0104a5f:	68 a1 6b 10 f0       	push   $0xf0106ba1$/;"	l
f0104a64	obj/kern/kernel.asm	/^f0104a64:	e8 d7 b5 ff ff       	call   f0100040 <_panic>$/;"	l
f0104a69	obj/kern/kernel.asm	/^f0104a69:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104a6c	obj/kern/kernel.asm	/^f0104a6c:	68 44 6a 10 f0       	push   $0xf0106a44$/;"	l
f0104a71	obj/kern/kernel.asm	/^f0104a71:	e8 0f e3 ff ff       	call   f0102d85 <cprintf>$/;"	l
f0104a76	obj/kern/kernel.asm	/^f0104a76:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104a79	obj/kern/kernel.asm	/^f0104a79:	e9 67 01 00 00       	jmp    f0104be5 <mp_init+0x2a8>$/;"	l
f0104a7e	obj/kern/kernel.asm	/^f0104a7e:	0f b6 0b             	movzbl (%ebx),%ecx$/;"	l
f0104a81	obj/kern/kernel.asm	/^f0104a81:	01 ca                	add    %ecx,%edx$/;"	l
f0104a83	obj/kern/kernel.asm	/^f0104a83:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0104a86	obj/kern/kernel.asm	/^f0104a86:	39 fb                	cmp    %edi,%ebx$/;"	l
f0104a88	obj/kern/kernel.asm	/^f0104a88:	75 f4                	jne    f0104a7e <mp_init+0x141>$/;"	l
f0104a8a	obj/kern/kernel.asm	/^f0104a8a:	84 d2                	test   %dl,%dl$/;"	l
f0104a8c	obj/kern/kernel.asm	/^f0104a8c:	75 16                	jne    f0104aa4 <mp_init+0x167>$/;"	l
f0104a8e	obj/kern/kernel.asm	/^f0104a8e:	0f b6 56 06          	movzbl 0x6(%esi),%edx$/;"	l
f0104a92	obj/kern/kernel.asm	/^f0104a92:	80 fa 01             	cmp    $0x1,%dl$/;"	l
f0104a95	obj/kern/kernel.asm	/^f0104a95:	74 05                	je     f0104a9c <mp_init+0x15f>$/;"	l
f0104a97	obj/kern/kernel.asm	/^f0104a97:	80 fa 04             	cmp    $0x4,%dl$/;"	l
f0104a9a	obj/kern/kernel.asm	/^f0104a9a:	75 1d                	jne    f0104ab9 <mp_init+0x17c>$/;"	l
f0104a9c	obj/kern/kernel.asm	/^f0104a9c:	0f b7 4e 28          	movzwl 0x28(%esi),%ecx$/;"	l
f0104aa0	obj/kern/kernel.asm	/^f0104aa0:	01 d9                	add    %ebx,%ecx$/;"	l
f0104aa2	obj/kern/kernel.asm	/^f0104aa2:	eb 36                	jmp    f0104ada <mp_init+0x19d>$/;"	l
f0104aa4	obj/kern/kernel.asm	/^f0104aa4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104aa7	obj/kern/kernel.asm	/^f0104aa7:	68 78 6a 10 f0       	push   $0xf0106a78$/;"	l
f0104aac	obj/kern/kernel.asm	/^f0104aac:	e8 d4 e2 ff ff       	call   f0102d85 <cprintf>$/;"	l
f0104ab1	obj/kern/kernel.asm	/^f0104ab1:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ab4	obj/kern/kernel.asm	/^f0104ab4:	e9 2c 01 00 00       	jmp    f0104be5 <mp_init+0x2a8>$/;"	l
f0104ab9	obj/kern/kernel.asm	/^f0104ab9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104abc	obj/kern/kernel.asm	/^f0104abc:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0104abf	obj/kern/kernel.asm	/^f0104abf:	52                   	push   %edx$/;"	l
f0104ac0	obj/kern/kernel.asm	/^f0104ac0:	68 9c 6a 10 f0       	push   $0xf0106a9c$/;"	l
f0104ac5	obj/kern/kernel.asm	/^f0104ac5:	e8 bb e2 ff ff       	call   f0102d85 <cprintf>$/;"	l
f0104aca	obj/kern/kernel.asm	/^f0104aca:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104acd	obj/kern/kernel.asm	/^f0104acd:	e9 13 01 00 00       	jmp    f0104be5 <mp_init+0x2a8>$/;"	l
f0104ad2	obj/kern/kernel.asm	/^f0104ad2:	0f b6 13             	movzbl (%ebx),%edx$/;"	l
f0104ad5	obj/kern/kernel.asm	/^f0104ad5:	01 d0                	add    %edx,%eax$/;"	l
f0104ad7	obj/kern/kernel.asm	/^f0104ad7:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0104ada	obj/kern/kernel.asm	/^f0104ada:	39 d9                	cmp    %ebx,%ecx$/;"	l
f0104adc	obj/kern/kernel.asm	/^f0104adc:	75 f4                	jne    f0104ad2 <mp_init+0x195>$/;"	l
f0104ade	obj/kern/kernel.asm	/^f0104ade:	02 46 2a             	add    0x2a(%esi),%al$/;"	l
f0104ae1	obj/kern/kernel.asm	/^f0104ae1:	75 29                	jne    f0104b0c <mp_init+0x1cf>$/;"	l
f0104ae3	obj/kern/kernel.asm	/^f0104ae3:	81 7d e4 00 00 00 10 	cmpl   $0x10000000,-0x1c(%ebp)$/;"	l
f0104aea	obj/kern/kernel.asm	/^f0104aea:	0f 84 f5 00 00 00    	je     f0104be5 <mp_init+0x2a8>$/;"	l
f0104af0	obj/kern/kernel.asm	/^f0104af0:	c7 05 00 10 24 f0 01 	movl   $0x1,0xf0241000$/;"	l
f0104af7	obj/kern/kernel.asm	/^f0104af7:	00 00 00 $/;"	l
f0104afa	obj/kern/kernel.asm	/^f0104afa:	8b 46 24             	mov    0x24(%esi),%eax$/;"	l
f0104afd	obj/kern/kernel.asm	/^f0104afd:	a3 00 20 28 f0       	mov    %eax,0xf0282000$/;"	l
f0104b02	obj/kern/kernel.asm	/^f0104b02:	8d 7e 2c             	lea    0x2c(%esi),%edi$/;"	l
f0104b05	obj/kern/kernel.asm	/^f0104b05:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0104b0a	obj/kern/kernel.asm	/^f0104b0a:	eb 4d                	jmp    f0104b59 <mp_init+0x21c>$/;"	l
f0104b0c	obj/kern/kernel.asm	/^f0104b0c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104b0f	obj/kern/kernel.asm	/^f0104b0f:	68 bc 6a 10 f0       	push   $0xf0106abc$/;"	l
f0104b14	obj/kern/kernel.asm	/^f0104b14:	e8 6c e2 ff ff       	call   f0102d85 <cprintf>$/;"	l
f0104b19	obj/kern/kernel.asm	/^f0104b19:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104b1c	obj/kern/kernel.asm	/^f0104b1c:	e9 c4 00 00 00       	jmp    f0104be5 <mp_init+0x2a8>$/;"	l
f0104b21	obj/kern/kernel.asm	/^f0104b21:	f6 47 03 02          	testb  $0x2,0x3(%edi)$/;"	l
f0104b25	obj/kern/kernel.asm	/^f0104b25:	74 11                	je     f0104b38 <mp_init+0x1fb>$/;"	l
f0104b27	obj/kern/kernel.asm	/^f0104b27:	6b 05 c4 13 24 f0 74 	imul   $0x74,0xf02413c4,%eax$/;"	l
f0104b2e	obj/kern/kernel.asm	/^f0104b2e:	05 20 10 24 f0       	add    $0xf0241020,%eax$/;"	l
f0104b33	obj/kern/kernel.asm	/^f0104b33:	a3 c0 13 24 f0       	mov    %eax,0xf02413c0$/;"	l
f0104b38	obj/kern/kernel.asm	/^f0104b38:	a1 c4 13 24 f0       	mov    0xf02413c4,%eax$/;"	l
f0104b3d	obj/kern/kernel.asm	/^f0104b3d:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0104b40	obj/kern/kernel.asm	/^f0104b40:	7f 2f                	jg     f0104b71 <mp_init+0x234>$/;"	l
f0104b42	obj/kern/kernel.asm	/^f0104b42:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104b45	obj/kern/kernel.asm	/^f0104b45:	88 82 20 10 24 f0    	mov    %al,-0xfdbefe0(%edx)$/;"	l
f0104b4b	obj/kern/kernel.asm	/^f0104b4b:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104b4e	obj/kern/kernel.asm	/^f0104b4e:	a3 c4 13 24 f0       	mov    %eax,0xf02413c4$/;"	l
f0104b53	obj/kern/kernel.asm	/^f0104b53:	83 c7 14             	add    $0x14,%edi$/;"	l
f0104b56	obj/kern/kernel.asm	/^f0104b56:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0104b59	obj/kern/kernel.asm	/^f0104b59:	0f b7 46 22          	movzwl 0x22(%esi),%eax$/;"	l
f0104b5d	obj/kern/kernel.asm	/^f0104b5d:	39 d8                	cmp    %ebx,%eax$/;"	l
f0104b5f	obj/kern/kernel.asm	/^f0104b5f:	76 4b                	jbe    f0104bac <mp_init+0x26f>$/;"	l
f0104b61	obj/kern/kernel.asm	/^f0104b61:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f0104b64	obj/kern/kernel.asm	/^f0104b64:	84 c0                	test   %al,%al$/;"	l
f0104b66	obj/kern/kernel.asm	/^f0104b66:	74 b9                	je     f0104b21 <mp_init+0x1e4>$/;"	l
f0104b68	obj/kern/kernel.asm	/^f0104b68:	3c 04                	cmp    $0x4,%al$/;"	l
f0104b6a	obj/kern/kernel.asm	/^f0104b6a:	77 1c                	ja     f0104b88 <mp_init+0x24b>$/;"	l
f0104b6c	obj/kern/kernel.asm	/^f0104b6c:	83 c7 08             	add    $0x8,%edi$/;"	l
f0104b6f	obj/kern/kernel.asm	/^f0104b6f:	eb e5                	jmp    f0104b56 <mp_init+0x219>$/;"	l
f0104b71	obj/kern/kernel.asm	/^f0104b71:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104b74	obj/kern/kernel.asm	/^f0104b74:	0f b6 47 01          	movzbl 0x1(%edi),%eax$/;"	l
f0104b78	obj/kern/kernel.asm	/^f0104b78:	50                   	push   %eax$/;"	l
f0104b79	obj/kern/kernel.asm	/^f0104b79:	68 ec 6a 10 f0       	push   $0xf0106aec$/;"	l
f0104b7e	obj/kern/kernel.asm	/^f0104b7e:	e8 02 e2 ff ff       	call   f0102d85 <cprintf>$/;"	l
f0104b83	obj/kern/kernel.asm	/^f0104b83:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104b86	obj/kern/kernel.asm	/^f0104b86:	eb cb                	jmp    f0104b53 <mp_init+0x216>$/;"	l
f0104b88	obj/kern/kernel.asm	/^f0104b88:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104b8b	obj/kern/kernel.asm	/^f0104b8b:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104b8e	obj/kern/kernel.asm	/^f0104b8e:	50                   	push   %eax$/;"	l
f0104b8f	obj/kern/kernel.asm	/^f0104b8f:	68 14 6b 10 f0       	push   $0xf0106b14$/;"	l
f0104b94	obj/kern/kernel.asm	/^f0104b94:	e8 ec e1 ff ff       	call   f0102d85 <cprintf>$/;"	l
f0104b99	obj/kern/kernel.asm	/^f0104b99:	c7 05 00 10 24 f0 00 	movl   $0x0,0xf0241000$/;"	l
f0104ba0	obj/kern/kernel.asm	/^f0104ba0:	00 00 00 $/;"	l
f0104ba3	obj/kern/kernel.asm	/^f0104ba3:	0f b7 5e 22          	movzwl 0x22(%esi),%ebx$/;"	l
f0104ba7	obj/kern/kernel.asm	/^f0104ba7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104baa	obj/kern/kernel.asm	/^f0104baa:	eb aa                	jmp    f0104b56 <mp_init+0x219>$/;"	l
f0104bac	obj/kern/kernel.asm	/^f0104bac:	a1 c0 13 24 f0       	mov    0xf02413c0,%eax$/;"	l
f0104bb1	obj/kern/kernel.asm	/^f0104bb1:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f0104bb8	obj/kern/kernel.asm	/^f0104bb8:	83 3d 00 10 24 f0 00 	cmpl   $0x0,0xf0241000$/;"	l
f0104bbf	obj/kern/kernel.asm	/^f0104bbf:	75 2c                	jne    f0104bed <mp_init+0x2b0>$/;"	l
f0104bc1	obj/kern/kernel.asm	/^f0104bc1:	c7 05 c4 13 24 f0 01 	movl   $0x1,0xf02413c4$/;"	l
f0104bc8	obj/kern/kernel.asm	/^f0104bc8:	00 00 00 $/;"	l
f0104bcb	obj/kern/kernel.asm	/^f0104bcb:	c7 05 00 20 28 f0 00 	movl   $0x0,0xf0282000$/;"	l
f0104bd2	obj/kern/kernel.asm	/^f0104bd2:	00 00 00 $/;"	l
f0104bd5	obj/kern/kernel.asm	/^f0104bd5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104bd8	obj/kern/kernel.asm	/^f0104bd8:	68 34 6b 10 f0       	push   $0xf0106b34$/;"	l
f0104bdd	obj/kern/kernel.asm	/^f0104bdd:	e8 a3 e1 ff ff       	call   f0102d85 <cprintf>$/;"	l
f0104be2	obj/kern/kernel.asm	/^f0104be2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104be5	obj/kern/kernel.asm	/^f0104be5:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104be8	obj/kern/kernel.asm	/^f0104be8:	5b                   	pop    %ebx$/;"	l
f0104be9	obj/kern/kernel.asm	/^f0104be9:	5e                   	pop    %esi$/;"	l
f0104bea	obj/kern/kernel.asm	/^f0104bea:	5f                   	pop    %edi$/;"	l
f0104beb	obj/kern/kernel.asm	/^f0104beb:	5d                   	pop    %ebp$/;"	l
f0104bec	obj/kern/kernel.asm	/^f0104bec:	c3                   	ret    $/;"	l
f0104bed	obj/kern/kernel.asm	/^f0104bed:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104bf0	obj/kern/kernel.asm	/^f0104bf0:	ff 35 c4 13 24 f0    	pushl  0xf02413c4$/;"	l
f0104bf6	obj/kern/kernel.asm	/^f0104bf6:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0104bf9	obj/kern/kernel.asm	/^f0104bf9:	50                   	push   %eax$/;"	l
f0104bfa	obj/kern/kernel.asm	/^f0104bfa:	68 bb 6b 10 f0       	push   $0xf0106bbb$/;"	l
f0104bff	obj/kern/kernel.asm	/^f0104bff:	e8 81 e1 ff ff       	call   f0102d85 <cprintf>$/;"	l
f0104c04	obj/kern/kernel.asm	/^f0104c04:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104c07	obj/kern/kernel.asm	/^f0104c07:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104c0a	obj/kern/kernel.asm	/^f0104c0a:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f0104c0e	obj/kern/kernel.asm	/^f0104c0e:	74 d5                	je     f0104be5 <mp_init+0x2a8>$/;"	l
f0104c10	obj/kern/kernel.asm	/^f0104c10:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104c13	obj/kern/kernel.asm	/^f0104c13:	68 60 6b 10 f0       	push   $0xf0106b60$/;"	l
f0104c18	obj/kern/kernel.asm	/^f0104c18:	e8 68 e1 ff ff       	call   f0102d85 <cprintf>$/;"	l
f0104c1d	obj/kern/kernel.asm	/^f0104c1d:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
f0104c22	obj/kern/kernel.asm	/^f0104c22:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f0104c27	obj/kern/kernel.asm	/^f0104c27:	ee                   	out    %al,(%dx)$/;"	l
f0104c28	obj/kern/kernel.asm	/^f0104c28:	ba 23 00 00 00       	mov    $0x23,%edx$/;"	l
f0104c2d	obj/kern/kernel.asm	/^f0104c2d:	ec                   	in     (%dx),%al$/;"	l
f0104c2e	obj/kern/kernel.asm	/^f0104c2e:	83 c8 01             	or     $0x1,%eax$/;"	l
f0104c31	obj/kern/kernel.asm	/^f0104c31:	ee                   	out    %al,(%dx)$/;"	l
f0104c32	obj/kern/kernel.asm	/^f0104c32:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104c35	obj/kern/kernel.asm	/^f0104c35:	eb ae                	jmp    f0104be5 <mp_init+0x2a8>$/;"	l
f0104c37	obj/kern/kernel.asm	/^f0104c37 <lapicw>:$/;"	l
f0104c37	obj/kern/kernel.asm	/^f0104c37:	55                   	push   %ebp$/;"	l
f0104c38	obj/kern/kernel.asm	/^f0104c38:	89 e5                	mov    %esp,%ebp$/;"	l
f0104c3a	obj/kern/kernel.asm	/^f0104c3a:	8b 0d 04 20 28 f0    	mov    0xf0282004,%ecx$/;"	l
f0104c40	obj/kern/kernel.asm	/^f0104c40:	8d 04 81             	lea    (%ecx,%eax,4),%eax$/;"	l
f0104c43	obj/kern/kernel.asm	/^f0104c43:	89 10                	mov    %edx,(%eax)$/;"	l
f0104c45	obj/kern/kernel.asm	/^f0104c45:	a1 04 20 28 f0       	mov    0xf0282004,%eax$/;"	l
f0104c4a	obj/kern/kernel.asm	/^f0104c4a:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0104c4d	obj/kern/kernel.asm	/^f0104c4d:	5d                   	pop    %ebp$/;"	l
f0104c4e	obj/kern/kernel.asm	/^f0104c4e:	c3                   	ret    $/;"	l
f0104c4f	obj/kern/kernel.asm	/^f0104c4f <cpunum>:$/;"	l
f0104c4f	obj/kern/kernel.asm	/^f0104c4f:	55                   	push   %ebp$/;"	l
f0104c50	obj/kern/kernel.asm	/^f0104c50:	89 e5                	mov    %esp,%ebp$/;"	l
f0104c52	obj/kern/kernel.asm	/^f0104c52:	8b 15 04 20 28 f0    	mov    0xf0282004,%edx$/;"	l
f0104c58	obj/kern/kernel.asm	/^f0104c58:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104c5d	obj/kern/kernel.asm	/^f0104c5d:	85 d2                	test   %edx,%edx$/;"	l
f0104c5f	obj/kern/kernel.asm	/^f0104c5f:	74 06                	je     f0104c67 <cpunum+0x18>$/;"	l
f0104c61	obj/kern/kernel.asm	/^f0104c61:	8b 42 20             	mov    0x20(%edx),%eax$/;"	l
f0104c64	obj/kern/kernel.asm	/^f0104c64:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0104c67	obj/kern/kernel.asm	/^f0104c67:	5d                   	pop    %ebp$/;"	l
f0104c68	obj/kern/kernel.asm	/^f0104c68:	c3                   	ret    $/;"	l
f0104c69	obj/kern/kernel.asm	/^f0104c69 <lapic_init>:$/;"	l
f0104c69	obj/kern/kernel.asm	/^f0104c69:	a1 00 20 28 f0       	mov    0xf0282000,%eax$/;"	l
f0104c6e	obj/kern/kernel.asm	/^f0104c6e:	85 c0                	test   %eax,%eax$/;"	l
f0104c70	obj/kern/kernel.asm	/^f0104c70:	75 02                	jne    f0104c74 <lapic_init+0xb>$/;"	l
f0104c72	obj/kern/kernel.asm	/^f0104c72:	f3 c3                	repz ret $/;"	l
f0104c74	obj/kern/kernel.asm	/^f0104c74:	55                   	push   %ebp$/;"	l
f0104c75	obj/kern/kernel.asm	/^f0104c75:	89 e5                	mov    %esp,%ebp$/;"	l
f0104c77	obj/kern/kernel.asm	/^f0104c77:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0104c7a	obj/kern/kernel.asm	/^f0104c7a:	68 00 10 00 00       	push   $0x1000$/;"	l
f0104c7f	obj/kern/kernel.asm	/^f0104c7f:	50                   	push   %eax$/;"	l
f0104c80	obj/kern/kernel.asm	/^f0104c80:	e8 73 c3 ff ff       	call   f0100ff8 <mmio_map_region>$/;"	l
f0104c85	obj/kern/kernel.asm	/^f0104c85:	a3 04 20 28 f0       	mov    %eax,0xf0282004$/;"	l
f0104c8a	obj/kern/kernel.asm	/^f0104c8a:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f0104c8f	obj/kern/kernel.asm	/^f0104c8f:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f0104c94	obj/kern/kernel.asm	/^f0104c94:	e8 9e ff ff ff       	call   f0104c37 <lapicw>$/;"	l
f0104c99	obj/kern/kernel.asm	/^f0104c99:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f0104c9e	obj/kern/kernel.asm	/^f0104c9e:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f0104ca3	obj/kern/kernel.asm	/^f0104ca3:	e8 8f ff ff ff       	call   f0104c37 <lapicw>$/;"	l
f0104ca8	obj/kern/kernel.asm	/^f0104ca8:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f0104cad	obj/kern/kernel.asm	/^f0104cad:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f0104cb2	obj/kern/kernel.asm	/^f0104cb2:	e8 80 ff ff ff       	call   f0104c37 <lapicw>$/;"	l
f0104cb7	obj/kern/kernel.asm	/^f0104cb7:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f0104cbc	obj/kern/kernel.asm	/^f0104cbc:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f0104cc1	obj/kern/kernel.asm	/^f0104cc1:	e8 71 ff ff ff       	call   f0104c37 <lapicw>$/;"	l
f0104cc6	obj/kern/kernel.asm	/^f0104cc6:	e8 84 ff ff ff       	call   f0104c4f <cpunum>$/;"	l
f0104ccb	obj/kern/kernel.asm	/^f0104ccb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104cce	obj/kern/kernel.asm	/^f0104cce:	05 20 10 24 f0       	add    $0xf0241020,%eax$/;"	l
f0104cd3	obj/kern/kernel.asm	/^f0104cd3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104cd6	obj/kern/kernel.asm	/^f0104cd6:	39 05 c0 13 24 f0    	cmp    %eax,0xf02413c0$/;"	l
f0104cdc	obj/kern/kernel.asm	/^f0104cdc:	74 0f                	je     f0104ced <lapic_init+0x84>$/;"	l
f0104cde	obj/kern/kernel.asm	/^f0104cde:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0104ce3	obj/kern/kernel.asm	/^f0104ce3:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f0104ce8	obj/kern/kernel.asm	/^f0104ce8:	e8 4a ff ff ff       	call   f0104c37 <lapicw>$/;"	l
f0104ced	obj/kern/kernel.asm	/^f0104ced:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0104cf2	obj/kern/kernel.asm	/^f0104cf2:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f0104cf7	obj/kern/kernel.asm	/^f0104cf7:	e8 3b ff ff ff       	call   f0104c37 <lapicw>$/;"	l
f0104cfc	obj/kern/kernel.asm	/^f0104cfc:	a1 04 20 28 f0       	mov    0xf0282004,%eax$/;"	l
f0104d01	obj/kern/kernel.asm	/^f0104d01:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f0104d04	obj/kern/kernel.asm	/^f0104d04:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104d07	obj/kern/kernel.asm	/^f0104d07:	3c 03                	cmp    $0x3,%al$/;"	l
f0104d09	obj/kern/kernel.asm	/^f0104d09:	77 7c                	ja     f0104d87 <lapic_init+0x11e>$/;"	l
f0104d0b	obj/kern/kernel.asm	/^f0104d0b:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f0104d10	obj/kern/kernel.asm	/^f0104d10:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f0104d15	obj/kern/kernel.asm	/^f0104d15:	e8 1d ff ff ff       	call   f0104c37 <lapicw>$/;"	l
f0104d1a	obj/kern/kernel.asm	/^f0104d1a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104d1f	obj/kern/kernel.asm	/^f0104d1f:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0104d24	obj/kern/kernel.asm	/^f0104d24:	e8 0e ff ff ff       	call   f0104c37 <lapicw>$/;"	l
f0104d29	obj/kern/kernel.asm	/^f0104d29:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104d2e	obj/kern/kernel.asm	/^f0104d2e:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0104d33	obj/kern/kernel.asm	/^f0104d33:	e8 ff fe ff ff       	call   f0104c37 <lapicw>$/;"	l
f0104d38	obj/kern/kernel.asm	/^f0104d38:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104d3d	obj/kern/kernel.asm	/^f0104d3d:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0104d42	obj/kern/kernel.asm	/^f0104d42:	e8 f0 fe ff ff       	call   f0104c37 <lapicw>$/;"	l
f0104d47	obj/kern/kernel.asm	/^f0104d47:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104d4c	obj/kern/kernel.asm	/^f0104d4c:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0104d51	obj/kern/kernel.asm	/^f0104d51:	e8 e1 fe ff ff       	call   f0104c37 <lapicw>$/;"	l
f0104d56	obj/kern/kernel.asm	/^f0104d56:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f0104d5b	obj/kern/kernel.asm	/^f0104d5b:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0104d60	obj/kern/kernel.asm	/^f0104d60:	e8 d2 fe ff ff       	call   f0104c37 <lapicw>$/;"	l
f0104d65	obj/kern/kernel.asm	/^f0104d65:	8b 15 04 20 28 f0    	mov    0xf0282004,%edx$/;"	l
f0104d6b	obj/kern/kernel.asm	/^f0104d6b:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0104d71	obj/kern/kernel.asm	/^f0104d71:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0104d74	obj/kern/kernel.asm	/^f0104d74:	75 f5                	jne    f0104d6b <lapic_init+0x102>$/;"	l
f0104d76	obj/kern/kernel.asm	/^f0104d76:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104d7b	obj/kern/kernel.asm	/^f0104d7b:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0104d80	obj/kern/kernel.asm	/^f0104d80:	e8 b2 fe ff ff       	call   f0104c37 <lapicw>$/;"	l
f0104d85	obj/kern/kernel.asm	/^f0104d85:	c9                   	leave  $/;"	l
f0104d86	obj/kern/kernel.asm	/^f0104d86:	c3                   	ret    $/;"	l
f0104d87	obj/kern/kernel.asm	/^f0104d87:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0104d8c	obj/kern/kernel.asm	/^f0104d8c:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f0104d91	obj/kern/kernel.asm	/^f0104d91:	e8 a1 fe ff ff       	call   f0104c37 <lapicw>$/;"	l
f0104d96	obj/kern/kernel.asm	/^f0104d96:	e9 70 ff ff ff       	jmp    f0104d0b <lapic_init+0xa2>$/;"	l
f0104d9b	obj/kern/kernel.asm	/^f0104d9b <lapic_eoi>:$/;"	l
f0104d9b	obj/kern/kernel.asm	/^f0104d9b:	83 3d 04 20 28 f0 00 	cmpl   $0x0,0xf0282004$/;"	l
f0104da2	obj/kern/kernel.asm	/^f0104da2:	74 14                	je     f0104db8 <lapic_eoi+0x1d>$/;"	l
f0104da4	obj/kern/kernel.asm	/^f0104da4:	55                   	push   %ebp$/;"	l
f0104da5	obj/kern/kernel.asm	/^f0104da5:	89 e5                	mov    %esp,%ebp$/;"	l
f0104da7	obj/kern/kernel.asm	/^f0104da7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104dac	obj/kern/kernel.asm	/^f0104dac:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0104db1	obj/kern/kernel.asm	/^f0104db1:	e8 81 fe ff ff       	call   f0104c37 <lapicw>$/;"	l
f0104db6	obj/kern/kernel.asm	/^f0104db6:	5d                   	pop    %ebp$/;"	l
f0104db7	obj/kern/kernel.asm	/^f0104db7:	c3                   	ret    $/;"	l
f0104db8	obj/kern/kernel.asm	/^f0104db8:	f3 c3                	repz ret $/;"	l
f0104dba	obj/kern/kernel.asm	/^f0104dba <lapic_startap>:$/;"	l
f0104dba	obj/kern/kernel.asm	/^f0104dba:	55                   	push   %ebp$/;"	l
f0104dbb	obj/kern/kernel.asm	/^f0104dbb:	89 e5                	mov    %esp,%ebp$/;"	l
f0104dbd	obj/kern/kernel.asm	/^f0104dbd:	56                   	push   %esi$/;"	l
f0104dbe	obj/kern/kernel.asm	/^f0104dbe:	53                   	push   %ebx$/;"	l
f0104dbf	obj/kern/kernel.asm	/^f0104dbf:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104dc2	obj/kern/kernel.asm	/^f0104dc2:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104dc5	obj/kern/kernel.asm	/^f0104dc5:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0104dca	obj/kern/kernel.asm	/^f0104dca:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0104dcf	obj/kern/kernel.asm	/^f0104dcf:	ee                   	out    %al,(%dx)$/;"	l
f0104dd0	obj/kern/kernel.asm	/^f0104dd0:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0104dd5	obj/kern/kernel.asm	/^f0104dd5:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0104dda	obj/kern/kernel.asm	/^f0104dda:	ee                   	out    %al,(%dx)$/;"	l
f0104ddb	obj/kern/kernel.asm	/^f0104ddb:	83 3d 08 0f 24 f0 00 	cmpl   $0x0,0xf0240f08$/;"	l
f0104de2	obj/kern/kernel.asm	/^f0104de2:	74 7e                	je     f0104e62 <lapic_startap+0xa8>$/;"	l
f0104de4	obj/kern/kernel.asm	/^f0104de4:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f0104deb	obj/kern/kernel.asm	/^f0104deb:	00 00 $/;"	l
f0104ded	obj/kern/kernel.asm	/^f0104ded:	89 d8                	mov    %ebx,%eax$/;"	l
f0104def	obj/kern/kernel.asm	/^f0104def:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f0104df2	obj/kern/kernel.asm	/^f0104df2:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f0104df8	obj/kern/kernel.asm	/^f0104df8:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f0104dfb	obj/kern/kernel.asm	/^f0104dfb:	89 f2                	mov    %esi,%edx$/;"	l
f0104dfd	obj/kern/kernel.asm	/^f0104dfd:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0104e02	obj/kern/kernel.asm	/^f0104e02:	e8 30 fe ff ff       	call   f0104c37 <lapicw>$/;"	l
f0104e07	obj/kern/kernel.asm	/^f0104e07:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f0104e0c	obj/kern/kernel.asm	/^f0104e0c:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0104e11	obj/kern/kernel.asm	/^f0104e11:	e8 21 fe ff ff       	call   f0104c37 <lapicw>$/;"	l
f0104e16	obj/kern/kernel.asm	/^f0104e16:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f0104e1b	obj/kern/kernel.asm	/^f0104e1b:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0104e20	obj/kern/kernel.asm	/^f0104e20:	e8 12 fe ff ff       	call   f0104c37 <lapicw>$/;"	l
f0104e25	obj/kern/kernel.asm	/^f0104e25:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0104e28	obj/kern/kernel.asm	/^f0104e28:	80 cf 06             	or     $0x6,%bh$/;"	l
f0104e2b	obj/kern/kernel.asm	/^f0104e2b:	89 f2                	mov    %esi,%edx$/;"	l
f0104e2d	obj/kern/kernel.asm	/^f0104e2d:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0104e32	obj/kern/kernel.asm	/^f0104e32:	e8 00 fe ff ff       	call   f0104c37 <lapicw>$/;"	l
f0104e37	obj/kern/kernel.asm	/^f0104e37:	89 da                	mov    %ebx,%edx$/;"	l
f0104e39	obj/kern/kernel.asm	/^f0104e39:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0104e3e	obj/kern/kernel.asm	/^f0104e3e:	e8 f4 fd ff ff       	call   f0104c37 <lapicw>$/;"	l
f0104e43	obj/kern/kernel.asm	/^f0104e43:	89 f2                	mov    %esi,%edx$/;"	l
f0104e45	obj/kern/kernel.asm	/^f0104e45:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0104e4a	obj/kern/kernel.asm	/^f0104e4a:	e8 e8 fd ff ff       	call   f0104c37 <lapicw>$/;"	l
f0104e4f	obj/kern/kernel.asm	/^f0104e4f:	89 da                	mov    %ebx,%edx$/;"	l
f0104e51	obj/kern/kernel.asm	/^f0104e51:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0104e56	obj/kern/kernel.asm	/^f0104e56:	e8 dc fd ff ff       	call   f0104c37 <lapicw>$/;"	l
f0104e5b	obj/kern/kernel.asm	/^f0104e5b:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0104e5e	obj/kern/kernel.asm	/^f0104e5e:	5b                   	pop    %ebx$/;"	l
f0104e5f	obj/kern/kernel.asm	/^f0104e5f:	5e                   	pop    %esi$/;"	l
f0104e60	obj/kern/kernel.asm	/^f0104e60:	5d                   	pop    %ebp$/;"	l
f0104e61	obj/kern/kernel.asm	/^f0104e61:	c3                   	ret    $/;"	l
f0104e62	obj/kern/kernel.asm	/^f0104e62:	68 67 04 00 00       	push   $0x467$/;"	l
f0104e67	obj/kern/kernel.asm	/^f0104e67:	68 c4 52 10 f0       	push   $0xf01052c4$/;"	l
f0104e6c	obj/kern/kernel.asm	/^f0104e6c:	68 98 00 00 00       	push   $0x98$/;"	l
f0104e71	obj/kern/kernel.asm	/^f0104e71:	68 d8 6b 10 f0       	push   $0xf0106bd8$/;"	l
f0104e76	obj/kern/kernel.asm	/^f0104e76:	e8 c5 b1 ff ff       	call   f0100040 <_panic>$/;"	l
f0104e7b	obj/kern/kernel.asm	/^f0104e7b <lapic_ipi>:$/;"	l
f0104e7b	obj/kern/kernel.asm	/^f0104e7b:	55                   	push   %ebp$/;"	l
f0104e7c	obj/kern/kernel.asm	/^f0104e7c:	89 e5                	mov    %esp,%ebp$/;"	l
f0104e7e	obj/kern/kernel.asm	/^f0104e7e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0104e81	obj/kern/kernel.asm	/^f0104e81:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f0104e87	obj/kern/kernel.asm	/^f0104e87:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0104e8c	obj/kern/kernel.asm	/^f0104e8c:	e8 a6 fd ff ff       	call   f0104c37 <lapicw>$/;"	l
f0104e91	obj/kern/kernel.asm	/^f0104e91:	8b 15 04 20 28 f0    	mov    0xf0282004,%edx$/;"	l
f0104e97	obj/kern/kernel.asm	/^f0104e97:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0104e9d	obj/kern/kernel.asm	/^f0104e9d:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0104ea0	obj/kern/kernel.asm	/^f0104ea0:	75 f5                	jne    f0104e97 <lapic_ipi+0x1c>$/;"	l
f0104ea2	obj/kern/kernel.asm	/^f0104ea2:	5d                   	pop    %ebp$/;"	l
f0104ea3	obj/kern/kernel.asm	/^f0104ea3:	c3                   	ret    $/;"	l
f0104ea4	obj/kern/kernel.asm	/^f0104ea4 <__spin_initlock>:$/;"	l
f0104ea4	obj/kern/kernel.asm	/^f0104ea4:	55                   	push   %ebp$/;"	l
f0104ea5	obj/kern/kernel.asm	/^f0104ea5:	89 e5                	mov    %esp,%ebp$/;"	l
f0104ea7	obj/kern/kernel.asm	/^f0104ea7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104eaa	obj/kern/kernel.asm	/^f0104eaa:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0104eb0	obj/kern/kernel.asm	/^f0104eb0:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104eb3	obj/kern/kernel.asm	/^f0104eb3:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f0104eb6	obj/kern/kernel.asm	/^f0104eb6:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0104ebd	obj/kern/kernel.asm	/^f0104ebd:	5d                   	pop    %ebp$/;"	l
f0104ebe	obj/kern/kernel.asm	/^f0104ebe:	c3                   	ret    $/;"	l
f0104ebf	obj/kern/kernel.asm	/^f0104ebf <spin_lock>:$/;"	l
f0104ebf	obj/kern/kernel.asm	/^f0104ebf:	55                   	push   %ebp$/;"	l
f0104ec0	obj/kern/kernel.asm	/^f0104ec0:	89 e5                	mov    %esp,%ebp$/;"	l
f0104ec2	obj/kern/kernel.asm	/^f0104ec2:	56                   	push   %esi$/;"	l
f0104ec3	obj/kern/kernel.asm	/^f0104ec3:	53                   	push   %ebx$/;"	l
f0104ec4	obj/kern/kernel.asm	/^f0104ec4:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104ec7	obj/kern/kernel.asm	/^f0104ec7:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f0104eca	obj/kern/kernel.asm	/^f0104eca:	75 07                	jne    f0104ed3 <spin_lock+0x14>$/;"	l
f0104ecc	obj/kern/kernel.asm	/^f0104ecc:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0104ed1	obj/kern/kernel.asm	/^f0104ed1:	eb 34                	jmp    f0104f07 <spin_lock+0x48>$/;"	l
f0104ed3	obj/kern/kernel.asm	/^f0104ed3:	8b 73 08             	mov    0x8(%ebx),%esi$/;"	l
f0104ed6	obj/kern/kernel.asm	/^f0104ed6:	e8 74 fd ff ff       	call   f0104c4f <cpunum>$/;"	l
f0104edb	obj/kern/kernel.asm	/^f0104edb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ede	obj/kern/kernel.asm	/^f0104ede:	05 20 10 24 f0       	add    $0xf0241020,%eax$/;"	l
f0104ee3	obj/kern/kernel.asm	/^f0104ee3:	39 c6                	cmp    %eax,%esi$/;"	l
f0104ee5	obj/kern/kernel.asm	/^f0104ee5:	75 e5                	jne    f0104ecc <spin_lock+0xd>$/;"	l
f0104ee7	obj/kern/kernel.asm	/^f0104ee7:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0104eea	obj/kern/kernel.asm	/^f0104eea:	e8 60 fd ff ff       	call   f0104c4f <cpunum>$/;"	l
f0104eef	obj/kern/kernel.asm	/^f0104eef:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104ef2	obj/kern/kernel.asm	/^f0104ef2:	53                   	push   %ebx$/;"	l
f0104ef3	obj/kern/kernel.asm	/^f0104ef3:	50                   	push   %eax$/;"	l
f0104ef4	obj/kern/kernel.asm	/^f0104ef4:	68 e8 6b 10 f0       	push   $0xf0106be8$/;"	l
f0104ef9	obj/kern/kernel.asm	/^f0104ef9:	6a 41                	push   $0x41$/;"	l
f0104efb	obj/kern/kernel.asm	/^f0104efb:	68 4c 6c 10 f0       	push   $0xf0106c4c$/;"	l
f0104f00	obj/kern/kernel.asm	/^f0104f00:	e8 3b b1 ff ff       	call   f0100040 <_panic>$/;"	l
f0104f05	obj/kern/kernel.asm	/^f0104f05:	f3 90                	pause  $/;"	l
f0104f07	obj/kern/kernel.asm	/^f0104f07:	89 d0                	mov    %edx,%eax$/;"	l
f0104f09	obj/kern/kernel.asm	/^f0104f09:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0104f0c	obj/kern/kernel.asm	/^f0104f0c:	85 c0                	test   %eax,%eax$/;"	l
f0104f0e	obj/kern/kernel.asm	/^f0104f0e:	75 f5                	jne    f0104f05 <spin_lock+0x46>$/;"	l
f0104f10	obj/kern/kernel.asm	/^f0104f10:	e8 3a fd ff ff       	call   f0104c4f <cpunum>$/;"	l
f0104f15	obj/kern/kernel.asm	/^f0104f15:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f18	obj/kern/kernel.asm	/^f0104f18:	05 20 10 24 f0       	add    $0xf0241020,%eax$/;"	l
f0104f1d	obj/kern/kernel.asm	/^f0104f1d:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f0104f20	obj/kern/kernel.asm	/^f0104f20:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0104f23	obj/kern/kernel.asm	/^f0104f23:	89 ea                	mov    %ebp,%edx$/;"	l
f0104f25	obj/kern/kernel.asm	/^f0104f25:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104f2a	obj/kern/kernel.asm	/^f0104f2a:	eb 0b                	jmp    f0104f37 <spin_lock+0x78>$/;"	l
f0104f2c	obj/kern/kernel.asm	/^f0104f2c:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f0104f2f	obj/kern/kernel.asm	/^f0104f2f:	89 0c 83             	mov    %ecx,(%ebx,%eax,4)$/;"	l
f0104f32	obj/kern/kernel.asm	/^f0104f32:	8b 12                	mov    (%edx),%edx$/;"	l
f0104f34	obj/kern/kernel.asm	/^f0104f34:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104f37	obj/kern/kernel.asm	/^f0104f37:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0104f3a	obj/kern/kernel.asm	/^f0104f3a:	7f 14                	jg     f0104f50 <spin_lock+0x91>$/;"	l
f0104f3c	obj/kern/kernel.asm	/^f0104f3c:	81 fa ff ff 7f ef    	cmp    $0xef7fffff,%edx$/;"	l
f0104f42	obj/kern/kernel.asm	/^f0104f42:	77 e8                	ja     f0104f2c <spin_lock+0x6d>$/;"	l
f0104f44	obj/kern/kernel.asm	/^f0104f44:	eb 0a                	jmp    f0104f50 <spin_lock+0x91>$/;"	l
f0104f46	obj/kern/kernel.asm	/^f0104f46:	c7 04 83 00 00 00 00 	movl   $0x0,(%ebx,%eax,4)$/;"	l
f0104f4d	obj/kern/kernel.asm	/^f0104f4d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104f50	obj/kern/kernel.asm	/^f0104f50:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0104f53	obj/kern/kernel.asm	/^f0104f53:	7e f1                	jle    f0104f46 <spin_lock+0x87>$/;"	l
f0104f55	obj/kern/kernel.asm	/^f0104f55:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0104f58	obj/kern/kernel.asm	/^f0104f58:	5b                   	pop    %ebx$/;"	l
f0104f59	obj/kern/kernel.asm	/^f0104f59:	5e                   	pop    %esi$/;"	l
f0104f5a	obj/kern/kernel.asm	/^f0104f5a:	5d                   	pop    %ebp$/;"	l
f0104f5b	obj/kern/kernel.asm	/^f0104f5b:	c3                   	ret    $/;"	l
f0104f5c	obj/kern/kernel.asm	/^f0104f5c <spin_unlock>:$/;"	l
f0104f5c	obj/kern/kernel.asm	/^f0104f5c:	55                   	push   %ebp$/;"	l
f0104f5d	obj/kern/kernel.asm	/^f0104f5d:	89 e5                	mov    %esp,%ebp$/;"	l
f0104f5f	obj/kern/kernel.asm	/^f0104f5f:	57                   	push   %edi$/;"	l
f0104f60	obj/kern/kernel.asm	/^f0104f60:	56                   	push   %esi$/;"	l
f0104f61	obj/kern/kernel.asm	/^f0104f61:	53                   	push   %ebx$/;"	l
f0104f62	obj/kern/kernel.asm	/^f0104f62:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0104f65	obj/kern/kernel.asm	/^f0104f65:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104f68	obj/kern/kernel.asm	/^f0104f68:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f0104f6b	obj/kern/kernel.asm	/^f0104f6b:	75 35                	jne    f0104fa2 <spin_unlock+0x46>$/;"	l
f0104f6d	obj/kern/kernel.asm	/^f0104f6d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104f70	obj/kern/kernel.asm	/^f0104f70:	6a 28                	push   $0x28$/;"	l
f0104f72	obj/kern/kernel.asm	/^f0104f72:	8d 46 0c             	lea    0xc(%esi),%eax$/;"	l
f0104f75	obj/kern/kernel.asm	/^f0104f75:	50                   	push   %eax$/;"	l
f0104f76	obj/kern/kernel.asm	/^f0104f76:	8d 5d c0             	lea    -0x40(%ebp),%ebx$/;"	l
f0104f79	obj/kern/kernel.asm	/^f0104f79:	53                   	push   %ebx$/;"	l
f0104f7a	obj/kern/kernel.asm	/^f0104f7a:	e8 f9 f6 ff ff       	call   f0104678 <memmove>$/;"	l
f0104f7f	obj/kern/kernel.asm	/^f0104f7f:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0104f82	obj/kern/kernel.asm	/^f0104f82:	0f b6 38             	movzbl (%eax),%edi$/;"	l
f0104f85	obj/kern/kernel.asm	/^f0104f85:	8b 76 04             	mov    0x4(%esi),%esi$/;"	l
f0104f88	obj/kern/kernel.asm	/^f0104f88:	e8 c2 fc ff ff       	call   f0104c4f <cpunum>$/;"	l
f0104f8d	obj/kern/kernel.asm	/^f0104f8d:	57                   	push   %edi$/;"	l
f0104f8e	obj/kern/kernel.asm	/^f0104f8e:	56                   	push   %esi$/;"	l
f0104f8f	obj/kern/kernel.asm	/^f0104f8f:	50                   	push   %eax$/;"	l
f0104f90	obj/kern/kernel.asm	/^f0104f90:	68 14 6c 10 f0       	push   $0xf0106c14$/;"	l
f0104f95	obj/kern/kernel.asm	/^f0104f95:	e8 eb dd ff ff       	call   f0102d85 <cprintf>$/;"	l
f0104f9a	obj/kern/kernel.asm	/^f0104f9a:	83 c4 20             	add    $0x20,%esp$/;"	l
f0104f9d	obj/kern/kernel.asm	/^f0104f9d:	8d 7d a8             	lea    -0x58(%ebp),%edi$/;"	l
f0104fa0	obj/kern/kernel.asm	/^f0104fa0:	eb 61                	jmp    f0105003 <spin_unlock+0xa7>$/;"	l
f0104fa2	obj/kern/kernel.asm	/^f0104fa2:	8b 5e 08             	mov    0x8(%esi),%ebx$/;"	l
f0104fa5	obj/kern/kernel.asm	/^f0104fa5:	e8 a5 fc ff ff       	call   f0104c4f <cpunum>$/;"	l
f0104faa	obj/kern/kernel.asm	/^f0104faa:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104fad	obj/kern/kernel.asm	/^f0104fad:	05 20 10 24 f0       	add    $0xf0241020,%eax$/;"	l
f0104fb2	obj/kern/kernel.asm	/^f0104fb2:	39 c3                	cmp    %eax,%ebx$/;"	l
f0104fb4	obj/kern/kernel.asm	/^f0104fb4:	75 b7                	jne    f0104f6d <spin_unlock+0x11>$/;"	l
f0104fb6	obj/kern/kernel.asm	/^f0104fb6:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)$/;"	l
f0104fbd	obj/kern/kernel.asm	/^f0104fbd:	c7 46 08 00 00 00 00 	movl   $0x0,0x8(%esi)$/;"	l
f0104fc4	obj/kern/kernel.asm	/^f0104fc4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104fc9	obj/kern/kernel.asm	/^f0104fc9:	f0 87 06             	lock xchg %eax,(%esi)$/;"	l
f0104fcc	obj/kern/kernel.asm	/^f0104fcc:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104fcf	obj/kern/kernel.asm	/^f0104fcf:	5b                   	pop    %ebx$/;"	l
f0104fd0	obj/kern/kernel.asm	/^f0104fd0:	5e                   	pop    %esi$/;"	l
f0104fd1	obj/kern/kernel.asm	/^f0104fd1:	5f                   	pop    %edi$/;"	l
f0104fd2	obj/kern/kernel.asm	/^f0104fd2:	5d                   	pop    %ebp$/;"	l
f0104fd3	obj/kern/kernel.asm	/^f0104fd3:	c3                   	ret    $/;"	l
f0104fd4	obj/kern/kernel.asm	/^f0104fd4:	8b 06                	mov    (%esi),%eax$/;"	l
f0104fd6	obj/kern/kernel.asm	/^f0104fd6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104fd9	obj/kern/kernel.asm	/^f0104fd9:	89 c2                	mov    %eax,%edx$/;"	l
f0104fdb	obj/kern/kernel.asm	/^f0104fdb:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f0104fde	obj/kern/kernel.asm	/^f0104fde:	52                   	push   %edx$/;"	l
f0104fdf	obj/kern/kernel.asm	/^f0104fdf:	ff 75 b0             	pushl  -0x50(%ebp)$/;"	l
f0104fe2	obj/kern/kernel.asm	/^f0104fe2:	ff 75 b4             	pushl  -0x4c(%ebp)$/;"	l
f0104fe5	obj/kern/kernel.asm	/^f0104fe5:	ff 75 ac             	pushl  -0x54(%ebp)$/;"	l
f0104fe8	obj/kern/kernel.asm	/^f0104fe8:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0104feb	obj/kern/kernel.asm	/^f0104feb:	50                   	push   %eax$/;"	l
f0104fec	obj/kern/kernel.asm	/^f0104fec:	68 5c 6c 10 f0       	push   $0xf0106c5c$/;"	l
f0104ff1	obj/kern/kernel.asm	/^f0104ff1:	e8 8f dd ff ff       	call   f0102d85 <cprintf>$/;"	l
f0104ff6	obj/kern/kernel.asm	/^f0104ff6:	83 c4 20             	add    $0x20,%esp$/;"	l
f0104ff9	obj/kern/kernel.asm	/^f0104ff9:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0104ffc	obj/kern/kernel.asm	/^f0104ffc:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f0104fff	obj/kern/kernel.asm	/^f0104fff:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105001	obj/kern/kernel.asm	/^f0105001:	74 2d                	je     f0105030 <spin_unlock+0xd4>$/;"	l
f0105003	obj/kern/kernel.asm	/^f0105003:	89 de                	mov    %ebx,%esi$/;"	l
f0105005	obj/kern/kernel.asm	/^f0105005:	8b 03                	mov    (%ebx),%eax$/;"	l
f0105007	obj/kern/kernel.asm	/^f0105007:	85 c0                	test   %eax,%eax$/;"	l
f0105009	obj/kern/kernel.asm	/^f0105009:	74 25                	je     f0105030 <spin_unlock+0xd4>$/;"	l
f010500b	obj/kern/kernel.asm	/^f010500b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010500e	obj/kern/kernel.asm	/^f010500e:	57                   	push   %edi$/;"	l
f010500f	obj/kern/kernel.asm	/^f010500f:	50                   	push   %eax$/;"	l
f0105010	obj/kern/kernel.asm	/^f0105010:	e8 3a e9 ff ff       	call   f010394f <debuginfo_eip>$/;"	l
f0105015	obj/kern/kernel.asm	/^f0105015:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105018	obj/kern/kernel.asm	/^f0105018:	85 c0                	test   %eax,%eax$/;"	l
f010501a	obj/kern/kernel.asm	/^f010501a:	79 b8                	jns    f0104fd4 <spin_unlock+0x78>$/;"	l
f010501c	obj/kern/kernel.asm	/^f010501c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010501f	obj/kern/kernel.asm	/^f010501f:	ff 36                	pushl  (%esi)$/;"	l
f0105021	obj/kern/kernel.asm	/^f0105021:	68 73 6c 10 f0       	push   $0xf0106c73$/;"	l
f0105026	obj/kern/kernel.asm	/^f0105026:	e8 5a dd ff ff       	call   f0102d85 <cprintf>$/;"	l
f010502b	obj/kern/kernel.asm	/^f010502b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010502e	obj/kern/kernel.asm	/^f010502e:	eb c9                	jmp    f0104ff9 <spin_unlock+0x9d>$/;"	l
f0105030	obj/kern/kernel.asm	/^f0105030:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105033	obj/kern/kernel.asm	/^f0105033:	68 7b 6c 10 f0       	push   $0xf0106c7b$/;"	l
f0105038	obj/kern/kernel.asm	/^f0105038:	6a 67                	push   $0x67$/;"	l
f010503a	obj/kern/kernel.asm	/^f010503a:	68 4c 6c 10 f0       	push   $0xf0106c4c$/;"	l
f010503f	obj/kern/kernel.asm	/^f010503f:	e8 fc af ff ff       	call   f0100040 <_panic>$/;"	l
f0105044	obj/kern/kernel.asm	/^f0105044:	66 90                	xchg   %ax,%ax$/;"	l
f0105046	obj/kern/kernel.asm	/^f0105046:	66 90                	xchg   %ax,%ax$/;"	l
f0105048	obj/kern/kernel.asm	/^f0105048:	66 90                	xchg   %ax,%ax$/;"	l
f010504a	obj/kern/kernel.asm	/^f010504a:	66 90                	xchg   %ax,%ax$/;"	l
f010504c	obj/kern/kernel.asm	/^f010504c:	66 90                	xchg   %ax,%ax$/;"	l
f010504e	obj/kern/kernel.asm	/^f010504e:	66 90                	xchg   %ax,%ax$/;"	l
f0105050	obj/kern/kernel.asm	/^f0105050 <__udivdi3>:$/;"	l
f0105050	obj/kern/kernel.asm	/^f0105050:	55                   	push   %ebp$/;"	l
f0105051	obj/kern/kernel.asm	/^f0105051:	57                   	push   %edi$/;"	l
f0105052	obj/kern/kernel.asm	/^f0105052:	56                   	push   %esi$/;"	l
f0105053	obj/kern/kernel.asm	/^f0105053:	53                   	push   %ebx$/;"	l
f0105054	obj/kern/kernel.asm	/^f0105054:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105057	obj/kern/kernel.asm	/^f0105057:	8b 54 24 3c          	mov    0x3c(%esp),%edx$/;"	l
f010505b	obj/kern/kernel.asm	/^f010505b:	8b 6c 24 30          	mov    0x30(%esp),%ebp$/;"	l
f010505f	obj/kern/kernel.asm	/^f010505f:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f0105063	obj/kern/kernel.asm	/^f0105063:	8b 5c 24 38          	mov    0x38(%esp),%ebx$/;"	l
f0105067	obj/kern/kernel.asm	/^f0105067:	85 d2                	test   %edx,%edx$/;"	l
f0105069	obj/kern/kernel.asm	/^f0105069:	75 35                	jne    f01050a0 <__udivdi3+0x50>$/;"	l
f010506b	obj/kern/kernel.asm	/^f010506b:	39 f3                	cmp    %esi,%ebx$/;"	l
f010506d	obj/kern/kernel.asm	/^f010506d:	0f 87 bd 00 00 00    	ja     f0105130 <__udivdi3+0xe0>$/;"	l
f0105073	obj/kern/kernel.asm	/^f0105073:	85 db                	test   %ebx,%ebx$/;"	l
f0105075	obj/kern/kernel.asm	/^f0105075:	89 d9                	mov    %ebx,%ecx$/;"	l
f0105077	obj/kern/kernel.asm	/^f0105077:	75 0b                	jne    f0105084 <__udivdi3+0x34>$/;"	l
f0105079	obj/kern/kernel.asm	/^f0105079:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010507e	obj/kern/kernel.asm	/^f010507e:	31 d2                	xor    %edx,%edx$/;"	l
f0105080	obj/kern/kernel.asm	/^f0105080:	f7 f3                	div    %ebx$/;"	l
f0105082	obj/kern/kernel.asm	/^f0105082:	89 c1                	mov    %eax,%ecx$/;"	l
f0105084	obj/kern/kernel.asm	/^f0105084:	31 d2                	xor    %edx,%edx$/;"	l
f0105086	obj/kern/kernel.asm	/^f0105086:	89 f0                	mov    %esi,%eax$/;"	l
f0105088	obj/kern/kernel.asm	/^f0105088:	f7 f1                	div    %ecx$/;"	l
f010508a	obj/kern/kernel.asm	/^f010508a:	89 c6                	mov    %eax,%esi$/;"	l
f010508c	obj/kern/kernel.asm	/^f010508c:	89 e8                	mov    %ebp,%eax$/;"	l
f010508e	obj/kern/kernel.asm	/^f010508e:	89 f7                	mov    %esi,%edi$/;"	l
f0105090	obj/kern/kernel.asm	/^f0105090:	f7 f1                	div    %ecx$/;"	l
f0105092	obj/kern/kernel.asm	/^f0105092:	89 fa                	mov    %edi,%edx$/;"	l
f0105094	obj/kern/kernel.asm	/^f0105094:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105097	obj/kern/kernel.asm	/^f0105097:	5b                   	pop    %ebx$/;"	l
f0105098	obj/kern/kernel.asm	/^f0105098:	5e                   	pop    %esi$/;"	l
f0105099	obj/kern/kernel.asm	/^f0105099:	5f                   	pop    %edi$/;"	l
f010509a	obj/kern/kernel.asm	/^f010509a:	5d                   	pop    %ebp$/;"	l
f010509b	obj/kern/kernel.asm	/^f010509b:	c3                   	ret    $/;"	l
f010509c	obj/kern/kernel.asm	/^f010509c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01050a0	obj/kern/kernel.asm	/^f01050a0:	39 f2                	cmp    %esi,%edx$/;"	l
f01050a2	obj/kern/kernel.asm	/^f01050a2:	77 7c                	ja     f0105120 <__udivdi3+0xd0>$/;"	l
f01050a4	obj/kern/kernel.asm	/^f01050a4:	0f bd fa             	bsr    %edx,%edi$/;"	l
f01050a7	obj/kern/kernel.asm	/^f01050a7:	83 f7 1f             	xor    $0x1f,%edi$/;"	l
f01050aa	obj/kern/kernel.asm	/^f01050aa:	0f 84 98 00 00 00    	je     f0105148 <__udivdi3+0xf8>$/;"	l
f01050b0	obj/kern/kernel.asm	/^f01050b0:	89 f9                	mov    %edi,%ecx$/;"	l
f01050b2	obj/kern/kernel.asm	/^f01050b2:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01050b7	obj/kern/kernel.asm	/^f01050b7:	29 f8                	sub    %edi,%eax$/;"	l
f01050b9	obj/kern/kernel.asm	/^f01050b9:	d3 e2                	shl    %cl,%edx$/;"	d
f01050bb	obj/kern/kernel.asm	/^f01050bb:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01050bf	obj/kern/kernel.asm	/^f01050bf:	89 c1                	mov    %eax,%ecx$/;"	l
f01050c1	obj/kern/kernel.asm	/^f01050c1:	89 da                	mov    %ebx,%edx$/;"	l
f01050c3	obj/kern/kernel.asm	/^f01050c3:	d3 ea                	shr    %cl,%edx$/;"	d
f01050c5	obj/kern/kernel.asm	/^f01050c5:	8b 4c 24 08          	mov    0x8(%esp),%ecx$/;"	l
f01050c9	obj/kern/kernel.asm	/^f01050c9:	09 d1                	or     %edx,%ecx$/;"	l
f01050cb	obj/kern/kernel.asm	/^f01050cb:	89 f2                	mov    %esi,%edx$/;"	l
f01050cd	obj/kern/kernel.asm	/^f01050cd:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f01050d1	obj/kern/kernel.asm	/^f01050d1:	89 f9                	mov    %edi,%ecx$/;"	l
f01050d3	obj/kern/kernel.asm	/^f01050d3:	d3 e3                	shl    %cl,%ebx$/;"	d
f01050d5	obj/kern/kernel.asm	/^f01050d5:	89 c1                	mov    %eax,%ecx$/;"	l
f01050d7	obj/kern/kernel.asm	/^f01050d7:	d3 ea                	shr    %cl,%edx$/;"	d
f01050d9	obj/kern/kernel.asm	/^f01050d9:	89 f9                	mov    %edi,%ecx$/;"	l
f01050db	obj/kern/kernel.asm	/^f01050db:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f01050df	obj/kern/kernel.asm	/^f01050df:	d3 e6                	shl    %cl,%esi$/;"	d
f01050e1	obj/kern/kernel.asm	/^f01050e1:	89 eb                	mov    %ebp,%ebx$/;"	l
f01050e3	obj/kern/kernel.asm	/^f01050e3:	89 c1                	mov    %eax,%ecx$/;"	l
f01050e5	obj/kern/kernel.asm	/^f01050e5:	d3 eb                	shr    %cl,%ebx$/;"	d
f01050e7	obj/kern/kernel.asm	/^f01050e7:	09 de                	or     %ebx,%esi$/;"	l
f01050e9	obj/kern/kernel.asm	/^f01050e9:	89 f0                	mov    %esi,%eax$/;"	l
f01050eb	obj/kern/kernel.asm	/^f01050eb:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f01050ef	obj/kern/kernel.asm	/^f01050ef:	89 d6                	mov    %edx,%esi$/;"	l
f01050f1	obj/kern/kernel.asm	/^f01050f1:	89 c3                	mov    %eax,%ebx$/;"	l
f01050f3	obj/kern/kernel.asm	/^f01050f3:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f01050f7	obj/kern/kernel.asm	/^f01050f7:	39 d6                	cmp    %edx,%esi$/;"	l
f01050f9	obj/kern/kernel.asm	/^f01050f9:	72 0c                	jb     f0105107 <__udivdi3+0xb7>$/;"	l
f01050fb	obj/kern/kernel.asm	/^f01050fb:	89 f9                	mov    %edi,%ecx$/;"	l
f01050fd	obj/kern/kernel.asm	/^f01050fd:	d3 e5                	shl    %cl,%ebp$/;"	d
f01050ff	obj/kern/kernel.asm	/^f01050ff:	39 c5                	cmp    %eax,%ebp$/;"	l
f0105101	obj/kern/kernel.asm	/^f0105101:	73 5d                	jae    f0105160 <__udivdi3+0x110>$/;"	l
f0105103	obj/kern/kernel.asm	/^f0105103:	39 d6                	cmp    %edx,%esi$/;"	l
f0105105	obj/kern/kernel.asm	/^f0105105:	75 59                	jne    f0105160 <__udivdi3+0x110>$/;"	l
f0105107	obj/kern/kernel.asm	/^f0105107:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
f010510a	obj/kern/kernel.asm	/^f010510a:	31 ff                	xor    %edi,%edi$/;"	l
f010510c	obj/kern/kernel.asm	/^f010510c:	89 fa                	mov    %edi,%edx$/;"	l
f010510e	obj/kern/kernel.asm	/^f010510e:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105111	obj/kern/kernel.asm	/^f0105111:	5b                   	pop    %ebx$/;"	l
f0105112	obj/kern/kernel.asm	/^f0105112:	5e                   	pop    %esi$/;"	l
f0105113	obj/kern/kernel.asm	/^f0105113:	5f                   	pop    %edi$/;"	l
f0105114	obj/kern/kernel.asm	/^f0105114:	5d                   	pop    %ebp$/;"	l
f0105115	obj/kern/kernel.asm	/^f0105115:	c3                   	ret    $/;"	l
f0105116	obj/kern/kernel.asm	/^f0105116:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0105119	obj/kern/kernel.asm	/^f0105119:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi$/;"	l
f0105120	obj/kern/kernel.asm	/^f0105120:	31 ff                	xor    %edi,%edi$/;"	l
f0105122	obj/kern/kernel.asm	/^f0105122:	31 c0                	xor    %eax,%eax$/;"	l
f0105124	obj/kern/kernel.asm	/^f0105124:	89 fa                	mov    %edi,%edx$/;"	l
f0105126	obj/kern/kernel.asm	/^f0105126:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105129	obj/kern/kernel.asm	/^f0105129:	5b                   	pop    %ebx$/;"	l
f010512a	obj/kern/kernel.asm	/^f010512a:	5e                   	pop    %esi$/;"	l
f010512b	obj/kern/kernel.asm	/^f010512b:	5f                   	pop    %edi$/;"	l
f010512c	obj/kern/kernel.asm	/^f010512c:	5d                   	pop    %ebp$/;"	l
f010512d	obj/kern/kernel.asm	/^f010512d:	c3                   	ret    $/;"	l
f010512e	obj/kern/kernel.asm	/^f010512e:	66 90                	xchg   %ax,%ax$/;"	l
f0105130	obj/kern/kernel.asm	/^f0105130:	31 ff                	xor    %edi,%edi$/;"	l
f0105132	obj/kern/kernel.asm	/^f0105132:	89 e8                	mov    %ebp,%eax$/;"	l
f0105134	obj/kern/kernel.asm	/^f0105134:	89 f2                	mov    %esi,%edx$/;"	l
f0105136	obj/kern/kernel.asm	/^f0105136:	f7 f3                	div    %ebx$/;"	l
f0105138	obj/kern/kernel.asm	/^f0105138:	89 fa                	mov    %edi,%edx$/;"	l
f010513a	obj/kern/kernel.asm	/^f010513a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010513d	obj/kern/kernel.asm	/^f010513d:	5b                   	pop    %ebx$/;"	l
f010513e	obj/kern/kernel.asm	/^f010513e:	5e                   	pop    %esi$/;"	l
f010513f	obj/kern/kernel.asm	/^f010513f:	5f                   	pop    %edi$/;"	l
f0105140	obj/kern/kernel.asm	/^f0105140:	5d                   	pop    %ebp$/;"	l
f0105141	obj/kern/kernel.asm	/^f0105141:	c3                   	ret    $/;"	l
f0105142	obj/kern/kernel.asm	/^f0105142:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0105148	obj/kern/kernel.asm	/^f0105148:	39 f2                	cmp    %esi,%edx$/;"	l
f010514a	obj/kern/kernel.asm	/^f010514a:	72 06                	jb     f0105152 <__udivdi3+0x102>$/;"	l
f010514c	obj/kern/kernel.asm	/^f010514c:	31 c0                	xor    %eax,%eax$/;"	l
f010514e	obj/kern/kernel.asm	/^f010514e:	39 eb                	cmp    %ebp,%ebx$/;"	l
f0105150	obj/kern/kernel.asm	/^f0105150:	77 d2                	ja     f0105124 <__udivdi3+0xd4>$/;"	l
f0105152	obj/kern/kernel.asm	/^f0105152:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0105157	obj/kern/kernel.asm	/^f0105157:	eb cb                	jmp    f0105124 <__udivdi3+0xd4>$/;"	l
f0105159	obj/kern/kernel.asm	/^f0105159:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0105160	obj/kern/kernel.asm	/^f0105160:	89 d8                	mov    %ebx,%eax$/;"	l
f0105162	obj/kern/kernel.asm	/^f0105162:	31 ff                	xor    %edi,%edi$/;"	l
f0105164	obj/kern/kernel.asm	/^f0105164:	eb be                	jmp    f0105124 <__udivdi3+0xd4>$/;"	l
f0105166	obj/kern/kernel.asm	/^f0105166:	66 90                	xchg   %ax,%ax$/;"	l
f0105168	obj/kern/kernel.asm	/^f0105168:	66 90                	xchg   %ax,%ax$/;"	l
f010516a	obj/kern/kernel.asm	/^f010516a:	66 90                	xchg   %ax,%ax$/;"	l
f010516c	obj/kern/kernel.asm	/^f010516c:	66 90                	xchg   %ax,%ax$/;"	l
f010516e	obj/kern/kernel.asm	/^f010516e:	66 90                	xchg   %ax,%ax$/;"	l
f0105170	obj/kern/kernel.asm	/^f0105170 <__umoddi3>:$/;"	l
f0105170	obj/kern/kernel.asm	/^f0105170:	55                   	push   %ebp$/;"	l
f0105171	obj/kern/kernel.asm	/^f0105171:	57                   	push   %edi$/;"	l
f0105172	obj/kern/kernel.asm	/^f0105172:	56                   	push   %esi$/;"	l
f0105173	obj/kern/kernel.asm	/^f0105173:	53                   	push   %ebx$/;"	l
f0105174	obj/kern/kernel.asm	/^f0105174:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105177	obj/kern/kernel.asm	/^f0105177:	8b 6c 24 3c          	mov    0x3c(%esp),%ebp$/;"	l
f010517b	obj/kern/kernel.asm	/^f010517b:	8b 74 24 30          	mov    0x30(%esp),%esi$/;"	l
f010517f	obj/kern/kernel.asm	/^f010517f:	8b 5c 24 34          	mov    0x34(%esp),%ebx$/;"	l
f0105183	obj/kern/kernel.asm	/^f0105183:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0105187	obj/kern/kernel.asm	/^f0105187:	85 ed                	test   %ebp,%ebp$/;"	l
f0105189	obj/kern/kernel.asm	/^f0105189:	89 f0                	mov    %esi,%eax$/;"	l
f010518b	obj/kern/kernel.asm	/^f010518b:	89 da                	mov    %ebx,%edx$/;"	l
f010518d	obj/kern/kernel.asm	/^f010518d:	75 19                	jne    f01051a8 <__umoddi3+0x38>$/;"	l
f010518f	obj/kern/kernel.asm	/^f010518f:	39 df                	cmp    %ebx,%edi$/;"	l
f0105191	obj/kern/kernel.asm	/^f0105191:	0f 86 b1 00 00 00    	jbe    f0105248 <__umoddi3+0xd8>$/;"	l
f0105197	obj/kern/kernel.asm	/^f0105197:	f7 f7                	div    %edi$/;"	l
f0105199	obj/kern/kernel.asm	/^f0105199:	89 d0                	mov    %edx,%eax$/;"	l
f010519b	obj/kern/kernel.asm	/^f010519b:	31 d2                	xor    %edx,%edx$/;"	l
f010519d	obj/kern/kernel.asm	/^f010519d:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01051a0	obj/kern/kernel.asm	/^f01051a0:	5b                   	pop    %ebx$/;"	l
f01051a1	obj/kern/kernel.asm	/^f01051a1:	5e                   	pop    %esi$/;"	l
f01051a2	obj/kern/kernel.asm	/^f01051a2:	5f                   	pop    %edi$/;"	l
f01051a3	obj/kern/kernel.asm	/^f01051a3:	5d                   	pop    %ebp$/;"	l
f01051a4	obj/kern/kernel.asm	/^f01051a4:	c3                   	ret    $/;"	l
f01051a5	obj/kern/kernel.asm	/^f01051a5:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01051a8	obj/kern/kernel.asm	/^f01051a8:	39 dd                	cmp    %ebx,%ebp$/;"	l
f01051aa	obj/kern/kernel.asm	/^f01051aa:	77 f1                	ja     f010519d <__umoddi3+0x2d>$/;"	l
f01051ac	obj/kern/kernel.asm	/^f01051ac:	0f bd cd             	bsr    %ebp,%ecx$/;"	l
f01051af	obj/kern/kernel.asm	/^f01051af:	83 f1 1f             	xor    $0x1f,%ecx$/;"	l
f01051b2	obj/kern/kernel.asm	/^f01051b2:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01051b6	obj/kern/kernel.asm	/^f01051b6:	0f 84 b4 00 00 00    	je     f0105270 <__umoddi3+0x100>$/;"	l
f01051bc	obj/kern/kernel.asm	/^f01051bc:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01051c1	obj/kern/kernel.asm	/^f01051c1:	89 c2                	mov    %eax,%edx$/;"	l
f01051c3	obj/kern/kernel.asm	/^f01051c3:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
f01051c7	obj/kern/kernel.asm	/^f01051c7:	29 c2                	sub    %eax,%edx$/;"	l
f01051c9	obj/kern/kernel.asm	/^f01051c9:	89 c1                	mov    %eax,%ecx$/;"	l
f01051cb	obj/kern/kernel.asm	/^f01051cb:	89 f8                	mov    %edi,%eax$/;"	l
f01051cd	obj/kern/kernel.asm	/^f01051cd:	d3 e5                	shl    %cl,%ebp$/;"	d
f01051cf	obj/kern/kernel.asm	/^f01051cf:	89 d1                	mov    %edx,%ecx$/;"	l
f01051d1	obj/kern/kernel.asm	/^f01051d1:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01051d5	obj/kern/kernel.asm	/^f01051d5:	d3 e8                	shr    %cl,%eax$/;"	d
f01051d7	obj/kern/kernel.asm	/^f01051d7:	09 c5                	or     %eax,%ebp$/;"	l
f01051d9	obj/kern/kernel.asm	/^f01051d9:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
f01051dd	obj/kern/kernel.asm	/^f01051dd:	89 c1                	mov    %eax,%ecx$/;"	l
f01051df	obj/kern/kernel.asm	/^f01051df:	d3 e7                	shl    %cl,%edi$/;"	d
f01051e1	obj/kern/kernel.asm	/^f01051e1:	89 d1                	mov    %edx,%ecx$/;"	l
f01051e3	obj/kern/kernel.asm	/^f01051e3:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f01051e7	obj/kern/kernel.asm	/^f01051e7:	89 df                	mov    %ebx,%edi$/;"	l
f01051e9	obj/kern/kernel.asm	/^f01051e9:	d3 ef                	shr    %cl,%edi$/;"	d
f01051eb	obj/kern/kernel.asm	/^f01051eb:	89 c1                	mov    %eax,%ecx$/;"	l
f01051ed	obj/kern/kernel.asm	/^f01051ed:	89 f0                	mov    %esi,%eax$/;"	l
f01051ef	obj/kern/kernel.asm	/^f01051ef:	d3 e3                	shl    %cl,%ebx$/;"	d
f01051f1	obj/kern/kernel.asm	/^f01051f1:	89 d1                	mov    %edx,%ecx$/;"	l
f01051f3	obj/kern/kernel.asm	/^f01051f3:	89 fa                	mov    %edi,%edx$/;"	l
f01051f5	obj/kern/kernel.asm	/^f01051f5:	d3 e8                	shr    %cl,%eax$/;"	d
f01051f7	obj/kern/kernel.asm	/^f01051f7:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f01051fc	obj/kern/kernel.asm	/^f01051fc:	09 d8                	or     %ebx,%eax$/;"	l
f01051fe	obj/kern/kernel.asm	/^f01051fe:	f7 f5                	div    %ebp$/;"	l
f0105200	obj/kern/kernel.asm	/^f0105200:	d3 e6                	shl    %cl,%esi$/;"	d
f0105202	obj/kern/kernel.asm	/^f0105202:	89 d1                	mov    %edx,%ecx$/;"	l
f0105204	obj/kern/kernel.asm	/^f0105204:	f7 64 24 08          	mull   0x8(%esp)$/;"	l
f0105208	obj/kern/kernel.asm	/^f0105208:	39 d1                	cmp    %edx,%ecx$/;"	l
f010520a	obj/kern/kernel.asm	/^f010520a:	89 c3                	mov    %eax,%ebx$/;"	l
f010520c	obj/kern/kernel.asm	/^f010520c:	89 d7                	mov    %edx,%edi$/;"	l
f010520e	obj/kern/kernel.asm	/^f010520e:	72 06                	jb     f0105216 <__umoddi3+0xa6>$/;"	l
f0105210	obj/kern/kernel.asm	/^f0105210:	75 0e                	jne    f0105220 <__umoddi3+0xb0>$/;"	l
f0105212	obj/kern/kernel.asm	/^f0105212:	39 c6                	cmp    %eax,%esi$/;"	l
f0105214	obj/kern/kernel.asm	/^f0105214:	73 0a                	jae    f0105220 <__umoddi3+0xb0>$/;"	l
f0105216	obj/kern/kernel.asm	/^f0105216:	2b 44 24 08          	sub    0x8(%esp),%eax$/;"	l
f010521a	obj/kern/kernel.asm	/^f010521a:	19 ea                	sbb    %ebp,%edx$/;"	l
f010521c	obj/kern/kernel.asm	/^f010521c:	89 d7                	mov    %edx,%edi$/;"	l
f010521e	obj/kern/kernel.asm	/^f010521e:	89 c3                	mov    %eax,%ebx$/;"	l
f0105220	obj/kern/kernel.asm	/^f0105220:	89 ca                	mov    %ecx,%edx$/;"	l
f0105222	obj/kern/kernel.asm	/^f0105222:	0f b6 4c 24 0c       	movzbl 0xc(%esp),%ecx$/;"	l
f0105227	obj/kern/kernel.asm	/^f0105227:	29 de                	sub    %ebx,%esi$/;"	l
f0105229	obj/kern/kernel.asm	/^f0105229:	19 fa                	sbb    %edi,%edx$/;"	l
f010522b	obj/kern/kernel.asm	/^f010522b:	8b 5c 24 04          	mov    0x4(%esp),%ebx$/;"	l
f010522f	obj/kern/kernel.asm	/^f010522f:	89 d0                	mov    %edx,%eax$/;"	l
f0105231	obj/kern/kernel.asm	/^f0105231:	d3 e0                	shl    %cl,%eax$/;"	d
f0105233	obj/kern/kernel.asm	/^f0105233:	89 d9                	mov    %ebx,%ecx$/;"	l
f0105235	obj/kern/kernel.asm	/^f0105235:	d3 ee                	shr    %cl,%esi$/;"	d
f0105237	obj/kern/kernel.asm	/^f0105237:	d3 ea                	shr    %cl,%edx$/;"	d
f0105239	obj/kern/kernel.asm	/^f0105239:	09 f0                	or     %esi,%eax$/;"	l
f010523b	obj/kern/kernel.asm	/^f010523b:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010523e	obj/kern/kernel.asm	/^f010523e:	5b                   	pop    %ebx$/;"	l
f010523f	obj/kern/kernel.asm	/^f010523f:	5e                   	pop    %esi$/;"	l
f0105240	obj/kern/kernel.asm	/^f0105240:	5f                   	pop    %edi$/;"	l
f0105241	obj/kern/kernel.asm	/^f0105241:	5d                   	pop    %ebp$/;"	l
f0105242	obj/kern/kernel.asm	/^f0105242:	c3                   	ret    $/;"	l
f0105243	obj/kern/kernel.asm	/^f0105243:	90                   	nop$/;"	l
f0105244	obj/kern/kernel.asm	/^f0105244:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0105248	obj/kern/kernel.asm	/^f0105248:	85 ff                	test   %edi,%edi$/;"	l
f010524a	obj/kern/kernel.asm	/^f010524a:	89 f9                	mov    %edi,%ecx$/;"	l
f010524c	obj/kern/kernel.asm	/^f010524c:	75 0b                	jne    f0105259 <__umoddi3+0xe9>$/;"	l
f010524e	obj/kern/kernel.asm	/^f010524e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0105253	obj/kern/kernel.asm	/^f0105253:	31 d2                	xor    %edx,%edx$/;"	l
f0105255	obj/kern/kernel.asm	/^f0105255:	f7 f7                	div    %edi$/;"	l
f0105257	obj/kern/kernel.asm	/^f0105257:	89 c1                	mov    %eax,%ecx$/;"	l
f0105259	obj/kern/kernel.asm	/^f0105259:	89 d8                	mov    %ebx,%eax$/;"	l
f010525b	obj/kern/kernel.asm	/^f010525b:	31 d2                	xor    %edx,%edx$/;"	l
f010525d	obj/kern/kernel.asm	/^f010525d:	f7 f1                	div    %ecx$/;"	l
f010525f	obj/kern/kernel.asm	/^f010525f:	89 f0                	mov    %esi,%eax$/;"	l
f0105261	obj/kern/kernel.asm	/^f0105261:	f7 f1                	div    %ecx$/;"	l
f0105263	obj/kern/kernel.asm	/^f0105263:	e9 31 ff ff ff       	jmp    f0105199 <__umoddi3+0x29>$/;"	l
f0105268	obj/kern/kernel.asm	/^f0105268:	90                   	nop$/;"	l
f0105269	obj/kern/kernel.asm	/^f0105269:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0105270	obj/kern/kernel.asm	/^f0105270:	39 dd                	cmp    %ebx,%ebp$/;"	l
f0105272	obj/kern/kernel.asm	/^f0105272:	72 08                	jb     f010527c <__umoddi3+0x10c>$/;"	l
f0105274	obj/kern/kernel.asm	/^f0105274:	39 f7                	cmp    %esi,%edi$/;"	l
f0105276	obj/kern/kernel.asm	/^f0105276:	0f 87 21 ff ff ff    	ja     f010519d <__umoddi3+0x2d>$/;"	l
f010527c	obj/kern/kernel.asm	/^f010527c:	89 da                	mov    %ebx,%edx$/;"	l
f010527e	obj/kern/kernel.asm	/^f010527e:	89 f0                	mov    %esi,%eax$/;"	l
f0105280	obj/kern/kernel.asm	/^f0105280:	29 f8                	sub    %edi,%eax$/;"	l
f0105282	obj/kern/kernel.asm	/^f0105282:	19 ea                	sbb    %ebp,%edx$/;"	l
f0105284	obj/kern/kernel.asm	/^f0105284:	e9 14 ff ff ff       	jmp    f010519d <__umoddi3+0x2d>$/;"	l
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon1
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
first_loop	obj/kern/kernel.asm	/^        first_loop = false;$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:
fork	lib/fork.c	/^fork(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
fs_test	fs/test.c	/^fs_test(void)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt	obj/user/evilhello2.asm	/^    gdt = (struct Segdesc*)(base+offset); $/;"	d
gdt	user/evilhello2.c	/^struct Segdesc *gdt;$/;"	v	typeref:struct:Segdesc
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	kern/init.c	/^i386_init(void)$/;"	f
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:
inb	inc/x86.h	/^inb(int port)$/;"	f
inl	inc/x86.h	/^inl(int port)$/;"	f
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/evilhello2.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/sbrktest.asm	/^int$/;"	l
int	obj/user/sendpage.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/sendpage.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
kill	gradelib.py	/^    def kill(self):$/;"	f
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic	obj/kern/kernel.asm	/^	lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:
lapicaddr	obj/kern/kernel.asm	/^		lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^	lapicaddr = conf->lapicaddr;$/;"	d
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sbrktest.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sendpage.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:
load_idt	kern/trap.c	/^load_idt(size_t i, bool is_trap, void *p) {$/;"	f
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/evilhello2.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/sbrktest.asm	/^long$/;"	l
long	obj/user/sendpage.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mm1	obj/kern/kernel.asm	/^	mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f
mp_main	kern/init.c	/^mp_main(void)$/;"	f
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
need_sign	obj/kern/kernel.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/kern/kernel.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/badsegment.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/badsegment.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/breakpoint.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/breakpoint.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/buggyhello.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/buggyhello.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/buggyhello2.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/buggyhello2.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/divzero.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/divzero.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/dumbfork.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/dumbfork.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/evilhello.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/evilhello.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/evilhello2.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/evilhello2.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/fairness.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/fairness.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/faultalloc.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/faultalloc.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/faultallocbad.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/faultallocbad.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/faultbadhandler.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/faultbadhandler.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/faultdie.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/faultdie.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/faultevilhandler.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/faultevilhandler.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/faultnostack.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/faultnostack.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/faultread.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/faultread.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/faultreadkernel.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/faultreadkernel.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/faultregs.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/faultregs.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/faultwrite.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/faultwrite.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/faultwritekernel.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/faultwritekernel.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/forktree.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/forktree.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/hello.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/hello.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/idle.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/idle.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/pingpong.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/pingpong.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/pingpongs.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/pingpongs.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/primes.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/primes.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/sbrktest.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/sbrktest.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/sendpage.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/sendpage.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/softint.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/softint.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/spin.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/spin.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/stresssched.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/stresssched.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/testbss.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/testbss.asm	/^		need_sign = 0;$/;"	d
need_sign	obj/user/yield.asm	/^			need_sign = 1;$/;"	d
need_sign	obj/user/yield.asm	/^		need_sign = 0;$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE) + PGSIZE;$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^	npages = totalmem \/ (PGSIZE \/ 1024);$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = basemem \/ (PGSIZE \/ 1024);$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sbrktest.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sbrktest.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sbrktest.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sendpage.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sendpage.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	73;"	d
old	user/evilhello2.c	/^struct Segdesc old;$/;"	v	typeref:struct:Segdesc
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
overflow_me	kern/monitor.c	/^overflow_me(void)$/;"	f
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/sbrktest.asm	/^				p = "(null)";$/;"	d
p	obj/user/sendpage.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^		padc = ' ';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^		padc = ' ';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^		padc = ' ';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^		padc = ' ';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^		padc = ' ';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^		padc = ' ';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^		padc = ' ';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^		padc = ' ';$/;"	d
padc	obj/user/evilhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello2.asm	/^		padc = ' ';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^		padc = ' ';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^		padc = ' ';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^		padc = ' ';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^		padc = ' ';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^		padc = ' ';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^		padc = ' ';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^		padc = ' ';$/;"	d
padc	obj/user/sbrktest.asm	/^			padc = '-';$/;"	d
padc	obj/user/sbrktest.asm	/^			padc = '0';$/;"	d
padc	obj/user/sbrktest.asm	/^		padc = ' ';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '-';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '0';$/;"	d
padc	obj/user/sendpage.asm	/^		padc = ' ';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^		padc = ' ';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^		padc = ' ';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^		padc = ' ';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^		padc = ' ';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^			page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = ret_pg->pp_link;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^	pages = (struct PageInfo *)boot_alloc(npages*sizeof(struct PageInfo));$/;"	d
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pchar	obj/kern/kernel.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/badsegment.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/breakpoint.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/buggyhello.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/buggyhello2.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/divzero.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/dumbfork.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/evilhello.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/evilhello2.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/fairness.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/faultalloc.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/faultallocbad.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/faultbadhandler.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/faultdie.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/faultevilhandler.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/faultnostack.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/faultread.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/faultreadkernel.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/faultregs.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/faultwrite.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/faultwritekernel.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/forktree.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/hello.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/idle.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/pingpong.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/pingpongs.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/primes.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/sbrktest.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/sendpage.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/softint.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/spin.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/stresssched.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/testbss.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pchar	obj/user/yield.asm	/^		  	pchar = va_arg(ap, char*);$/;"	d
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
physaddr_t	obj/kern/kernel.asm	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	l
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp	obj/kern/kernel.asm	/^            pp = page_alloc(ALLOC_ZERO);$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/sbrktest.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sbrktest.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sbrktest.asm	/^		precision = -1;$/;"	d
precision	obj/user/sendpage.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sendpage.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sendpage.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
primeproc	user/primes.c	/^primeproc(void)$/;"	f
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/kern/kernel.asm	/^    r = page_insert(curenv->env_pgdir, p, va, PTE_U | PTE_W);$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sbrktest.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sendpage.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_pretaddr	kern/monitor.c	/^read_pretaddr() {$/;"	f	file:
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
result	obj/kern/kernel.asm	/^	result = nextfree;$/;"	d
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/sbrktest.asm	/^	ret = dst;$/;"	d
ret	obj/user/sendpage.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
ring0_call	user/evilhello2.c	/^void ring0_call(void (*fun_ptr)(void)) {$/;"	f
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon5	file:
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/evilhello2.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/sbrktest.asm	/^	s = (char *) start;$/;"	d
s	obj/user/sbrktest.asm	/^	s = src;$/;"	d
s	obj/user/sendpage.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
sfork	lib/fork.c	/^sfork(void)$/;"	f
sgdt	user/evilhello2.c	/^sgdt(struct Pseudodesc* gdtd)$/;"	f	file:
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/evilhello2.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/sbrktest.asm	/^size_t$/;"	l
size_t	obj/user/sendpage.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start	obj/user/sbrktest.asm	/^	start = sys_sbrk(0);$/;"	d
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
start_overflow	kern/monitor.c	/^start_overflow(void)$/;"	f
static	obj/boot/boot.asm	/^static inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/evilhello2.asm	/^static inline void$/;"	l
static	obj/user/evilhello2.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/sbrktest.asm	/^static void$/;"	l
static	obj/user/sendpage.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_map_kernel_page	kern/syscall.c	/^sys_map_kernel_page(void* kpage, void* va)$/;"	f	file:
sys_map_kernel_page	lib/syscall.c	/^sys_map_kernel_page(void* kpage, void* va)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_sbrk	kern/syscall.c	/^sys_sbrk(uint32_t inc)$/;"	f	file:
sys_sbrk	lib/syscall.c	/^sys_sbrk(uint32_t inc)$/;"	f
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
test_divzero	grade-lab3	/^def test_divzero():$/;"	f
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f
test_evilhello2	grade-lab3	/^def test_evilhello2():$/;"	f
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f
test_faultread	grade-lab3	/^def test_faultread():$/;"	f
test_faultread	grade-lab4	/^def test_faultread():$/;"	f
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f
test_forktree	grade-lab4	/^def test_forktree():$/;"	f
test_hello	grade-lab3	/^def test_hello():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f
test_primes	grade-lab4	/^def test_primes():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
test_sbrk	grade-lab3	/^def test_sbrk():$/;"	f
test_sendpage	grade-lab4	/^def test_sendpage():$/;"	f
test_softint	grade-lab3	/^def test_softint():$/;"	f
test_spin	grade-lab4	/^def test_spin():$/;"	f
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f
test_testbss	grade-lab3	/^def test_testbss():$/;"	f
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
thiscpu	kern/cpu.h	38;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/user/badsegment.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/evilhello2.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/sbrktest.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/sendpage.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
totalmem	obj/kern/kernel.asm	/^		totalmem = 1 * 1024 + extmem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = 16 * 1024 + ext16mem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = basemem;$/;"	d
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon1
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/evilhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sbrktest.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^            user_mem_check_addr = first_loop ? (uintptr_t)va : (uintptr_t)ROUNDDOWN(va, PGSIZE);$/;"	d
user_mem_check_addr	obj/kern/kernel.asm	/^        user_mem_check_addr = (uintptr_t)ULIM;$/;"	d
user_mem_check_addr	obj/kern/kernel.asm	/^        user_mem_check_addr = (uintptr_t)va;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va	obj/kern/kernel.asm	/^    va = ROUNDDOWN(va, PGSIZE);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
vaddr	user/evilhello2.c	/^char vaddr[PGSIZE];$/;"	v
val	user/pingpongs.c	/^uint32_t val;$/;"	v
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void $/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/evilhello2.asm	/^void *$/;"	l
void	obj/user/evilhello2.asm	/^void call_fun_ptr()$/;"	l
void	obj/user/evilhello2.asm	/^void evil()$/;"	l
void	obj/user/evilhello2.asm	/^void ring0_call(void (*fun_ptr)(void)) {$/;"	l
void	obj/user/evilhello2.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/sbrktest.asm	/^void *$/;"	l
void	obj/user/sbrktest.asm	/^void$/;"	l
void	obj/user/sendpage.asm	/^void *$/;"	l
void	obj/user/sendpage.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
wait	gradelib.py	/^    def wait(self):$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello2.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/sbrktest.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sbrktest.asm	/^		width = -1;$/;"	d
width	obj/user/sendpage.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sendpage.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon5	file:
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
